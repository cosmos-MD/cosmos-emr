{
  "version": 3,
  "sources": ["../../../../node_modules/@medplum/react-hooks/src/MedplumProvider/MedplumProvider.tsx", "../../../../node_modules/@medplum/react-hooks/src/MedplumProvider/MedplumProvider.context.ts", "../../../../node_modules/@medplum/react-hooks/src/useResource/useResource.ts", "../../../../node_modules/@medplum/react-hooks/src/useSearch/useSearch.ts", "../../../../node_modules/@medplum/react/src/AddressDisplay/AddressDisplay.tsx", "../../../../node_modules/@medplum/react/src/AddressInput/AddressInput.tsx", "../../../../node_modules/@medplum/react/src/AnnotationInput/AnnotationInput.tsx", "../../../../node_modules/@medplum/react/src/AppShell/AppShell.tsx", "../../../../node_modules/@medplum/react/src/ErrorBoundary/ErrorBoundary.tsx", "../../../../node_modules/node_modules/@tabler/icons-react/src/defaultAttributes.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/createReactComponent.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconAdjustmentsHorizontal.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconAlertCircle.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconArrowDown.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconArrowUp.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconBleachOff.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconBleach.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconBoxMultiple.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconBracketsContain.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconBucketOff.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconBucket.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconCalendar.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconCheck.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconCheckbox.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconChevronDown.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconCircleMinus.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconCirclePlus.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconCloudUpload.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconColumns.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconCopy.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconCurrencyDollar.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconDots.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconEdit.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconEqualNot.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconEqual.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconFileAlert.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconFilePlus.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconFilter.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconListDetails.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconLogout.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconMathGreater.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconMathLower.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconMessage.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconPin.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconPinnedOff.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconPlus.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconRefresh.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconSearch.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconSettings.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconSortAscending.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconSortDescending.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconSquare.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconSwitchHorizontal.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconTableExport.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconTrash.js", "../../../../node_modules/node_modules/@tabler/icons-react/src/icons/IconX.js", "../../../../node_modules/@medplum/react/src/Loading/Loading.tsx", "../../../../node_modules/@medplum/react/src/AppShell/Header.tsx", "../../../../node_modules/@medplum/react/src/HumanNameDisplay/HumanNameDisplay.tsx", "../../../../node_modules/@medplum/react/src/ResourceAvatar/ResourceAvatar.tsx", "../../../../node_modules/@medplum/react/src/MedplumLink/MedplumLink.tsx", "../../../../node_modules/@medplum/react/src/utils/dom.ts", "../../../../node_modules/@medplum/react/src/AppShell/HeaderSearchInput.tsx", "../../../../node_modules/@medplum/react/src/AsyncAutocomplete/AsyncAutocomplete.tsx", "../../../../node_modules/@medplum/react/src/AppShell/Navbar.tsx", "../../../../node_modules/@medplum/react/src/BookmarkDialog/BookmarkDialog.tsx", "../../../../node_modules/@medplum/react/src/Form/Form.tsx", "../../../../node_modules/@medplum/react/src/Form/FormUtils.ts", "../../../../node_modules/@medplum/react/src/ResourceTypeInput/ResourceTypeInput.tsx", "../../../../node_modules/@medplum/react/src/CodeInput/CodeInput.tsx", "../../../../node_modules/@medplum/react/src/ValueSetAutocomplete/ValueSetAutocomplete.tsx", "../../../../node_modules/@medplum/react/src/AttachmentArrayDisplay/AttachmentArrayDisplay.tsx", "../../../../node_modules/@medplum/react/src/AttachmentDisplay/AttachmentDisplay.tsx", "../../../../node_modules/@medplum/react/src/AttachmentArrayInput/AttachmentArrayInput.tsx", "../../../../node_modules/@medplum/react/src/AttachmentButton/AttachmentButton.tsx", "../../../../node_modules/@medplum/react/src/AttachmentInput/AttachmentInput.tsx", "../../../../node_modules/@medplum/react/src/BackboneElementDisplay/BackboneElementDisplay.tsx", "../../../../node_modules/@medplum/react/src/constants.ts", "../../../../node_modules/@medplum/react/src/DescriptionList/DescriptionList.tsx", "../../../../node_modules/@medplum/react/src/ResourcePropertyDisplay/ResourcePropertyDisplay.tsx", "../../../../node_modules/@medplum/react/src/CodeableConceptDisplay/CodeableConceptDisplay.tsx", "../../../../node_modules/@medplum/react/src/CodingDisplay/CodingDisplay.tsx", "../../../../node_modules/@medplum/react/src/ContactDetailDisplay/ContactDetailDisplay.tsx", "../../../../node_modules/@medplum/react/src/ContactPointDisplay/ContactPointDisplay.tsx", "../../../../node_modules/@medplum/react/src/IdentifierDisplay/IdentifierDisplay.tsx", "../../../../node_modules/@medplum/react/src/MoneyDisplay/MoneyDisplay.tsx", "../../../../node_modules/@medplum/react/src/QuantityDisplay/QuantityDisplay.tsx", "../../../../node_modules/@medplum/react/src/RangeDisplay/RangeDisplay.tsx", "../../../../node_modules/@medplum/react/src/RatioDisplay/RatioDisplay.tsx", "../../../../node_modules/@medplum/react/src/ReferenceDisplay/ReferenceDisplay.tsx", "../../../../node_modules/@medplum/react/src/ResourceArrayDisplay/ResourceArrayDisplay.tsx", "../../../../node_modules/@medplum/react/src/ResourcePropertyDisplay/ResourcePropertyDisplay.utils.ts", "../../../../node_modules/@medplum/react/src/BackboneElementInput/BackboneElementInput.tsx", "../../../../node_modules/@medplum/react/src/CheckboxFormSection/CheckboxFormSection.tsx", "../../../../node_modules/@medplum/react/src/FormSection/FormSection.tsx", "../../../../node_modules/@medplum/react/src/utils/outcomes.ts", "../../../../node_modules/@medplum/react/src/ResourceForm/ResourceForm.utils.ts", "../../../../node_modules/@medplum/react/src/ResourcePropertyInput/ResourcePropertyInput.tsx", "../../../../node_modules/@medplum/react/src/CodeableConceptInput/CodeableConceptInput.tsx", "../../../../node_modules/@medplum/react/src/CodingInput/CodingInput.tsx", "../../../../node_modules/@medplum/react/src/ContactDetailInput/ContactDetailInput.tsx", "../../../../node_modules/@medplum/react/src/ContactPointInput/ContactPointInput.tsx", "../../../../node_modules/@medplum/react/src/DateTimeInput/DateTimeInput.tsx", "../../../../node_modules/@medplum/react/src/DateTimeInput/DateTimeInput.utils.ts", "../../../../node_modules/@medplum/react/src/ExtensionInput/ExtensionInput.tsx", "../../../../node_modules/@medplum/react/src/HumanNameInput/HumanNameInput.tsx", "../../../../node_modules/@medplum/react/src/IdentifierInput/IdentifierInput.tsx", "../../../../node_modules/@medplum/react/src/MoneyInput/MoneyInput.tsx", "../../../../node_modules/@medplum/react/src/PeriodInput/PeriodInput.tsx", "../../../../node_modules/@medplum/react/src/QuantityInput/QuantityInput.tsx", "../../../../node_modules/@medplum/react/src/RangeInput/RangeInput.tsx", "../../../../node_modules/@medplum/react/src/RatioInput/RatioInput.tsx", "../../../../node_modules/@medplum/react/src/ReferenceInput/ReferenceInput.tsx", "../../../../node_modules/@medplum/react/src/ResourceInput/ResourceInput.tsx", "../../../../node_modules/@medplum/react/src/ResourceArrayInput/ResourceArrayInput.tsx", "../../../../node_modules/@medplum/react/src/TimingInput/TimingInput.tsx", "../../../../node_modules/@medplum/react/src/CalendarInput/CalendarInput.tsx", "../../../../node_modules/@medplum/react/src/CalendarInput/CalendarInput.utils.ts", "../../../../node_modules/@medplum/react/src/Container/Container.tsx", "../../../../node_modules/@medplum/react/src/DefaultResourceTimeline/DefaultResourceTimeline.tsx", "../../../../node_modules/@medplum/react/src/ResourceTimeline/ResourceTimeline.tsx", "../../../../node_modules/@medplum/react/src/DiagnosticReportDisplay/DiagnosticReportDisplay.tsx", "../../../../node_modules/@medplum/react/src/NoteDisplay/NoteDisplay.tsx", "../../../../node_modules/@medplum/react/src/ResourceBadge/ResourceBadge.tsx", "../../../../node_modules/@medplum/react/src/ResourceName/ResourceName.tsx", "../../../../node_modules/@medplum/react/src/StatusBadge/StatusBadge.tsx", "../../../../node_modules/@medplum/react/src/Panel/Panel.tsx", "../../../../node_modules/@medplum/react/src/ResourceDiffTable/ResourceDiffTable.tsx", "../../../../node_modules/@medplum/react/src/ResourceTable/ResourceTable.tsx", "../../../../node_modules/@medplum/react/src/Timeline/Timeline.tsx", "../../../../node_modules/@medplum/react/src/utils/date.ts", "../../../../node_modules/@medplum/react/src/Document/Document.tsx", "../../../../node_modules/@medplum/react/src/EncounterTimeline/EncounterTimeline.tsx", "../../../../node_modules/@medplum/react/src/FhirPathTable/FhirPathTable.tsx", "../../../../node_modules/@medplum/react/src/FhirPathDisplay/FhirPathDisplay.tsx", "../../../../node_modules/@medplum/react/src/SearchControl/SearchControl.tsx", "../../../../node_modules/@medplum/react/src/SearchExportDialog/SearchExportDialog.tsx", "../../../../node_modules/@medplum/react/src/SearchFieldEditor/SearchFieldEditor.tsx", "../../../../node_modules/@medplum/react/src/SearchControl/SearchUtils.tsx", "../../../../node_modules/@medplum/react/src/SearchFilterEditor/SearchFilterEditor.tsx", "../../../../node_modules/@medplum/react/src/SearchFilterValueDisplay/SearchFilterValueDisplay.tsx", "../../../../node_modules/@medplum/react/src/SearchFilterValueInput/SearchFilterValueInput.tsx", "../../../../node_modules/@medplum/react/src/SearchFilterValueDialog/SearchFilterValueDialog.tsx", "../../../../node_modules/@medplum/react/src/SearchPopupMenu/SearchPopupMenu.tsx", "../../../../node_modules/@medplum/react/src/SearchControl/SearchControlField.ts", "../../../../node_modules/@medplum/react/src/Logo/Logo.tsx", "../../../../node_modules/@medplum/react/src/MeasureReportDisplay/MeasureReportDisplay.tsx", "../../../../node_modules/@medplum/react/src/MeasureReportDisplay/MeasureReportGroupDisplay/MeasureReportGroupDisplay.tsx", "../../../../node_modules/@medplum/react/src/OperationOutcomeAlert/OperationOutcomeAlert.tsx", "../../../../node_modules/@medplum/react/src/PatientTimeline/PatientTimeline.tsx", "../../../../node_modules/@medplum/react/src/PlanDefinitionBuilder/PlanDefinitionBuilder.tsx", "../../../../node_modules/@medplum/react/src/QuestionnaireBuilder/QuestionnaireBuilder.tsx", "../../../../node_modules/@medplum/react/src/QuestionnaireForm/QuestionnaireFormItem/QuestionnaireFormItem.tsx", "../../../../node_modules/@medplum/react/src/utils/questionnaire.ts", "../../../../node_modules/@medplum/react/src/QuestionnaireForm/QuestionnaireForm.tsx", "../../../../node_modules/@medplum/react/src/QuestionnaireForm/QuestionnaireFormComponents/QuestionnaireFormPageSequence.tsx", "../../../../node_modules/@medplum/react/src/QuestionnaireForm/QuestionnaireFormItem/QuestionnaireRepeatableItem.tsx", "../../../../node_modules/@medplum/react/src/QuestionnaireForm/QuestionnaireFormComponents/QuestionnaireFormGroup.tsx", "../../../../node_modules/@medplum/react/src/ReferenceRangeEditor/ReferenceRangeEditor.tsx", "../../../../node_modules/@medplum/react/src/RequestGroupDisplay/RequestGroupDisplay.tsx", "../../../../node_modules/@medplum/react/src/ResourceBlame/ResourceBlame.tsx", "../../../../node_modules/@medplum/react/src/utils/blame.ts", "../../../../node_modules/@medplum/react/src/utils/diff.ts", "../../../../node_modules/@medplum/react/src/ResourceBlame/ResourceBlame.utils.ts", "../../../../node_modules/@medplum/react/src/ResourceDiff/ResourceDiff.tsx", "../../../../node_modules/@medplum/react/src/ResourceForm/ResourceForm.tsx", "../../../../node_modules/@medplum/react/src/ResourceHistoryTable/ResourceHistoryTable.tsx", "../../../../node_modules/@medplum/react/src/Scheduler/Scheduler.tsx", "../../../../node_modules/@medplum/react/src/ServiceRequestTimeline/ServiceRequestTimeline.tsx", "../../../../node_modules/@medplum/react/src/auth/RegisterForm.tsx", "../../../../node_modules/@medplum/react/src/auth/NewProjectForm.tsx", "../../../../node_modules/@medplum/react/src/auth/NewUserForm.tsx", "../../../../node_modules/@medplum/react/src/GoogleButton/GoogleButton.tsx", "../../../../node_modules/@medplum/react/src/utils/script.ts", "../../../../node_modules/@medplum/react/src/GoogleButton/GoogleButton.utils.ts", "../../../../node_modules/@medplum/react/src/utils/recaptcha.ts", "../../../../node_modules/@medplum/react/src/auth/SignInForm.tsx", "../../../../node_modules/@medplum/react/src/auth/AuthenticationForm.tsx", "../../../../node_modules/@medplum/react/src/auth/ChooseProfileForm.tsx", "../../../../node_modules/@medplum/react/src/auth/ChooseScopeForm.tsx", "../../../../node_modules/@medplum/react/src/auth/MfaForm.tsx", "../../../../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js", "../../../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js", "../../../../node_modules/react-transition-group/esm/CSSTransition.js", "../../../../node_modules/dom-helpers/esm/hasClass.js", "../../../../node_modules/dom-helpers/esm/addClass.js", "../../../../node_modules/dom-helpers/esm/removeClass.js", "../../../../node_modules/react-transition-group/esm/Transition.js", "../../../../node_modules/react-transition-group/esm/config.js", "../../../../node_modules/react-transition-group/esm/utils/PropTypes.js", "../../../../node_modules/react-transition-group/esm/TransitionGroupContext.js", "../../../../node_modules/react-transition-group/esm/ReplaceTransition.js", "../../../../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js", "../../../../node_modules/react-transition-group/esm/TransitionGroup.js", "../../../../node_modules/react-transition-group/esm/utils/ChildMapping.js", "../../../../node_modules/react-transition-group/esm/SwitchTransition.js", "../../../../node_modules/@mantine/notifications/src/events.ts", "../../../../node_modules/@mantine/notifications/src/Notifications/get-position-styles/get-position-styles.ts", "../../../../node_modules/@mantine/notifications/src/Notifications/get-notification-state-styles/get-notification-state-styles.ts", "../../../../node_modules/@mantine/notifications/src/NotificationContainer/get-auto-close/get-auto-close.ts", "../../../../node_modules/@mantine/notifications/src/NotificationContainer/NotificationContainer.tsx", "../../../../node_modules/@mantine/notifications/src/Notifications/Notifications.styles.ts", "../../../../node_modules/@mantine/notifications/src/Notifications/use-notifications-state/use-notifications-state.ts", "../../../../node_modules/@mantine/notifications/src/Notifications/Notifications.tsx"],
  "sourcesContent": ["import { MedplumClient } from '@medplum/core';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { MepdlumNavigateFunction, reactContext } from './MedplumProvider.context';\n\nexport interface MedplumProviderProps {\n  medplum: MedplumClient;\n  navigate?: MepdlumNavigateFunction;\n  children: React.ReactNode;\n}\n\n/**\n * The MedplumProvider component provides Medplum context state.\n *\n * Medplum context includes:\n *   1) medplum - Medplum client library\n *   2) profile - The current user profile (if signed in)\n * @param props - The MedplumProvider React props.\n * @returns The MedplumProvider React node.\n */\nexport function MedplumProvider(props: MedplumProviderProps): JSX.Element {\n  const medplum = props.medplum;\n  const navigate = props.navigate ?? defaultNavigate;\n\n  const [state, setState] = useState({\n    profile: medplum.getProfile(),\n    loading: false,\n  });\n\n  useEffect(() => {\n    function eventListener(): void {\n      setState({\n        ...state,\n        profile: medplum.getProfile(),\n      });\n    }\n\n    medplum.addEventListener('change', eventListener);\n    return () => medplum.removeEventListener('change', eventListener);\n  }, [medplum, state]);\n\n  const medplumContext = useMemo(\n    () => ({\n      ...state,\n      medplum,\n      navigate,\n    }),\n    [state, medplum, navigate]\n  );\n\n  return <reactContext.Provider value={medplumContext}>{props.children}</reactContext.Provider>;\n}\n\n/**\n * The default \"navigate\" function which simply uses window.location.href.\n * @param path - The path to navigate to.\n */\nfunction defaultNavigate(path: string): void {\n  window.location.assign(path);\n}\n", "import { MedplumClient, ProfileResource } from '@medplum/core';\nimport { createContext, useContext } from 'react';\n\nexport const reactContext = createContext(undefined as MedplumContext | undefined);\n\nexport type MepdlumNavigateFunction = (path: string) => void;\n\nexport interface MedplumContext {\n  medplum: MedplumClient;\n  navigate: MepdlumNavigateFunction;\n  profile?: ProfileResource;\n  loading: boolean;\n}\n\n/**\n * Returns the MedplumContext instance.\n * @returns The MedplumContext instance.\n */\nexport function useMedplumContext(): MedplumContext {\n  return useContext(reactContext) as MedplumContext;\n}\n\n/**\n * Returns the MedplumClient instance.\n * This is a shortcut for useMedplumContext().medplum.\n * @returns The MedplumClient instance.\n */\nexport function useMedplum(): MedplumClient {\n  return useMedplumContext().medplum;\n}\n\n/**\n * Returns the Medplum navigate function.\n * @returns The Medplum navigate function.\n */\nexport function useMedplumNavigate(): MepdlumNavigateFunction {\n  return useMedplumContext().navigate;\n}\n\n/**\n * Returns the current Medplum user profile (if signed in).\n * This is a shortcut for useMedplumContext().profile.\n * @returns The current user profile.\n */\nexport function useMedplumProfile(): ProfileResource | undefined {\n  return useMedplumContext().profile;\n}\n", "import { deepEquals, isReference, isResource, MedplumClient, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome, Reference, Resource } from '@medplum/fhirtypes';\nimport { useCallback, useEffect, useState } from 'react';\nimport { useMedplum } from '../MedplumProvider/MedplumProvider.context';\n\n/**\n * React Hook to use a FHIR reference.\n * Handles the complexity of resolving references and caching resources.\n * @param value - The resource or reference to resource.\n * @param setOutcome - Optional callback to set the OperationOutcome.\n * @returns The resolved resource.\n */\nexport function useResource<T extends Resource>(\n  value: Reference<T> | T | undefined,\n  setOutcome?: (outcome: OperationOutcome) => void\n): T | undefined {\n  const medplum = useMedplum();\n  const [resource, setResource] = useState<T | undefined>(getInitialResource(medplum, value));\n\n  const setResourceIfChanged = useCallback(\n    (r: T | undefined) => {\n      if (!deepEquals(r, resource)) {\n        setResource(r);\n      }\n    },\n    [resource, setResource]\n  );\n\n  useEffect(() => {\n    setResourceIfChanged(getInitialResource(medplum, value));\n  }, [medplum, value, setResourceIfChanged]);\n\n  useEffect(() => {\n    let subscribed = true;\n\n    if (isReference(value)) {\n      medplum\n        .readReference(value as Reference<T>)\n        .then((r) => {\n          if (subscribed) {\n            setResourceIfChanged(r);\n          }\n        })\n        .catch((err) => {\n          if (subscribed) {\n            setResourceIfChanged(undefined);\n            if (setOutcome) {\n              setOutcome(normalizeOperationOutcome(err));\n            }\n          }\n        });\n    }\n\n    return (() => (subscribed = false)) as () => void;\n  }, [medplum, resource, value, setResourceIfChanged, setOutcome]);\n\n  return resource;\n}\n\n/**\n * Returns the initial resource value based on the input value.\n * If the input value is a resource, returns the resource.\n * If the input value is a reference to a resource available in the cache, returns the resource.\n * Otherwise, returns undefined.\n * @param medplum - The medplum client.\n * @param value - The resource or reference to resource.\n * @returns An initial resource if available; undefined otherwise.\n */\nfunction getInitialResource<T extends Resource>(\n  medplum: MedplumClient,\n  value: Reference<T> | T | undefined\n): T | undefined {\n  if (value) {\n    if (isResource(value)) {\n      return value;\n    }\n\n    if (isReference(value)) {\n      return medplum.getCachedReference(value as Reference<T>);\n    }\n  }\n\n  return undefined;\n}\n", "import { allOk, normalizeOperationOutcome, QueryTypes, ResourceArray } from '@medplum/core';\nimport { Bundle, ExtractResource, OperationOutcome, ResourceType } from '@medplum/fhirtypes';\nimport { useEffect, useState } from 'react';\nimport { useMedplum } from '../MedplumProvider/MedplumProvider.context';\n\ntype SearchFn = 'search' | 'searchOne' | 'searchResources';\n\n/**\n * React hook for searching FHIR resources.\n *\n * This is a convenience hook for calling the MedplumClient.search() method.\n *\n * @param resourceType - The FHIR resource type to search.\n * @param query - Optional search parameters.\n * @returns A 3-element tuple containing the search result, loading flag, and operation outcome.\n */\nexport function useSearch<K extends ResourceType>(\n  resourceType: K,\n  query?: QueryTypes\n): [Bundle<ExtractResource<K>> | undefined, boolean, OperationOutcome | undefined] {\n  return useSearchImpl<K, Bundle<ExtractResource<K>>>('search', resourceType, query);\n}\n\n/**\n * React hook for searching for a single FHIR resource.\n *\n * This is a convenience hook for calling the MedplumClient.searchOne() method.\n *\n * @param resourceType - The FHIR resource type to search.\n * @param query - Optional search parameters.\n * @returns A 3-element tuple containing the search result, loading flag, and operation outcome.\n */\nexport function useSearchOne<K extends ResourceType>(\n  resourceType: K,\n  query?: QueryTypes\n): [ExtractResource<K> | undefined, boolean, OperationOutcome | undefined] {\n  return useSearchImpl<K, ExtractResource<K>>('searchOne', resourceType, query);\n}\n\n/**\n * React hook for searching for an array of FHIR resources.\n *\n * This is a convenience hook for calling the MedplumClient.searchResources() method.\n *\n * @param resourceType - The FHIR resource type to search.\n * @param query - Optional search parameters.\n * @returns A 3-element tuple containing the search result, loading flag, and operation outcome.\n */\nexport function useSearchResources<K extends ResourceType>(\n  resourceType: K,\n  query?: QueryTypes\n): [ResourceArray<ExtractResource<K>> | undefined, boolean, OperationOutcome | undefined] {\n  return useSearchImpl<K, ResourceArray<ExtractResource<K>>>('searchResources', resourceType, query);\n}\n\nfunction useSearchImpl<K extends ResourceType, ReturnType>(\n  searchFn: SearchFn,\n  resourceType: K,\n  query: QueryTypes | undefined\n): [ReturnType | undefined, boolean, OperationOutcome | undefined] {\n  const medplum = useMedplum();\n  const [searchKey, setSearchKey] = useState<string>();\n  const [loading, setLoading] = useState<boolean>(false);\n  const [result, setResult] = useState<ReturnType>();\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n\n  useEffect(() => {\n    const key = medplum.fhirSearchUrl(resourceType, query).toString();\n    if (key !== searchKey) {\n      setSearchKey(key);\n      medplum[searchFn](resourceType, query)\n        .then((res) => {\n          setLoading(false);\n          setResult(res as ReturnType);\n          setOutcome(allOk);\n        })\n        .catch((err) => {\n          setLoading(false);\n          setResult(undefined);\n          setOutcome(normalizeOperationOutcome(err));\n        });\n    }\n  }, [medplum, searchFn, resourceType, query, searchKey, setResult]);\n\n  return [result, loading, outcome];\n}\n", "import { formatAddress } from '@medplum/core';\nimport { Address } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface AddressDisplayProps {\n  value?: Address;\n}\n\nexport function AddressDisplay(props: AddressDisplayProps): JSX.Element | null {\n  const address = props.value;\n  if (!address) {\n    return null;\n  }\n\n  return <>{formatAddress(address)}</>;\n}\n", "import { Group, NativeSelect, TextInput } from '@mantine/core';\nimport { Address } from '@medplum/fhirtypes';\nimport React, { useRef, useState } from 'react';\n\nfunction getLine(address: Address, index: number): string {\n  return address.line && address.line.length > index ? address.line[index] : '';\n}\n\nfunction setLine(address: Address, index: number, str: string): Address {\n  const line: string[] = address.line || [];\n  while (line.length <= index) {\n    line.push('');\n  }\n  line[index] = str;\n  return { ...address, line };\n}\n\nexport interface AddressInputProps {\n  name: string;\n  defaultValue?: Address;\n  onChange?: (value: Address) => void;\n}\n\nexport function AddressInput(props: AddressInputProps): JSX.Element {\n  const [value, setValue] = useState<Address>(props.defaultValue || {});\n\n  const valueRef = useRef<Address>();\n  valueRef.current = value;\n\n  function setValueWrapper(newValue: Address): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  function setUse(use: 'home' | 'work' | 'temp' | 'old' | 'billing'): void {\n    setValueWrapper({ ...valueRef.current, use });\n  }\n\n  function setType(type: 'postal' | 'physical' | 'both'): void {\n    setValueWrapper({ ...valueRef.current, type });\n  }\n\n  function setLine1(line1: string): void {\n    setValueWrapper(setLine(valueRef.current || {}, 0, line1));\n  }\n\n  function setLine2(line2: string): void {\n    setValueWrapper(setLine(valueRef.current || {}, 1, line2));\n  }\n\n  function setCity(city: string): void {\n    setValueWrapper({ ...valueRef.current, city });\n  }\n\n  function setState(state: string): void {\n    setValueWrapper({ ...valueRef.current, state });\n  }\n\n  function setPostalCode(postalCode: string): void {\n    setValueWrapper({ ...valueRef.current, postalCode });\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <NativeSelect\n        data-testid=\"address-use\"\n        defaultValue={value.use}\n        onChange={(e) => setUse(e.currentTarget.value as 'home' | 'work' | 'temp' | 'old' | 'billing')}\n        data={['', 'home', 'work', 'temp', 'old', 'billing']}\n      />\n      <NativeSelect\n        data-testid=\"address-type\"\n        defaultValue={value.type}\n        onChange={(e) => setType(e.currentTarget.value as 'postal' | 'physical' | 'both')}\n        data={['', 'postal', 'physical', 'both']}\n      />\n      <TextInput\n        placeholder=\"Line 1\"\n        defaultValue={getLine(value, 0)}\n        onChange={(e) => setLine1(e.currentTarget.value)}\n      />\n      <TextInput\n        placeholder=\"Line 2\"\n        defaultValue={getLine(value, 1)}\n        onChange={(e) => setLine2(e.currentTarget.value)}\n      />\n      <TextInput placeholder=\"City\" defaultValue={value.city} onChange={(e) => setCity(e.currentTarget.value)} />\n      <TextInput placeholder=\"State\" defaultValue={value.state} onChange={(e) => setState(e.currentTarget.value)} />\n      <TextInput\n        placeholder=\"Postal Code\"\n        defaultValue={value.postalCode}\n        onChange={(e) => setPostalCode(e.currentTarget.value)}\n      />\n    </Group>\n  );\n}\n", "import { TextInput } from '@mantine/core';\nimport { createReference } from '@medplum/core';\nimport { Annotation } from '@medplum/fhirtypes';\nimport { useMedplumProfile } from '@medplum/react-hooks';\nimport React, { useRef, useState } from 'react';\n\nexport interface AnnotationInputProps {\n  name: string;\n  defaultValue?: Annotation;\n  onChange?: (value: Annotation) => void;\n}\n\nexport function AnnotationInput(props: AnnotationInputProps): JSX.Element {\n  const author = useMedplumProfile();\n  const [value, setValue] = useState<Annotation>(props.defaultValue || {});\n\n  const valueRef = useRef<Annotation>();\n  valueRef.current = value;\n\n  function setText(text: string): void {\n    const newValue: Annotation = text\n      ? {\n          text,\n          authorReference: author && createReference(author),\n          time: new Date().toISOString(),\n        }\n      : {};\n\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <TextInput\n      name={props.name}\n      placeholder=\"Annotation text\"\n      defaultValue={value.text}\n      onChange={(e) => setText(e.currentTarget.value)}\n    />\n  );\n}\n", "import { AppShell as MantineAppShell, useMantineTheme } from '@mantine/core';\nimport { showNotification } from '@mantine/notifications';\nimport { useMedplum, useMedplumProfile } from '@medplum/react-hooks';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary';\nimport { Loading } from '../Loading/Loading';\nimport { Header } from './Header';\nimport { Navbar, NavbarMenu } from './Navbar';\n\nexport interface AppShellProps {\n  logo: React.ReactNode;\n  pathname?: string;\n  searchParams?: URLSearchParams;\n  headerSearchDisabled?: boolean;\n  version?: string;\n  menus?: NavbarMenu[];\n  children: React.ReactNode;\n  displayAddBookmark?: boolean;\n  resourceTypeSearchDisabled?: boolean;\n}\n\nexport function AppShell(props: AppShellProps): JSX.Element {\n  const theme = useMantineTheme();\n  const [navbarOpen, setNavbarOpen] = useState(localStorage['navbarOpen'] === 'true');\n  const medplum = useMedplum();\n  const profile = useMedplumProfile();\n\n  useEffect(() => {\n    function eventListener(): void {\n      showNotification({ color: 'red', message: 'No connection to server', autoClose: false });\n    }\n    medplum.addEventListener('offline', eventListener);\n    return () => medplum.removeEventListener('offline', eventListener);\n  }, [medplum]);\n\n  function setNavbarOpenWrapper(open: boolean): void {\n    localStorage['navbarOpen'] = open.toString();\n    setNavbarOpen(open);\n  }\n\n  function closeNavbar(): void {\n    setNavbarOpenWrapper(false);\n  }\n\n  function toggleNavbar(): void {\n    setNavbarOpenWrapper(!navbarOpen);\n  }\n\n  if (medplum.isLoading()) {\n    return <Loading />;\n  }\n\n  return (\n    <MantineAppShell\n      styles={{\n        main: {\n          background: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.colors.gray[0],\n        },\n      }}\n      padding={0}\n      fixed={true}\n      header={\n        profile && (\n          <Header\n            pathname={props.pathname}\n            searchParams={props.searchParams}\n            headerSearchDisabled={props.headerSearchDisabled}\n            logo={props.logo}\n            version={props.version}\n            navbarToggle={toggleNavbar}\n          />\n        )\n      }\n      navbar={\n        profile && navbarOpen ? (\n          <Navbar\n            pathname={props.pathname}\n            searchParams={props.searchParams}\n            menus={props.menus}\n            closeNavbar={closeNavbar}\n            displayAddBookmark={props.displayAddBookmark}\n            resourceTypeSearchDisabled={props.resourceTypeSearchDisabled}\n          />\n        ) : undefined\n      }\n    >\n      <ErrorBoundary key={`${props.pathname}?${props.searchParams?.toString()}`}>\n        <Suspense fallback={<Loading />}>{props.children}</Suspense>\n      </ErrorBoundary>\n    </MantineAppShell>\n  );\n}\n", "import { Alert } from '@mantine/core';\nimport { normalizeErrorString } from '@medplum/core';\nimport { IconAlertCircle } from '@tabler/icons-react';\nimport React, { ErrorInfo, ReactNode } from 'react';\n\nexport interface ErrorBoundaryProps {\n  children: ReactNode;\n}\n\nexport interface ErrorBoundaryState {\n  error?: any;\n}\n\n/**\n * ErrorBoundary is a React component that handles errors in its child components.\n * See: https://reactjs.org/docs/error-boundaries.html\n */\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  state: ErrorBoundaryState;\n\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {};\n  }\n\n  static getDerivedStateFromError(error: any): ErrorBoundaryState {\n    return { error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo): void {\n    console.error('Uncaught error:', error, errorInfo);\n  }\n\n  render(): ReactNode {\n    if (this.state.error) {\n      return (\n        <Alert icon={<IconAlertCircle size={16} />} title=\"Something went wrong\" color=\"red\">\n          {normalizeErrorString(this.state.error)}\n        </Alert>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n", "export default {\n  xmlns: 'http://www.w3.org/2000/svg',\n  width: 24,\n  height: 24,\n  viewBox: '0 0 24 24',\n  fill: 'none',\n  stroke: 'currentColor',\n  strokeWidth: 2,\n  strokeLinecap: 'round',\n  strokeLinejoin: 'round',\n};\n", "import { forwardRef, createElement } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultAttributes from './defaultAttributes';\n\nexport default (iconName, iconNamePascal, iconNode) => {\n  const Component = forwardRef(\n      ({ color = 'currentColor', size = 24, stroke = 2, children, ...rest }, ref) =>\n          createElement(\n              'svg',\n              {\n                ref,\n                ...defaultAttributes,\n                width: size,\n                height: size,\n                stroke: color,\n                strokeWidth: stroke,\n                className: `tabler-icon tabler-icon-${iconName}`,\n                ...rest,\n              },\n              [...iconNode.map(([tag, attrs]) => createElement(tag, attrs)), ...(children || [])],\n          ),\n  );\n\n  Component.propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    stroke: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  };\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent(\n  'adjustments-horizontal',\n  'IconAdjustmentsHorizontal',\n  [\n    ['path', { d: 'M14 6m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0', key: 'svg-0' }],\n    ['path', { d: 'M4 6l8 0', key: 'svg-1' }],\n    ['path', { d: 'M16 6l4 0', key: 'svg-2' }],\n    ['path', { d: 'M8 12m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0', key: 'svg-3' }],\n    ['path', { d: 'M4 12l2 0', key: 'svg-4' }],\n    ['path', { d: 'M10 12l10 0', key: 'svg-5' }],\n    ['path', { d: 'M17 18m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0', key: 'svg-6' }],\n    ['path', { d: 'M4 18l11 0', key: 'svg-7' }],\n    ['path', { d: 'M19 18l1 0', key: 'svg-8' }],\n  ],\n);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('alert-circle', 'IconAlertCircle', [\n  ['path', { d: 'M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0', key: 'svg-0' }],\n  ['path', { d: 'M12 8v4', key: 'svg-1' }],\n  ['path', { d: 'M12 16h.01', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('arrow-down', 'IconArrowDown', [\n  ['path', { d: 'M12 5l0 14', key: 'svg-0' }],\n  ['path', { d: 'M18 13l-6 6', key: 'svg-1' }],\n  ['path', { d: 'M6 13l6 6', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('arrow-up', 'IconArrowUp', [\n  ['path', { d: 'M12 5l0 14', key: 'svg-0' }],\n  ['path', { d: 'M18 11l-6 -6', key: 'svg-1' }],\n  ['path', { d: 'M6 11l6 -6', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('bleach-off', 'IconBleachOff', [\n  [\n    'path',\n    {\n      d: 'M5 19h14m1.986 -1.977a2 2 0 0 0 -.146 -.773l-7.1 -12.25a2 2 0 0 0 -3.5 0l-.815 1.405m-1.488 2.568l-4.797 8.277a2 2 0 0 0 1.75 2.75',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M3 3l18 18', key: 'svg-1' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('bleach', 'IconBleach', [\n  [\n    'path',\n    {\n      d: 'M5 19h14a2 2 0 0 0 1.84 -2.75l-7.1 -12.25a2 2 0 0 0 -3.5 0l-7.1 12.25a2 2 0 0 0 1.75 2.75',\n      key: 'svg-0',\n    },\n  ],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('box-multiple', 'IconBoxMultiple', [\n  [\n    'path',\n    {\n      d: 'M7 3m0 2a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v10a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2z',\n      key: 'svg-0',\n    },\n  ],\n  [\n    'path',\n    {\n      d: 'M17 17v2a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-10a2 2 0 0 1 2 -2h2',\n      key: 'svg-1',\n    },\n  ],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('brackets-contain', 'IconBracketsContain', [\n  ['path', { d: 'M7 4h-4v16h4', key: 'svg-0' }],\n  ['path', { d: 'M17 4h4v16h-4', key: 'svg-1' }],\n  ['path', { d: 'M8 16h.01', key: 'svg-2' }],\n  ['path', { d: 'M12 16h.01', key: 'svg-3' }],\n  ['path', { d: 'M16 16h.01', key: 'svg-4' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('bucket-off', 'IconBucketOff', [\n  [\n    'path',\n    {\n      d: 'M5.029 5.036c-.655 .58 -1.029 1.25 -1.029 1.964c0 2.033 3.033 3.712 6.96 3.967m3.788 -.21c3.064 -.559 5.252 -2.029 5.252 -3.757c0 -2.21 -3.582 -4 -8 -4c-1.605 0 -3.1 .236 -4.352 .643',\n      key: 'svg-0',\n    },\n  ],\n  [\n    'path',\n    {\n      d: 'M4 7c0 .664 .088 1.324 .263 1.965l2.737 10.035c.5 1.5 2.239 2 5 2s4.5 -.5 5 -2c.1 -.3 .252 -.812 .457 -1.535m.862 -3.146c.262 -.975 .735 -2.76 1.418 -5.354a7.45 7.45 0 0 0 .263 -1.965',\n      key: 'svg-1',\n    },\n  ],\n  ['path', { d: 'M3 3l18 18', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('bucket', 'IconBucket', [\n  ['path', { d: 'M12 7m-8 0a8 4 0 1 0 16 0a8 4 0 1 0 -16 0', key: 'svg-0' }],\n  [\n    'path',\n    {\n      d: 'M4 7c0 .664 .088 1.324 .263 1.965l2.737 10.035c.5 1.5 2.239 2 5 2s4.5 -.5 5 -2c.333 -1 1.246 -4.345 2.737 -10.035a7.45 7.45 0 0 0 .263 -1.965',\n      key: 'svg-1',\n    },\n  ],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('calendar', 'IconCalendar', [\n  [\n    'path',\n    {\n      d: 'M4 7a2 2 0 0 1 2 -2h12a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12z',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M16 3v4', key: 'svg-1' }],\n  ['path', { d: 'M8 3v4', key: 'svg-2' }],\n  ['path', { d: 'M4 11h16', key: 'svg-3' }],\n  ['path', { d: 'M11 15h1', key: 'svg-4' }],\n  ['path', { d: 'M12 15v3', key: 'svg-5' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('check', 'IconCheck', [\n  ['path', { d: 'M5 12l5 5l10 -10', key: 'svg-0' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('checkbox', 'IconCheckbox', [\n  ['path', { d: 'M9 11l3 3l8 -8', key: 'svg-0' }],\n  [\n    'path',\n    {\n      d: 'M20 12v6a2 2 0 0 1 -2 2h-12a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h9',\n      key: 'svg-1',\n    },\n  ],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('chevron-down', 'IconChevronDown', [\n  ['path', { d: 'M6 9l6 6l6 -6', key: 'svg-0' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('circle-minus', 'IconCircleMinus', [\n  ['path', { d: 'M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0', key: 'svg-0' }],\n  ['path', { d: 'M9 12l6 0', key: 'svg-1' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('circle-plus', 'IconCirclePlus', [\n  ['path', { d: 'M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0', key: 'svg-0' }],\n  ['path', { d: 'M9 12h6', key: 'svg-1' }],\n  ['path', { d: 'M12 9v6', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('cloud-upload', 'IconCloudUpload', [\n  [\n    'path',\n    {\n      d: 'M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M9 15l3 -3l3 3', key: 'svg-1' }],\n  ['path', { d: 'M12 12l0 9', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('columns', 'IconColumns', [\n  ['path', { d: 'M4 6l5.5 0', key: 'svg-0' }],\n  ['path', { d: 'M4 10l5.5 0', key: 'svg-1' }],\n  ['path', { d: 'M4 14l5.5 0', key: 'svg-2' }],\n  ['path', { d: 'M4 18l5.5 0', key: 'svg-3' }],\n  ['path', { d: 'M14.5 6l5.5 0', key: 'svg-4' }],\n  ['path', { d: 'M14.5 10l5.5 0', key: 'svg-5' }],\n  ['path', { d: 'M14.5 14l5.5 0', key: 'svg-6' }],\n  ['path', { d: 'M14.5 18l5.5 0', key: 'svg-7' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('copy', 'IconCopy', [\n  [\n    'path',\n    {\n      d: 'M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z',\n      key: 'svg-0',\n    },\n  ],\n  [\n    'path',\n    {\n      d: 'M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2',\n      key: 'svg-1',\n    },\n  ],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('currency-dollar', 'IconCurrencyDollar', [\n  [\n    'path',\n    {\n      d: 'M16.7 8a3 3 0 0 0 -2.7 -2h-4a3 3 0 0 0 0 6h4a3 3 0 0 1 0 6h-4a3 3 0 0 1 -2.7 -2',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M12 3v3m0 12v3', key: 'svg-1' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('dots', 'IconDots', [\n  ['path', { d: 'M5 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0', key: 'svg-0' }],\n  ['path', { d: 'M12 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0', key: 'svg-1' }],\n  ['path', { d: 'M19 12m-1 0a1 1 0 1 0 2 0a1 1 0 1 0 -2 0', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('edit', 'IconEdit', [\n  [\n    'path',\n    {\n      d: 'M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1',\n      key: 'svg-0',\n    },\n  ],\n  [\n    'path',\n    {\n      d: 'M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z',\n      key: 'svg-1',\n    },\n  ],\n  ['path', { d: 'M16 5l3 3', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('equal-not', 'IconEqualNot', [\n  ['path', { d: 'M5 10h14', key: 'svg-0' }],\n  ['path', { d: 'M5 14h14', key: 'svg-1' }],\n  ['path', { d: 'M5 19l14 -14', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('equal', 'IconEqual', [\n  ['path', { d: 'M5 10h14', key: 'svg-0' }],\n  ['path', { d: 'M5 14h14', key: 'svg-1' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('file-alert', 'IconFileAlert', [\n  ['path', { d: 'M14 3v4a1 1 0 0 0 1 1h4', key: 'svg-0' }],\n  [\n    'path',\n    {\n      d: 'M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z',\n      key: 'svg-1',\n    },\n  ],\n  ['path', { d: 'M12 17l.01 0', key: 'svg-2' }],\n  ['path', { d: 'M12 11l0 3', key: 'svg-3' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('file-plus', 'IconFilePlus', [\n  ['path', { d: 'M14 3v4a1 1 0 0 0 1 1h4', key: 'svg-0' }],\n  [\n    'path',\n    {\n      d: 'M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z',\n      key: 'svg-1',\n    },\n  ],\n  ['path', { d: 'M12 11l0 6', key: 'svg-2' }],\n  ['path', { d: 'M9 14l6 0', key: 'svg-3' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('filter', 'IconFilter', [\n  [\n    'path',\n    {\n      d: 'M4 4h16v2.172a2 2 0 0 1 -.586 1.414l-4.414 4.414v7l-6 2v-8.5l-4.48 -4.928a2 2 0 0 1 -.52 -1.345v-2.227z',\n      key: 'svg-0',\n    },\n  ],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('list-details', 'IconListDetails', [\n  ['path', { d: 'M13 5h8', key: 'svg-0' }],\n  ['path', { d: 'M13 9h5', key: 'svg-1' }],\n  ['path', { d: 'M13 15h8', key: 'svg-2' }],\n  ['path', { d: 'M13 19h5', key: 'svg-3' }],\n  [\n    'path',\n    {\n      d: 'M3 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z',\n      key: 'svg-4',\n    },\n  ],\n  [\n    'path',\n    {\n      d: 'M3 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z',\n      key: 'svg-5',\n    },\n  ],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('logout', 'IconLogout', [\n  [\n    'path',\n    {\n      d: 'M14 8v-2a2 2 0 0 0 -2 -2h-7a2 2 0 0 0 -2 2v12a2 2 0 0 0 2 2h7a2 2 0 0 0 2 -2v-2',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M9 12h12l-3 -3', key: 'svg-1' }],\n  ['path', { d: 'M18 15l3 -3', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('math-greater', 'IconMathGreater', [\n  ['path', { d: 'M5 18l14 -6l-14 -6', key: 'svg-0' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('math-lower', 'IconMathLower', [\n  ['path', { d: 'M19 18l-14 -6l14 -6', key: 'svg-0' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('message', 'IconMessage', [\n  ['path', { d: 'M8 9h8', key: 'svg-0' }],\n  ['path', { d: 'M8 13h6', key: 'svg-1' }],\n  [\n    'path',\n    {\n      d: 'M18 4a3 3 0 0 1 3 3v8a3 3 0 0 1 -3 3h-5l-5 3v-3h-2a3 3 0 0 1 -3 -3v-8a3 3 0 0 1 3 -3h12z',\n      key: 'svg-2',\n    },\n  ],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('pin', 'IconPin', [\n  [\n    'path',\n    {\n      d: 'M15 4.5l-4 4l-4 1.5l-1.5 1.5l7 7l1.5 -1.5l1.5 -4l4 -4',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M9 15l-4.5 4.5', key: 'svg-1' }],\n  ['path', { d: 'M14.5 4l5.5 5.5', key: 'svg-2' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('pinned-off', 'IconPinnedOff', [\n  ['path', { d: 'M3 3l18 18', key: 'svg-0' }],\n  [\n    'path',\n    {\n      d: 'M15 4.5l-3.249 3.249m-2.57 1.433l-2.181 .818l-1.5 1.5l7 7l1.5 -1.5l.82 -2.186m1.43 -2.563l3.25 -3.251',\n      key: 'svg-1',\n    },\n  ],\n  ['path', { d: 'M9 15l-4.5 4.5', key: 'svg-2' }],\n  ['path', { d: 'M14.5 4l5.5 5.5', key: 'svg-3' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('plus', 'IconPlus', [\n  ['path', { d: 'M12 5l0 14', key: 'svg-0' }],\n  ['path', { d: 'M5 12l14 0', key: 'svg-1' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('refresh', 'IconRefresh', [\n  ['path', { d: 'M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4', key: 'svg-0' }],\n  ['path', { d: 'M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4', key: 'svg-1' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('search', 'IconSearch', [\n  ['path', { d: 'M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0', key: 'svg-0' }],\n  ['path', { d: 'M21 21l-6 -6', key: 'svg-1' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('settings', 'IconSettings', [\n  [\n    'path',\n    {\n      d: 'M10.325 4.317c.426 -1.756 2.924 -1.756 3.35 0a1.724 1.724 0 0 0 2.573 1.066c1.543 -.94 3.31 .826 2.37 2.37a1.724 1.724 0 0 0 1.065 2.572c1.756 .426 1.756 2.924 0 3.35a1.724 1.724 0 0 0 -1.066 2.573c.94 1.543 -.826 3.31 -2.37 2.37a1.724 1.724 0 0 0 -2.572 1.065c-.426 1.756 -2.924 1.756 -3.35 0a1.724 1.724 0 0 0 -2.573 -1.066c-1.543 .94 -3.31 -.826 -2.37 -2.37a1.724 1.724 0 0 0 -1.065 -2.572c-1.756 -.426 -1.756 -2.924 0 -3.35a1.724 1.724 0 0 0 1.066 -2.573c-.94 -1.543 .826 -3.31 2.37 -2.37c1 .608 2.296 .07 2.572 -1.065z',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M9 12a3 3 0 1 0 6 0a3 3 0 0 0 -6 0', key: 'svg-1' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('sort-ascending', 'IconSortAscending', [\n  ['path', { d: 'M4 6l7 0', key: 'svg-0' }],\n  ['path', { d: 'M4 12l7 0', key: 'svg-1' }],\n  ['path', { d: 'M4 18l9 0', key: 'svg-2' }],\n  ['path', { d: 'M15 9l3 -3l3 3', key: 'svg-3' }],\n  ['path', { d: 'M18 6l0 12', key: 'svg-4' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('sort-descending', 'IconSortDescending', [\n  ['path', { d: 'M4 6l9 0', key: 'svg-0' }],\n  ['path', { d: 'M4 12l7 0', key: 'svg-1' }],\n  ['path', { d: 'M4 18l7 0', key: 'svg-2' }],\n  ['path', { d: 'M15 15l3 3l3 -3', key: 'svg-3' }],\n  ['path', { d: 'M18 6l0 12', key: 'svg-4' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('square', 'IconSquare', [\n  [\n    'path',\n    {\n      d: 'M3 3m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v14a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z',\n      key: 'svg-0',\n    },\n  ],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent(\n  'switch-horizontal',\n  'IconSwitchHorizontal',\n  [\n    ['path', { d: 'M16 3l4 4l-4 4', key: 'svg-0' }],\n    ['path', { d: 'M10 7l10 0', key: 'svg-1' }],\n    ['path', { d: 'M8 13l-4 4l4 4', key: 'svg-2' }],\n    ['path', { d: 'M4 17l9 0', key: 'svg-3' }],\n  ],\n);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('table-export', 'IconTableExport', [\n  [\n    'path',\n    {\n      d: 'M12.5 21h-7.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v7.5',\n      key: 'svg-0',\n    },\n  ],\n  ['path', { d: 'M3 10h18', key: 'svg-1' }],\n  ['path', { d: 'M10 3v18', key: 'svg-2' }],\n  ['path', { d: 'M16 19h6', key: 'svg-3' }],\n  ['path', { d: 'M19 16l3 3l-3 3', key: 'svg-4' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('trash', 'IconTrash', [\n  ['path', { d: 'M4 7l16 0', key: 'svg-0' }],\n  ['path', { d: 'M10 11l0 6', key: 'svg-1' }],\n  ['path', { d: 'M14 11l0 6', key: 'svg-2' }],\n  [\n    'path',\n    { d: 'M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12', key: 'svg-3' },\n  ],\n  ['path', { d: 'M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3', key: 'svg-4' }],\n]);\n", "import createReactComponent from '../createReactComponent';\nexport default createReactComponent('x', 'IconX', [\n  ['path', { d: 'M18 6l-12 12', key: 'svg-0' }],\n  ['path', { d: 'M6 6l12 12', key: 'svg-1' }],\n]);\n", "import { Center, Loader } from '@mantine/core';\nimport React from 'react';\n\nexport function Loading(): JSX.Element {\n  return (\n    <Center style={{ width: '100%', height: '100vh' }}>\n      <Loader />\n    </Center>\n  );\n}\n", "import { Avatar, createStyles, Group, Header as MantineHeader, Menu, Stack, Text, UnstyledButton } from '@mantine/core';\nimport { formatHumanName, getReferenceString, ProfileResource } from '@medplum/core';\nimport { HumanName } from '@medplum/fhirtypes';\nimport { useMedplumContext } from '@medplum/react-hooks';\nimport { IconChevronDown, IconLogout, IconSettings, IconSwitchHorizontal } from '@tabler/icons-react';\nimport React, { useState } from 'react';\nimport { HumanNameDisplay } from '../HumanNameDisplay/HumanNameDisplay';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { HeaderSearchInput } from './HeaderSearchInput';\n\nconst useStyles = createStyles((theme) => ({\n  logoButton: {\n    padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n    borderRadius: theme.radius.sm,\n    transition: 'background-color 100ms ease',\n\n    '&:hover': {\n      backgroundColor: theme.fn.lighten(\n        theme.fn.variant({ variant: 'filled', color: theme.primaryColor }).background as string,\n        0.8\n      ),\n    },\n  },\n\n  user: {\n    padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n    borderRadius: theme.radius.sm,\n    transition: 'background-color 100ms ease',\n\n    '&:hover': {\n      backgroundColor: theme.fn.lighten(\n        theme.fn.variant({ variant: 'filled', color: theme.primaryColor }).background as string,\n        0.8\n      ),\n    },\n  },\n\n  userName: {\n    fontWeight: 500,\n    lineHeight: 1,\n    marginRight: 3,\n\n    [theme.fn.smallerThan('xs')]: {\n      display: 'none',\n    },\n  },\n\n  userActive: {\n    backgroundColor: theme.fn.lighten(\n      theme.fn.variant({ variant: 'filled', color: theme.primaryColor }).background as string,\n      0.8\n    ),\n  },\n}));\n\nexport interface HeaderProps {\n  pathname?: string;\n  searchParams?: URLSearchParams;\n  headerSearchDisabled?: boolean;\n  logo: React.ReactNode;\n  version?: string;\n  navbarToggle: () => void;\n}\n\nexport function Header(props: HeaderProps): JSX.Element {\n  const context = useMedplumContext();\n  const { medplum, profile, navigate } = context;\n  const logins = medplum.getLogins();\n  const { classes, cx } = useStyles();\n  const [userMenuOpened, setUserMenuOpened] = useState(false);\n\n  return (\n    <MantineHeader height={60} p={8} style={{ zIndex: 101 }}>\n      <Group position=\"apart\">\n        <Group spacing=\"xs\">\n          <UnstyledButton className={classes.logoButton} onClick={props.navbarToggle}>\n            {props.logo}\n          </UnstyledButton>\n          {!props.headerSearchDisabled && (\n            <HeaderSearchInput pathname={props.pathname} searchParams={props.searchParams} />\n          )}\n        </Group>\n\n        <Menu\n          width={260}\n          shadow=\"xl\"\n          position=\"bottom-end\"\n          transitionProps={{ transition: 'pop-top-right' }}\n          opened={userMenuOpened}\n          onClose={() => setUserMenuOpened(false)}\n        >\n          <Menu.Target>\n            <UnstyledButton\n              className={cx(classes.user, { [classes.userActive]: userMenuOpened })}\n              onClick={() => setUserMenuOpened((o) => !o)}\n            >\n              <Group spacing={7}>\n                <ResourceAvatar value={profile} radius=\"xl\" size={24} />\n                <Text size=\"sm\" className={classes.userName}>\n                  {formatHumanName(profile?.name?.[0] as HumanName)}\n                </Text>\n                <IconChevronDown size={12} stroke={1.5} />\n              </Group>\n            </UnstyledButton>\n          </Menu.Target>\n          <Menu.Dropdown>\n            <Stack align=\"center\" p=\"xl\">\n              <ResourceAvatar size=\"xl\" radius={100} value={context.profile} />\n              <HumanNameDisplay value={context.profile?.name?.[0] as HumanName} />\n              <Text color=\"dimmed\" size=\"xs\">\n                {medplum.getActiveLogin()?.project.display}\n              </Text>\n            </Stack>\n            {logins.length > 1 && <Menu.Divider />}\n            {logins.map(\n              (login) =>\n                login.profile.reference !== getReferenceString(context.profile as ProfileResource) && (\n                  <Menu.Item\n                    key={login.profile.reference}\n                    onClick={() => {\n                      medplum\n                        .setActiveLogin(login)\n                        .then(() => window.location.reload())\n                        .catch(console.log);\n                    }}\n                  >\n                    <Group>\n                      <Avatar radius=\"xl\" />\n                      <div style={{ flex: 1 }}>\n                        <Text size=\"sm\" weight={500}>\n                          {login.profile.display}\n                        </Text>\n                        <Text color=\"dimmed\" size=\"xs\">\n                          {login.project.display}\n                        </Text>\n                      </div>\n                    </Group>\n                  </Menu.Item>\n                )\n            )}\n            <Menu.Divider />\n            <Menu.Item icon={<IconSwitchHorizontal size={14} stroke={1.5} />} onClick={() => navigate('/signin')}>\n              Add another account\n            </Menu.Item>\n            <Menu.Item\n              icon={<IconSettings size={14} stroke={1.5} />}\n              onClick={() => navigate(`/${getReferenceString(profile as ProfileResource)}`)}\n            >\n              Account settings\n            </Menu.Item>\n            <Menu.Item\n              icon={<IconLogout size={14} stroke={1.5} />}\n              onClick={async () => {\n                await medplum.signOut();\n                navigate('/signin');\n              }}\n            >\n              Sign out\n            </Menu.Item>\n            <Text size=\"xs\" color=\"dimmed\" align=\"center\">\n              {props.version}\n            </Text>\n          </Menu.Dropdown>\n        </Menu>\n      </Group>\n    </MantineHeader>\n  );\n}\n", "import { formatHumanName, HumanNameFormatOptions } from '@medplum/core';\nimport { HumanName } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface HumanNameDisplayProps {\n  value?: HumanName;\n  options?: HumanNameFormatOptions;\n}\n\nexport function HumanNameDisplay(props: HumanNameDisplayProps): JSX.Element | null {\n  const name = props.value;\n  if (!name) {\n    return null;\n  }\n\n  return <>{formatHumanName(name, props.options)}</>;\n}\n", "import { Avatar, AvatarProps } from '@mantine/core';\nimport { getDisplayString, getImageSrc } from '@medplum/core';\nimport { Reference, Resource } from '@medplum/fhirtypes';\nimport { useResource } from '@medplum/react-hooks';\nimport React from 'react';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\n\nexport interface ResourceAvatarProps extends AvatarProps {\n  value?: Reference | Resource;\n  link?: boolean;\n}\n\nexport function ResourceAvatar(props: ResourceAvatarProps): JSX.Element {\n  const resource = useResource(props.value);\n  const text = resource ? getDisplayString(resource) : props.alt ?? '';\n  const imageUrl = (resource && getImageSrc(resource)) ?? props.src;\n  const radius = props.radius ?? 'xl';\n\n  const avatarProps = { ...props };\n  delete avatarProps.value;\n  delete avatarProps.link;\n\n  if (props.link) {\n    return (\n      <MedplumLink to={resource}>\n        <Avatar src={imageUrl} alt={text} radius={radius} {...avatarProps} />\n      </MedplumLink>\n    );\n  }\n\n  return <Avatar src={imageUrl} alt={text} radius={radius} {...avatarProps} />;\n}\n", "import { Anchor, TextProps } from '@mantine/core';\nimport { isReference, isResource } from '@medplum/core';\nimport { Reference, Resource } from '@medplum/fhirtypes';\nimport { useMedplumNavigate } from '@medplum/react-hooks';\nimport React from 'react';\nimport { killEvent } from '../utils/dom';\n\nexport interface MedplumLinkProps extends TextProps {\n  to?: Resource | Reference | string;\n  suffix?: string;\n  label?: string;\n  onClick?: React.MouseEventHandler;\n  children: React.ReactNode;\n}\n\nexport function MedplumLink(props: MedplumLinkProps): JSX.Element {\n  const navigate = useMedplumNavigate();\n  const { to, suffix, label, onClick, children, ...rest } = props;\n\n  let href = getHref(to);\n  if (suffix) {\n    href += '/' + suffix;\n  }\n\n  return (\n    <Anchor\n      href={href}\n      aria-label={label}\n      onClick={(e: React.MouseEvent) => {\n        killEvent(e);\n        if (onClick) {\n          onClick(e);\n        } else if (to) {\n          navigate(href);\n        }\n      }}\n      {...rest}\n    >\n      {children}\n    </Anchor>\n  );\n}\n\nfunction getHref(to: Resource | Reference | string | undefined): string {\n  if (to) {\n    if (typeof to === 'string') {\n      return getStringHref(to);\n    } else if (isResource(to)) {\n      return getResourceHref(to);\n    } else if (isReference(to)) {\n      return getReferenceHref(to);\n    }\n  }\n  return '#';\n}\n\nfunction getStringHref(to: string): string {\n  if (to.startsWith('http://') || to.startsWith('https://') || to.startsWith('/')) {\n    return to;\n  }\n  return '/' + to;\n}\n\nfunction getResourceHref(to: Resource): string {\n  return `/${to.resourceType}/${to.id}`;\n}\n\nfunction getReferenceHref(to: Reference): string {\n  return `/${to.reference}`;\n}\n", "/**\n * Kills a browser event.\n * Prevents default behavior.\n * Stops event propagation.\n * @param e - The event.\n */\nexport function killEvent(e: Event | React.SyntheticEvent): void {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\n/**\n * Returns true if the element is a checkbox or a table cell containing a checkbox.\n * Table cells containing checkboxes are commonly accidentally clicked.\n * @param el - The HTML DOM element.\n * @returns True if the element is a checkbox or a table cell containing a checkbox.\n */\nexport function isCheckboxCell(el: Element): boolean {\n  if (isCheckboxElement(el)) {\n    return true;\n  }\n\n  if (el instanceof HTMLTableCellElement) {\n    const children = el.children;\n    if (children.length === 1 && isCheckboxElement(children[0])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isCheckboxElement(el: Element): boolean {\n  return el instanceof HTMLInputElement && el.type === 'checkbox';\n}\n", "import { createStyles, Group, Text } from '@mantine/core';\nimport { formatHumanName, getDisplayString, getReferenceString, isUUID } from '@medplum/core';\nimport { Patient, ServiceRequest } from '@medplum/fhirtypes';\nimport { useMedplum, useMedplumNavigate } from '@medplum/react-hooks';\nimport { IconSearch } from '@tabler/icons-react';\nimport React, { forwardRef, useCallback } from 'react';\nimport { AsyncAutocomplete, AsyncAutocompleteOption } from '../AsyncAutocomplete/AsyncAutocomplete';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\n\nexport type HeaderSearchTypes = Patient | ServiceRequest;\n\nconst useStyles = createStyles(() => {\n  return {\n    searchInput: {\n      input: {\n        width: 220,\n        transition: 'width 0.2s',\n      },\n      'input:focus': {\n        width: 400,\n      },\n      '@media (max-width: 800px)': {\n        input: {\n          width: 150,\n        },\n        'input:focus': {\n          width: 150,\n        },\n      },\n    },\n  };\n});\n\ninterface SearchGraphQLResponse {\n  readonly data: {\n    readonly Patients1: Patient[] | undefined;\n    readonly Patients2: Patient[] | undefined;\n    readonly ServiceRequestList: ServiceRequest[] | undefined;\n  };\n}\n\nfunction toKey(resource: HeaderSearchTypes): string {\n  return resource.id as string;\n}\n\nfunction toOption(resource: HeaderSearchTypes): AsyncAutocompleteOption<HeaderSearchTypes> {\n  return {\n    value: resource.id as string,\n    label: getDisplayString(resource),\n    resource,\n  };\n}\n\nexport interface HeaderSearchInputProps {\n  pathname?: string;\n  searchParams?: URLSearchParams;\n}\n\nexport function HeaderSearchInput(props: HeaderSearchInputProps): JSX.Element {\n  const { classes } = useStyles();\n  const navigate = useMedplumNavigate();\n  const medplum = useMedplum();\n\n  const loadData = useCallback(\n    async (input: string, signal: AbortSignal): Promise<HeaderSearchTypes[]> => {\n      const query = buildGraphQLQuery(input);\n      const options = { signal };\n      const response = (await medplum.graphql(query, undefined, undefined, options)) as SearchGraphQLResponse;\n      return getResourcesFromResponse(response, input);\n    },\n    [medplum]\n  );\n\n  const handleSelect = useCallback(\n    (item: HeaderSearchTypes[]): void => {\n      if (item.length > 0) {\n        navigate(`/${getReferenceString(item[0])}`);\n      }\n    },\n    [navigate]\n  );\n\n  return (\n    <AsyncAutocomplete\n      key={`${props.pathname}?${props.searchParams}`}\n      size=\"sm\"\n      radius=\"md\"\n      className={classes.searchInput}\n      icon={<IconSearch size={16} />}\n      placeholder=\"Search\"\n      itemComponent={ItemComponent}\n      toKey={toKey}\n      toOption={toOption}\n      onChange={handleSelect}\n      loadOptions={loadData}\n      maxSelectedValues={0}\n      clearSearchOnChange\n      clearable={false}\n    />\n  );\n}\n\nconst ItemComponent = forwardRef<HTMLDivElement, any>(\n  ({ resource, ...others }: AsyncAutocompleteOption<HeaderSearchTypes>, ref) => {\n    let helpText: string | undefined = undefined;\n\n    if (resource.resourceType === 'Patient') {\n      helpText = resource.birthDate;\n    } else if (resource.resourceType === 'ServiceRequest') {\n      helpText = resource.subject?.display;\n    }\n\n    return (\n      <div ref={ref} {...others}>\n        <Group noWrap>\n          <ResourceAvatar value={resource} />\n          <div>\n            <Text>{getDisplayString(resource)}</Text>\n            <Text size=\"xs\" color=\"dimmed\">\n              {helpText}\n            </Text>\n          </div>\n        </Group>\n      </div>\n    );\n  }\n);\n\nfunction buildGraphQLQuery(input: string): string {\n  const escaped = JSON.stringify(input);\n  if (isUUID(input)) {\n    return `{\n      Patients1: PatientList(_id: ${escaped}, _count: 1) {\n        resourceType\n        id\n        identifier {\n          system\n          value\n        }\n        name {\n          given\n          family\n        }\n        birthDate\n      }\n      ServiceRequestList(_id: ${escaped}, _count: 1) {\n        resourceType\n        id\n        identifier {\n          system\n          value\n        }\n        subject {\n          display\n        }\n      }\n    }`.replace(/\\s+/g, ' ');\n  }\n  return `{\n    Patients1: PatientList(name: ${escaped}, _count: 5) {\n      resourceType\n      id\n      identifier {\n        system\n        value\n      }\n      name {\n        given\n        family\n      }\n      birthDate\n    }\n    Patients2: PatientList(identifier: ${escaped}, _count: 5) {\n      resourceType\n      id\n      identifier {\n        system\n        value\n      }\n      name {\n        given\n        family\n      }\n      birthDate\n    }\n    ServiceRequestList(identifier: ${escaped}, _count: 5) {\n      resourceType\n      id\n      identifier {\n        system\n        value\n      }\n      subject {\n        display\n      }\n    }\n  }`.replace(/\\s+/g, ' ');\n}\n\n/**\n * Returns a de-duped and sorted list of resources from the search response.\n * The search request is actually 3+ separate searches, which can include duplicates.\n * This function combines the results, de-dupes, and sorts by relevance.\n * @param response - The response from a search query.\n * @param query - The user entered search query.\n * @returns The resources to display in the autocomplete.\n */\nfunction getResourcesFromResponse(response: SearchGraphQLResponse, query: string): HeaderSearchTypes[] {\n  const resources = [];\n  if (response.data.Patients1) {\n    resources.push(...response.data.Patients1);\n  }\n  if (response.data.Patients2) {\n    resources.push(...response.data.Patients2);\n  }\n  if (response.data.ServiceRequestList) {\n    resources.push(...response.data.ServiceRequestList);\n  }\n  return sortByRelevance(dedupeResources(resources), query).slice(0, 5);\n}\n\n/**\n * Removes duplicate resources from an array by ID.\n * @param resources - The array of resources with possible duplicates.\n * @returns The array of resources with no duplicates.\n */\nfunction dedupeResources(resources: HeaderSearchTypes[]): HeaderSearchTypes[] {\n  const ids = new Set<string>();\n  const result = [];\n\n  for (const resource of resources) {\n    if (!ids.has(resource.id as string)) {\n      ids.add(resource.id as string);\n      result.push(resource);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Sorts an array of resources by relevance.\n * @param resources - The candidate resources.\n * @param query - The user entered search string.\n * @returns The sorted array of resources.\n */\nfunction sortByRelevance(resources: HeaderSearchTypes[], query: string): HeaderSearchTypes[] {\n  return resources.sort((a: HeaderSearchTypes, b: HeaderSearchTypes) => {\n    return getResourceScore(b, query) - getResourceScore(a, query);\n  });\n}\n\n/**\n * Calculates a relevance score of a candidate resource.\n * Higher scores are better.\n * @param resource - The candidate resource.\n * @param query - The user entered search string.\n * @returns The relevance score of the candidate resource.\n */\nfunction getResourceScore(resource: HeaderSearchTypes, query: string): number {\n  let bestScore = 0;\n\n  if (resource.identifier) {\n    for (const identifier of resource.identifier) {\n      bestScore = Math.max(bestScore, getStringScore(identifier.value, query));\n    }\n  }\n\n  if (resource.resourceType === 'Patient' && resource.name) {\n    for (const name of resource.name) {\n      bestScore = Math.max(bestScore, getStringScore(formatHumanName(name), query));\n    }\n  }\n\n  return bestScore;\n}\n\n/**\n * Calculates a relevance score of a candidate display string.\n * Higher scores are better.\n * @param str - The candidate display string.\n * @param query - The user entered search string.\n * @returns The relevance score of the candidate string.\n */\nfunction getStringScore(str: string | undefined, query: string): number {\n  if (!str) {\n    return 0;\n  }\n  const index = str.toLowerCase().indexOf(query.toLowerCase());\n  if (index < 0) {\n    return 0;\n  }\n  return 100 - index;\n}\n", "import { Loader, MultiSelect, MultiSelectProps, SelectItem } from '@mantine/core';\nimport { showNotification } from '@mantine/notifications';\nimport { normalizeErrorString } from '@medplum/core';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { killEvent } from '../utils/dom';\n\nexport interface AsyncAutocompleteOption<T> extends SelectItem {\n  resource: T;\n}\n\nexport interface AsyncAutocompleteProps<T>\n  extends Omit<MultiSelectProps, 'data' | 'defaultValue' | 'loadOptions' | 'onChange' | 'onCreate' | 'searchable'> {\n  defaultValue?: T | T[];\n  toKey: (item: T) => string;\n  toOption: (item: T) => AsyncAutocompleteOption<T>;\n  loadOptions: (input: string, signal: AbortSignal) => Promise<T[]>;\n  onChange: (item: T[]) => void;\n  onCreate?: (input: string) => T;\n  creatable?: boolean;\n}\n\nexport function AsyncAutocomplete<T>(props: AsyncAutocompleteProps<T>): JSX.Element {\n  const { defaultValue, toKey, toOption, loadOptions, onChange, onCreate, creatable, ...rest } = props;\n  const defaultItems = toDefaultItems(defaultValue);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [lastValue, setLastValue] = useState<string>();\n  const [timer, setTimer] = useState<number>();\n  const [abortController, setAbortController] = useState<AbortController>();\n  const [autoSubmit, setAutoSubmit] = useState<boolean>();\n  const [selected, setSelected] = useState<AsyncAutocompleteOption<T>[]>(defaultItems.map(toOption));\n  const [options, setOptions] = useState<AsyncAutocompleteOption<T>[]>([]);\n\n  const lastValueRef = useRef<string>();\n  lastValueRef.current = lastValue;\n\n  const timerRef = useRef<number>();\n  timerRef.current = timer;\n\n  const abortControllerRef = useRef<AbortController>();\n  abortControllerRef.current = abortController;\n\n  const autoSubmitRef = useRef<boolean>();\n  autoSubmitRef.current = autoSubmit;\n\n  const optionsRef = useRef<AsyncAutocompleteOption<T>[]>();\n  optionsRef.current = options;\n\n  const handleTimer = useCallback((): void => {\n    setTimer(undefined);\n\n    const value = inputRef.current?.value.trim() || '';\n    if (value === lastValueRef.current) {\n      // Nothing has changed, move on\n      return;\n    }\n\n    setLastValue(value);\n\n    const newAbortController = new AbortController();\n    setAbortController(newAbortController);\n\n    loadOptions(value, newAbortController.signal)\n      .then((newValues: T[]) => {\n        if (!newAbortController.signal.aborted) {\n          setOptions(newValues.map(toOption));\n          setAbortController(undefined);\n          if (autoSubmitRef.current) {\n            if (newValues.length > 0) {\n              onChange(newValues.slice(0, 1));\n            }\n            setAutoSubmit(false);\n          }\n        }\n      })\n      .catch((err) => {\n        if (!(newAbortController.signal.aborted || err.message.includes('aborted'))) {\n          showNotification({ color: 'red', message: normalizeErrorString(err) });\n        }\n      });\n  }, [loadOptions, onChange, toOption]);\n\n  const handleSearchChange = useCallback((): void => {\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n      setAbortController(undefined);\n    }\n\n    if (timerRef.current !== undefined) {\n      window.clearTimeout(timerRef.current);\n    }\n\n    const newTimer = window.setTimeout(() => handleTimer(), 100);\n    setTimer(newTimer);\n  }, [handleTimer]);\n\n  const handleChange = useCallback(\n    (values: string[]): void => {\n      const result: T[] = [];\n      const newSelected: AsyncAutocompleteOption<T>[] = [];\n      for (const value of values) {\n        let option = optionsRef.current?.find((option) => option.value === value);\n        let item = option?.resource;\n        if (!item && creatable !== false && onCreate) {\n          item = onCreate(value);\n          option = toOption(item);\n        }\n\n        if (item) {\n          result.push(item);\n        }\n\n        if (option) {\n          newSelected.push(option);\n        }\n      }\n      onChange(result);\n      setSelected(newSelected);\n    },\n    [creatable, onChange, onCreate, toOption]\n  );\n\n  const handleKeyDown = useCallback(\n    (e: React.KeyboardEvent): void => {\n      if (e.key === 'Enter') {\n        if (!timerRef.current && !abortControllerRef.current) {\n          killEvent(e);\n          if (optionsRef.current && optionsRef.current.length > 0) {\n            setOptions(optionsRef.current.slice(0, 1));\n            handleChange([optionsRef.current[0].value]);\n          }\n        } else {\n          // The user pressed enter, but we don't have results yet.\n          // We need to wait for the results to come in.\n          setAutoSubmit(true);\n        }\n      }\n    },\n    [handleChange]\n  );\n\n  const handleCreate = useCallback(\n    (input: string): AsyncAutocompleteOption<T> => {\n      const option = toOption((onCreate as (input: string) => T)(input));\n      setOptions([...(optionsRef.current as AsyncAutocompleteOption<T>[]), option]);\n      return option;\n    },\n    [onCreate, setOptions, toOption]\n  );\n\n  const handleFilter = useCallback((_value: string, selected: boolean) => !selected, []);\n\n  useEffect(() => {\n    return () => {\n      if (abortControllerRef.current) {\n        abortControllerRef.current.abort();\n      }\n    };\n  }, []);\n\n  return (\n    <MultiSelect\n      {...rest}\n      ref={inputRef}\n      defaultValue={defaultItems.map(toKey)}\n      searchable\n      onKeyDown={handleKeyDown}\n      onSearchChange={handleSearchChange}\n      data={[...selected, ...options]}\n      onFocus={handleTimer}\n      onChange={handleChange}\n      onCreate={handleCreate}\n      rightSectionWidth={40}\n      rightSection={abortController ? <Loader size={16} /> : null}\n      filter={handleFilter}\n      creatable\n      withinPortal={true}\n    />\n  );\n}\n\nfunction toDefaultItems<T>(defaultValue: T | T[] | undefined): T[] {\n  if (!defaultValue) {\n    return [];\n  }\n  if (Array.isArray(defaultValue)) {\n    return defaultValue;\n  }\n  return [defaultValue];\n}\n", "import { Button, createStyles, Navbar as MantineNavbar, ScrollArea, Space, Text } from '@mantine/core';\nimport { useMedplumNavigate } from '@medplum/react-hooks';\nimport { IconPlus } from '@tabler/icons-react';\nimport React, { useState } from 'react';\nimport { BookmarkDialog } from '../BookmarkDialog/BookmarkDialog';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { ResourceTypeInput } from '../ResourceTypeInput/ResourceTypeInput';\n\nconst useStyles = createStyles((theme) => {\n  return {\n    menuTitle: {\n      margin: '20px 0 4px 6px',\n      fontSize: '9px',\n      fontWeight: 'normal',\n      textTransform: 'uppercase',\n      letterSpacing: '2px',\n    },\n\n    link: {\n      ...theme.fn.focusStyles(),\n      display: 'flex',\n      alignItems: 'center',\n      textDecoration: 'none',\n      fontSize: theme.fontSizes.sm,\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n      padding: `8px 12px`,\n      borderRadius: theme.radius.sm,\n      fontWeight: 500,\n\n      '&:hover': {\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n        color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n        textDecoration: 'none',\n\n        [`& svg`]: {\n          color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n        },\n      },\n\n      '& svg': {\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n        marginRight: theme.spacing.sm,\n        strokeWidth: 1.5,\n        width: 18,\n        height: 18,\n      },\n    },\n\n    linkActive: {\n      '&, &:hover': {\n        backgroundColor: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).background,\n        color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n        [`& svg`]: {\n          color: theme.fn.variant({ variant: 'light', color: theme.primaryColor }).color,\n        },\n      },\n    },\n  };\n});\n\nexport interface NavbarLink {\n  icon?: JSX.Element;\n  label?: string;\n  href: string;\n}\n\nexport interface NavbarMenu {\n  title?: string;\n  links?: NavbarLink[];\n}\n\nexport interface NavbarProps {\n  pathname?: string;\n  searchParams?: URLSearchParams;\n  menus?: NavbarMenu[];\n  closeNavbar: () => void;\n  displayAddBookmark?: boolean;\n  resourceTypeSearchDisabled?: boolean;\n}\n\nexport function Navbar(props: NavbarProps): JSX.Element {\n  const { classes } = useStyles();\n  const navigate = useMedplumNavigate();\n  const activeLink = getActiveLink(props.pathname, props.searchParams, props.menus);\n  const [bookmarkDialogVisible, setBookmarkDialogVisible] = useState(false);\n\n  function onLinkClick(e: React.SyntheticEvent, to: string): void {\n    e.stopPropagation();\n    e.preventDefault();\n    navigate(to);\n    if (window.innerWidth < 768) {\n      props.closeNavbar();\n    }\n  }\n\n  function navigateResourceType(resourceType: string | undefined): void {\n    if (resourceType) {\n      navigate(`/${resourceType}`);\n    }\n  }\n\n  return (\n    <>\n      <MantineNavbar width={{ sm: 250 }} p=\"xs\">\n        <ScrollArea>\n          {!props.resourceTypeSearchDisabled && (\n            <MantineNavbar.Section mb=\"sm\">\n              <ResourceTypeInput\n                key={window.location.pathname}\n                name=\"resourceType\"\n                placeholder=\"Resource Type\"\n                onChange={(newValue) => navigateResourceType(newValue)}\n              />\n            </MantineNavbar.Section>\n          )}\n          <MantineNavbar.Section grow>\n            {props.menus?.map((menu) => (\n              <React.Fragment key={`menu-${menu.title}`}>\n                <Text className={classes.menuTitle}>{menu.title}</Text>\n                {menu.links?.map((link) => (\n                  <NavbarLink\n                    key={link.href}\n                    to={link.href}\n                    active={link.href === activeLink?.href}\n                    onClick={(e) => onLinkClick(e, link.href)}\n                  >\n                    <NavLinkIcon to={link.href} icon={link.icon} />\n                    <span>{link.label}</span>\n                  </NavbarLink>\n                ))}\n              </React.Fragment>\n            ))}\n            {props.displayAddBookmark && (\n              <Button\n                variant=\"subtle\"\n                size=\"xs\"\n                mt=\"xl\"\n                leftIcon={<IconPlus size=\"0.75rem\" />}\n                onClick={() => setBookmarkDialogVisible(true)}\n              >\n                Add Bookmark\n              </Button>\n            )}\n          </MantineNavbar.Section>\n        </ScrollArea>\n      </MantineNavbar>\n      {props.pathname && props.searchParams && (\n        <BookmarkDialog\n          pathname={props.pathname}\n          searchParams={props.searchParams}\n          visible={bookmarkDialogVisible}\n          onOk={() => setBookmarkDialogVisible(false)}\n          onCancel={() => setBookmarkDialogVisible(false)}\n        />\n      )}\n    </>\n  );\n}\n\ninterface NavbarLinkProps {\n  to: string;\n  active: boolean;\n  onClick: React.MouseEventHandler;\n  children: React.ReactNode;\n}\n\nfunction NavbarLink(props: NavbarLinkProps): JSX.Element {\n  const { classes, cx } = useStyles();\n  return (\n    <MedplumLink\n      onClick={props.onClick}\n      to={props.to}\n      className={cx(classes.link, { [classes.linkActive]: props.active })}\n    >\n      {props.children}\n    </MedplumLink>\n  );\n}\n\ninterface NavLinkIconProps {\n  to: string;\n  icon?: JSX.Element;\n}\n\nfunction NavLinkIcon(props: NavLinkIconProps): JSX.Element {\n  if (props.icon) {\n    return props.icon;\n  }\n  return <Space w={30} />;\n}\n\n/**\n * Returns the best \"active\" link for the menu.\n * In most cases, the navbar links are simple, and an exact match can determine which link is active.\n * However, we ignore some search parameters to support pagination.\n * But we cannot ignore all search parameters, to support separate links based on search filters.\n * So in the end, we use a simple scoring system based on the number of matching query search params.\n * @param currentPathname - The web browser current pathname.\n * @param currentSearchParams - The web browser current search parameters.\n * @param menus - Collection of navbar menus and links.\n * @returns The active link if one is found.\n */\nfunction getActiveLink(\n  currentPathname: string | undefined,\n  currentSearchParams: URLSearchParams | undefined,\n  menus: NavbarMenu[] | undefined\n): NavbarLink | undefined {\n  if (!currentPathname || !currentSearchParams || !menus) {\n    return undefined;\n  }\n\n  let bestLink = undefined;\n  let bestScore = 0;\n\n  for (const menu of menus) {\n    if (menu.links) {\n      for (const link of menu.links) {\n        const score = getLinkScore(currentPathname, currentSearchParams, link.href);\n        if (score > bestScore) {\n          bestScore = score;\n          bestLink = link;\n        }\n      }\n    }\n  }\n\n  return bestLink;\n}\n\n/**\n * Calculates a score for a link.\n * Zero means \"does not match at all\".\n * One means \"matches the pathname only\".\n * Additional increases for each matching search parameter.\n * Ignores pagination parameters \"_count\" and \"_offset\".\n * @param currentPathname - The web browser current pathname.\n * @param currentSearchParams - The web browser current search parameters.\n * @param linkHref - A candidate link href.\n * @returns The link score.\n */\nfunction getLinkScore(currentPathname: string, currentSearchParams: URLSearchParams, linkHref: string): number {\n  const linkUrl = new URL(linkHref, 'https://example.com');\n  if (currentPathname !== linkUrl.pathname) {\n    return 0;\n  }\n  const ignoredParams = ['_count', '_offset'];\n  for (const [key, value] of linkUrl.searchParams.entries()) {\n    if (ignoredParams.includes(key)) {\n      continue;\n    }\n    if (currentSearchParams.get(key) !== value) {\n      return 0;\n    }\n  }\n  let count = 1;\n  for (const [key, value] of currentSearchParams.entries()) {\n    if (ignoredParams.includes(key)) {\n      continue;\n    }\n    if (linkUrl.searchParams.get(key) === value) {\n      count++;\n    }\n  }\n  return count;\n}\n", "import { Button, Group, Modal, NativeSelect, Stack, TextInput } from '@mantine/core';\nimport { showNotification } from '@mantine/notifications';\nimport { deepClone, normalizeErrorString } from '@medplum/core';\nimport { UserConfiguration } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport React from 'react';\nimport { Form } from '../Form/Form';\n\ninterface BookmarkDialogProps {\n  pathname: string;\n  searchParams: URLSearchParams;\n  visible: boolean;\n  onOk: () => void;\n  onCancel: () => void;\n  defaultValue?: string;\n}\nexport function BookmarkDialog(props: BookmarkDialogProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const config = medplum.getUserConfiguration() as UserConfiguration;\n\n  function submitHandler(formData: Record<string, string>): void {\n    const { menuname, bookmarkname: name } = formData;\n    const target = `${props.pathname}?${props.searchParams.toString()}`;\n    const newConfig = deepClone(config) as UserConfiguration;\n    const menu = newConfig.menu?.find(({ title }) => title === menuname);\n\n    menu?.link?.push({ name, target });\n    medplum\n      .updateResource(newConfig)\n      .then((res) => {\n        // refresh current config menu\n        config.menu = res.menu;\n        medplum.dispatchEvent({ type: 'change' });\n        showNotification({ color: 'green', message: 'Success' });\n        props.onOk();\n      })\n      .catch((err: any) => {\n        showNotification({ color: 'red', message: normalizeErrorString(err) });\n      });\n  }\n\n  return (\n    <Modal\n      title=\"Add Bookmark\"\n      closeButtonProps={{ 'aria-label': 'Close' }}\n      opened={props.visible}\n      onClose={props.onCancel}\n    >\n      <Form onSubmit={submitHandler}>\n        <Stack>\n          <SelectMenu config={config}></SelectMenu>\n          <TextInput label=\"Bookmark Name\" type=\"text\" name=\"bookmarkname\" placeholder=\"Bookmark Name\" withAsterisk />\n          <Group position=\"right\">\n            <Button mt=\"sm\" type=\"submit\">\n              OK\n            </Button>\n          </Group>\n        </Stack>\n      </Form>\n    </Modal>\n  );\n}\n\ninterface SelectMenuProps {\n  config: UserConfiguration | undefined;\n}\n\nfunction SelectMenu(props: SelectMenuProps): JSX.Element {\n  function userConfigToMenu(config: UserConfiguration | undefined): string[] {\n    return config?.menu?.map((menu) => menu.title) as [];\n  }\n  const menus = userConfigToMenu(props.config);\n\n  return (\n    <NativeSelect\n      name=\"menuname\"\n      defaultValue={menus[0]}\n      label=\"Select Menu Option\"\n      placeholder=\"Menu\"\n      data={menus}\n      withAsterisk\n    />\n  );\n}\n", "import React, { CSSProperties } from 'react';\nimport { parseForm } from './FormUtils';\n\nexport interface FormProps {\n  onSubmit?: (formData: Record<string, string>) => void;\n  style?: CSSProperties;\n  children?: React.ReactNode;\n  testid?: string;\n}\n\nexport function Form(props: FormProps): JSX.Element {\n  return (\n    <form\n      style={props.style}\n      data-testid={props.testid}\n      onSubmit={(e: React.SyntheticEvent) => {\n        e.preventDefault();\n        const formData = parseForm(e.target as HTMLFormElement);\n        if (props.onSubmit) {\n          props.onSubmit(formData);\n        }\n      }}\n    >\n      {props.children}\n    </form>\n  );\n}\n", "/**\n * Parses an HTML form and returns the result as a JavaScript object.\n * @param form - The HTML form element.\n * @returns Form values in key value pairs.\n */\nexport function parseForm(form: HTMLFormElement): Record<string, string> {\n  const result: Record<string, string> = {};\n\n  for (const element of Array.from(form.elements)) {\n    if (element instanceof HTMLInputElement) {\n      parseInputElement(result, element);\n    } else if (element instanceof HTMLTextAreaElement) {\n      result[element.name] = element.value;\n    } else if (element instanceof HTMLSelectElement) {\n      parseSelectElement(result, element);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Parses an HTML input element.\n * Sets the name/value pair in the result,\n * but only if the element is enabled and checked.\n * @param result - The result builder.\n * @param el - The input element.\n */\nfunction parseInputElement(result: Record<string, string>, el: HTMLInputElement): void {\n  if (el.disabled) {\n    // Ignore disabled elements\n    return;\n  }\n\n  if ((el.type === 'checkbox' || el.type === 'radio') && !el.checked) {\n    // Ignore unchecked radio or checkbox elements\n    return;\n  }\n\n  result[el.name] = el.value;\n}\n\n/**\n * Parses an HTML select element.\n * Sets the name/value pair if one is selected.\n * @param result - The result builder.\n * @param el - The select element.\n */\nfunction parseSelectElement(result: Record<string, string>, el: HTMLSelectElement): void {\n  result[el.name] = el.value;\n}\n", "import { ResourceType } from '@medplum/fhirtypes';\nimport React, { useCallback, useState } from 'react';\nimport { CodeInput } from '../CodeInput/CodeInput';\n\nexport interface ResourceTypeInputProps {\n  name: string;\n  placeholder?: string;\n  defaultValue?: ResourceType;\n  targetTypes?: string[];\n  autoFocus?: boolean;\n  testId?: string;\n  onChange?: (value: ResourceType | undefined) => void;\n}\n\nexport function ResourceTypeInput(props: ResourceTypeInputProps): JSX.Element {\n  const [resourceType, setResourceType] = useState<string | undefined>(props.defaultValue);\n  const onChange = props.onChange;\n\n  const setResourceTypeWrapper = useCallback(\n    (newResourceType: string | undefined) => {\n      setResourceType(newResourceType);\n      if (onChange) {\n        onChange(newResourceType as ResourceType);\n      }\n    },\n    [onChange]\n  );\n\n  return (\n    <CodeInput\n      data-autofocus={props.autoFocus}\n      data-testid={props.testId}\n      defaultValue={resourceType}\n      onChange={setResourceTypeWrapper}\n      name={props.name}\n      placeholder={props.placeholder}\n      binding={'https://medplum.com/fhir/ValueSet/resource-types'}\n      creatable={false}\n      maxSelectedValues={0}\n      clearSearchOnChange={true}\n      clearable={false}\n    />\n  );\n}\n", "import { ValueSetExpansionContains } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { ValueSetAutocomplete } from '../ValueSetAutocomplete/ValueSetAutocomplete';\n\nexport interface CodeInputProps {\n  binding: string | undefined;\n  name: string;\n  placeholder?: string;\n  defaultValue?: string;\n  onChange?: (value: string | undefined) => void;\n  creatable?: boolean;\n  maxSelectedValues?: number;\n  clearSearchOnChange?: boolean;\n  clearable?: boolean;\n}\n\nexport function CodeInput(props: CodeInputProps): JSX.Element {\n  const [value, setValue] = useState<string | undefined>(props.defaultValue);\n\n  function handleChange(newValues: ValueSetExpansionContains[]): void {\n    const newValue = newValues[0];\n    const newCode = valueSetElementToCode(newValue);\n    setValue(newCode);\n    if (props.onChange) {\n      props.onChange(newCode);\n    }\n  }\n\n  return (\n    <ValueSetAutocomplete\n      binding={props.binding}\n      name={props.name}\n      placeholder={props.placeholder}\n      defaultValue={codeToValueSetElement(value)}\n      onChange={handleChange}\n      creatable={props.creatable}\n      maxSelectedValues={props.maxSelectedValues ?? 1}\n      clearSearchOnChange={props.clearSearchOnChange}\n      clearable={props.clearable}\n    />\n  );\n}\n\nfunction codeToValueSetElement(code: string | undefined): ValueSetExpansionContains | undefined {\n  return code ? { code } : undefined;\n}\n\nfunction valueSetElementToCode(element: ValueSetExpansionContains | undefined): string | undefined {\n  return element?.code;\n}\n", "import { ValueSetExpansionContains } from '@medplum/fhirtypes';\nimport React, { useCallback } from 'react';\nimport {\n  AsyncAutocomplete,\n  AsyncAutocompleteOption,\n  AsyncAutocompleteProps,\n} from '../AsyncAutocomplete/AsyncAutocomplete';\nimport { useMedplum } from '@medplum/react-hooks';\n\nexport interface ValueSetAutocompleteProps\n  extends Omit<AsyncAutocompleteProps<ValueSetExpansionContains>, 'loadOptions' | 'toKey' | 'toOption'> {\n  binding: string | undefined;\n  creatable?: boolean;\n  clearable?: boolean;\n}\n\nfunction toKey(element: ValueSetExpansionContains): string {\n  if (typeof element.code === 'string') {\n    return element.code;\n  }\n  return JSON.stringify(element);\n}\n\nfunction getDisplay(item: ValueSetExpansionContains): string {\n  if (typeof item.display === 'string') {\n    return item.display;\n  }\n  return toKey(item);\n}\n\nfunction toOption(element: ValueSetExpansionContains): AsyncAutocompleteOption<ValueSetExpansionContains> {\n  return {\n    value: toKey(element),\n    label: getDisplay(element),\n    resource: element,\n  };\n}\n\nfunction createValue(input: string): ValueSetExpansionContains {\n  return {\n    code: input,\n    display: input,\n  };\n}\n\n/**\n * A low-level component to autocomplete based on a FHIR Valueset.\n * This is the base component for CodeableConceptInput, CodingInput, and CodeInput.\n * @param props - The ValueSetAutocomplete React props.\n * @returns The ValueSetAutocomplete React node.\n */\nexport function ValueSetAutocomplete(props: ValueSetAutocompleteProps): JSX.Element {\n  const medplum = useMedplum();\n  const { binding, creatable, clearable, ...rest } = props;\n\n  const loadValues = useCallback(\n    async (input: string, signal: AbortSignal): Promise<ValueSetExpansionContains[]> => {\n      if (!binding) {\n        return [];\n      }\n      const valueSet = await medplum.searchValueSet(binding, input, { signal });\n      const valueSetElements = valueSet.expansion?.contains as ValueSetExpansionContains[];\n      const newData: ValueSetExpansionContains[] = [];\n      for (const valueSetElement of valueSetElements) {\n        if (valueSetElement.code && !newData.some((item) => item.code === valueSetElement.code)) {\n          newData.push(valueSetElement);\n        }\n      }\n\n      return newData;\n    },\n    [medplum, binding]\n  );\n\n  return (\n    <AsyncAutocomplete\n      {...rest}\n      creatable={creatable ?? true}\n      clearable={clearable ?? true}\n      toKey={toKey}\n      toOption={toOption}\n      loadOptions={loadValues}\n      onCreate={createValue}\n      getCreateLabel={creatable === false ? undefined : (query: any) => `+ Create ${query}`}\n    />\n  );\n}\n", "import { Attachment } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\n\nexport interface AttachmentArrayDisplayProps {\n  values?: Attachment[];\n  maxWidth?: number;\n}\n\nexport function AttachmentArrayDisplay(props: AttachmentArrayDisplayProps): JSX.Element {\n  return (\n    <div>\n      {props.values?.map((v, index) => (\n        <div key={'attatchment-' + index}>\n          <AttachmentDisplay value={v} maxWidth={props.maxWidth} />\n        </div>\n      ))}\n    </div>\n  );\n}\n", "import { Anchor } from '@mantine/core';\nimport { Attachment } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface AttachmentDisplayProps {\n  value?: Attachment;\n  maxWidth?: number;\n}\n\nexport function AttachmentDisplay(props: AttachmentDisplayProps): JSX.Element | null {\n  const { contentType, url, title } = props.value ?? {};\n\n  if (!url) {\n    return null;\n  }\n\n  return (\n    <div data-testid=\"attachment-display\">\n      {contentType?.startsWith('image/') && (\n        <img data-testid=\"attachment-image\" style={{ maxWidth: props.maxWidth }} src={url} alt={title} />\n      )}\n      {contentType?.startsWith('video/') && (\n        <video data-testid=\"attachment-video\" style={{ maxWidth: props.maxWidth }} controls={true}>\n          <source type={contentType} src={url} />\n        </video>\n      )}\n      {contentType === 'application/pdf' && (\n        <div data-testid=\"attachment-pdf\" style={{ maxWidth: props.maxWidth, minHeight: 400 }}>\n          <iframe\n            width=\"100%\"\n            height=\"400\"\n            src={url + '#navpanes=0'}\n            allowFullScreen={true}\n            frameBorder={0}\n            seamless={true}\n          />\n        </div>\n      )}\n      <div data-testid=\"download-link\" style={{ padding: '2px 16px 16px 16px' }}>\n        <Anchor\n          href={url}\n          data-testid=\"attachment-details\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          download={getDownloadName(title)}\n        >\n          {title || 'Download'}\n        </Anchor>\n      </div>\n    </div>\n  );\n}\n\nfunction getDownloadName(title: string | undefined): string | undefined {\n  // Title often contains the filename by convention\n  return title?.includes('.') ? title : undefined;\n}\n", "import { ActionIcon } from '@mantine/core';\nimport { Attachment } from '@medplum/fhirtypes';\nimport { IconCircleMinus, IconCloudUpload } from '@tabler/icons-react';\nimport React, { useRef, useState } from 'react';\nimport { AttachmentButton } from '../AttachmentButton/AttachmentButton';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\nimport { killEvent } from '../utils/dom';\n\nexport interface AttachmentArrayInputProps {\n  name: string;\n  defaultValue?: Attachment[];\n  arrayElement?: boolean;\n  onChange?: (value: Attachment[]) => void;\n}\n\nexport function AttachmentArrayInput(props: AttachmentArrayInputProps): JSX.Element {\n  const [values, setValues] = useState<Attachment[]>(props.defaultValue ?? []);\n\n  const valuesRef = useRef<Attachment[]>();\n  valuesRef.current = values;\n\n  function setValuesWrapper(newValues: Attachment[]): void {\n    setValues(newValues);\n    if (props.onChange) {\n      props.onChange(newValues);\n    }\n  }\n\n  return (\n    <table style={{ width: '100%' }}>\n      <colgroup>\n        <col width=\"97%\" />\n        <col width=\"3%\" />\n      </colgroup>\n      <tbody>\n        {values.map((v: Attachment, index: number) => (\n          <tr key={`${index}-${values.length}`}>\n            <td>\n              <AttachmentDisplay value={v} maxWidth={200} />\n            </td>\n            <td>\n              <ActionIcon\n                title=\"Remove\"\n                size=\"sm\"\n                onClick={(e: React.MouseEvent) => {\n                  killEvent(e);\n                  const copy = values.slice();\n                  copy.splice(index, 1);\n                  setValuesWrapper(copy);\n                }}\n              >\n                <IconCircleMinus />\n              </ActionIcon>\n            </td>\n          </tr>\n        ))}\n        <tr>\n          <td></td>\n          <td>\n            <AttachmentButton\n              onUpload={(attachment: Attachment) => {\n                setValuesWrapper([...(valuesRef.current as Attachment[]), attachment]);\n              }}\n            >\n              {(props) => (\n                <ActionIcon {...props} title=\"Add\" size=\"sm\" color=\"green\">\n                  <IconCloudUpload size={16} />\n                </ActionIcon>\n              )}\n            </AttachmentButton>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n", "import { Attachment, Binary, OperationOutcome } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport React, { useRef } from 'react';\nimport { killEvent } from '../utils/dom';\nimport { normalizeOperationOutcome } from '@medplum/core';\n\nexport interface AttachmentButtonProps {\n  onUpload: (attachment: Attachment) => void;\n  onUploadStart?: () => void;\n  onUploadProgress?: (e: ProgressEvent) => void;\n  onUploadError?: (outcome: OperationOutcome) => void;\n  children(props: { onClick(e: React.MouseEvent): void }): React.ReactNode;\n}\n\nexport function AttachmentButton(props: AttachmentButtonProps): JSX.Element {\n  const medplum = useMedplum();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  function onClick(e: React.MouseEvent): void {\n    killEvent(e);\n    fileInputRef.current?.click();\n  }\n\n  function onFileChange(e: React.ChangeEvent): void {\n    killEvent(e);\n    const files = (e.target as HTMLInputElement).files;\n    if (files) {\n      Array.from(files).forEach(processFile);\n    }\n  }\n\n  /**\n   * Processes a single file.\n   * @param file - The file descriptor.\n   */\n  function processFile(file: File): void {\n    if (!file) {\n      return;\n    }\n\n    const fileName = file.name;\n    if (!fileName) {\n      return;\n    }\n\n    if (props.onUploadStart) {\n      props.onUploadStart();\n    }\n\n    const filename = file.name;\n    const contentType = file.type || 'application/octet-stream';\n    medplum\n      .createBinary(file, filename, contentType, props.onUploadProgress)\n      .then((binary: Binary) => {\n        props.onUpload({\n          contentType: binary.contentType,\n          url: binary.url,\n          title: filename,\n        });\n      })\n      .catch((err) => {\n        if (props.onUploadError) {\n          props.onUploadError(normalizeOperationOutcome(err));\n        }\n      });\n  }\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        data-testid=\"upload-file-input\"\n        style={{ display: 'none' }}\n        ref={fileInputRef}\n        onChange={(e) => onFileChange(e)}\n      />\n      {props.children({ onClick })}\n    </>\n  );\n}\n", "import { Button } from '@mantine/core';\nimport { Attachment } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { AttachmentButton } from '../AttachmentButton/AttachmentButton';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\nimport { killEvent } from '../utils/dom';\n\nexport interface AttachmentInputProps {\n  name: string;\n  defaultValue?: Attachment;\n  arrayElement?: boolean;\n  onChange?: (value: Attachment | undefined) => void;\n}\n\nexport function AttachmentInput(props: AttachmentInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n\n  function setValueWrapper(newValue: Attachment | undefined): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  if (value) {\n    return (\n      <>\n        <AttachmentDisplay value={value} maxWidth={200} />\n        <Button\n          onClick={(e: React.MouseEvent) => {\n            killEvent(e);\n            setValueWrapper(undefined);\n          }}\n        >\n          Remove\n        </Button>\n      </>\n    );\n  }\n\n  return (\n    <AttachmentButton onUpload={setValueWrapper}>{(props) => <Button {...props}>Upload...</Button>}</AttachmentButton>\n  );\n}\n", "import { getPropertyDisplayName, tryGetDataType, TypedValue } from '@medplum/core';\nimport React from 'react';\nimport { DEFAULT_IGNORED_PROPERTIES } from '../constants';\nimport { DescriptionList, DescriptionListEntry } from '../DescriptionList/DescriptionList';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\n\nexport interface BackboneElementDisplayProps {\n  value: TypedValue;\n  compact?: boolean;\n  ignoreMissingValues?: boolean;\n  link?: boolean;\n}\n\nexport function BackboneElementDisplay(props: BackboneElementDisplayProps): JSX.Element | null {\n  const typedValue = props.value;\n  const value = typedValue.value;\n  if (!value) {\n    return null;\n  }\n\n  const typeName = typedValue.type;\n  const typeSchema = tryGetDataType(typeName);\n  if (!typeSchema) {\n    return <div>{typeName}&nbsp;not implemented</div>;\n  }\n\n  if (\n    typeof value === 'object' &&\n    'name' in value &&\n    Object.keys(value).length === 1 &&\n    typeof value.name === 'string'\n  ) {\n    // Special case for common BackboneElement pattern\n    // Where there is an object with a single property 'name'\n    // Just display the name value.\n    return <div>{value.name}</div>;\n  }\n\n  return (\n    <DescriptionList compact={props.compact}>\n      {Object.entries(typeSchema.elements).map((entry) => {\n        const [key, property] = entry;\n        if (DEFAULT_IGNORED_PROPERTIES.includes(key)) {\n          return null;\n        }\n        const [propertyValue, propertyType] = getValueAndType(typedValue, key);\n        if (\n          props.ignoreMissingValues &&\n          (!propertyValue || (Array.isArray(propertyValue) && propertyValue.length === 0))\n        ) {\n          return null;\n        }\n        return (\n          <DescriptionListEntry key={key} term={getPropertyDisplayName(key)}>\n            <ResourcePropertyDisplay\n              property={property}\n              propertyType={propertyType}\n              value={propertyValue}\n              ignoreMissingValues={props.ignoreMissingValues}\n              link={props.link}\n            />\n          </DescriptionListEntry>\n        );\n      })}\n    </DescriptionList>\n  );\n}\n", "export const DEFAULT_IGNORED_PROPERTIES = [\n  'meta',\n  'implicitRules',\n  'language',\n  'text',\n  'contained',\n  'extension',\n  'modifierExtension',\n];\n", "import { createStyles } from '@mantine/core';\nimport React from 'react';\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateColumns: '30% 70%',\n    margin: 0,\n\n    '& > dt, & > dd': {\n      padding: `${theme.spacing.sm} ${theme.spacing.sm}`,\n      borderTop: `0.1px solid ${theme.colors.gray[3]}`,\n      margin: 0,\n    },\n  },\n\n  compact: {\n    gridTemplateColumns: '20% 80%',\n\n    '& > dt, & > dd': {\n      padding: `0 ${theme.spacing.xs} ${theme.spacing.xs} 0`,\n      border: 0,\n    },\n  },\n}));\n\nexport interface DescriptionListProps {\n  children: React.ReactNode;\n  compact?: boolean;\n}\n\nexport function DescriptionList(props: DescriptionListProps): JSX.Element {\n  const { children, compact } = props;\n  const { classes, cx } = useStyles();\n  return <dl className={cx(classes.root, { [classes.compact]: compact })}>{children}</dl>;\n}\n\nexport interface DescriptionListEntryProps {\n  term: string;\n  children: React.ReactNode;\n}\n\nexport function DescriptionListEntry(props: DescriptionListEntryProps): JSX.Element {\n  return (\n    <>\n      <dt>{props.term}</dt>\n      <dd>{props.children}</dd>\n    </>\n  );\n}\n", "import { ActionIcon, Box, CopyButton, Tooltip } from '@mantine/core';\nimport { formatDateTime, formatPeriod, formatTiming, InternalSchemaElement, PropertyType } from '@medplum/core';\nimport { IconCheck, IconCopy } from '@tabler/icons-react';\nimport React from 'react';\nimport { AddressDisplay } from '../AddressDisplay/AddressDisplay';\nimport { AttachmentArrayDisplay } from '../AttachmentArrayDisplay/AttachmentArrayDisplay';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\nimport { BackboneElementDisplay } from '../BackboneElementDisplay/BackboneElementDisplay';\nimport { CodeableConceptDisplay } from '../CodeableConceptDisplay/CodeableConceptDisplay';\nimport { CodingDisplay } from '../CodingDisplay/CodingDisplay';\nimport { ContactDetailDisplay } from '../ContactDetailDisplay/ContactDetailDisplay';\nimport { ContactPointDisplay } from '../ContactPointDisplay/ContactPointDisplay';\nimport { HumanNameDisplay } from '../HumanNameDisplay/HumanNameDisplay';\nimport { IdentifierDisplay } from '../IdentifierDisplay/IdentifierDisplay';\nimport { MoneyDisplay } from '../MoneyDisplay/MoneyDisplay';\nimport { QuantityDisplay } from '../QuantityDisplay/QuantityDisplay';\nimport { RangeDisplay } from '../RangeDisplay/RangeDisplay';\nimport { RatioDisplay } from '../RatioDisplay/RatioDisplay';\nimport { ReferenceDisplay } from '../ReferenceDisplay/ReferenceDisplay';\nimport { ResourceArrayDisplay } from '../ResourceArrayDisplay/ResourceArrayDisplay';\n\nexport interface ResourcePropertyDisplayProps {\n  property?: InternalSchemaElement;\n  propertyType: string;\n  value: any;\n  arrayElement?: boolean;\n  maxWidth?: number;\n  ignoreMissingValues?: boolean;\n  link?: boolean;\n}\n\n/**\n * Low-level component that renders a property from a given resource, given type information.\n * @param props - The ResourcePropertyDisplay React props.\n * @returns The ResourcePropertyDisplay React node.\n */\nexport function ResourcePropertyDisplay(props: ResourcePropertyDisplayProps): JSX.Element {\n  const { property, propertyType, value } = props;\n\n  const isIdProperty = property?.path?.endsWith('.id');\n  if (isIdProperty) {\n    return (\n      <Box component=\"div\" sx={{ display: 'flex', gap: 3, alignItems: 'center' }}>\n        {value}\n        <CopyButton value={value} timeout={2000}>\n          {({ copied, copy }) => (\n            <Tooltip label={copied ? 'Copied' : 'Copy'} withArrow position=\"right\">\n              <ActionIcon color={copied ? 'teal' : 'gray'} onClick={copy}>\n                {copied ? <IconCheck size=\"1rem\" /> : <IconCopy size=\"1rem\" />}\n              </ActionIcon>\n            </Tooltip>\n          )}\n        </CopyButton>\n      </Box>\n    );\n  }\n\n  if (property?.max && property.max > 1 && !props.arrayElement) {\n    if (propertyType === PropertyType.Attachment) {\n      return <AttachmentArrayDisplay values={value} maxWidth={props.maxWidth} />;\n    }\n    return (\n      <ResourceArrayDisplay\n        property={property}\n        values={value}\n        ignoreMissingValues={props.ignoreMissingValues}\n        link={props.link}\n      />\n    );\n  }\n\n  switch (propertyType) {\n    case PropertyType.boolean:\n      return <>{value === undefined ? '' : Boolean(value).toString()}</>;\n    case PropertyType.SystemString:\n    case PropertyType.string:\n      return <div style={{ whiteSpace: 'pre-wrap' }}>{value}</div>;\n    case PropertyType.code:\n    case PropertyType.date:\n    case PropertyType.decimal:\n    case PropertyType.integer:\n    case PropertyType.positiveInt:\n    case PropertyType.unsignedInt:\n    case PropertyType.uri:\n    case PropertyType.url:\n      return <>{value}</>;\n    case PropertyType.canonical:\n      return <ReferenceDisplay value={{ reference: value }} link={props.link} />;\n    case PropertyType.dateTime:\n    case PropertyType.instant:\n      return <>{formatDateTime(value)}</>;\n    case PropertyType.markdown:\n      return <pre>{value}</pre>;\n    case PropertyType.Address:\n      return <AddressDisplay value={value} />;\n    case PropertyType.Annotation:\n      return <>{value?.text}</>;\n    case PropertyType.Attachment:\n      return <AttachmentDisplay value={value} maxWidth={props.maxWidth} />;\n    case PropertyType.CodeableConcept:\n      return <CodeableConceptDisplay value={value} />;\n    case PropertyType.Coding:\n      return <CodingDisplay value={value} />;\n    case PropertyType.ContactDetail:\n      return <ContactDetailDisplay value={value} />;\n    case PropertyType.ContactPoint:\n      return <ContactPointDisplay value={value} />;\n    case PropertyType.HumanName:\n      return <HumanNameDisplay value={value} />;\n    case PropertyType.Identifier:\n      return <IdentifierDisplay value={value} />;\n    case PropertyType.Money:\n      return <MoneyDisplay value={value} />;\n    case PropertyType.Period:\n      return <>{formatPeriod(value)}</>;\n    case PropertyType.Quantity:\n    case PropertyType.Duration:\n      return <QuantityDisplay value={value} />;\n    case PropertyType.Range:\n      return <RangeDisplay value={value} />;\n    case PropertyType.Ratio:\n      return <RatioDisplay value={value} />;\n    case PropertyType.Reference:\n      return <ReferenceDisplay value={value} link={props.link} />;\n    case PropertyType.Timing:\n      return <>{formatTiming(value)}</>;\n    case PropertyType.Dosage:\n    case PropertyType.UsageContext:\n      return (\n        <BackboneElementDisplay\n          value={{ type: propertyType, value }}\n          compact={true}\n          ignoreMissingValues={props.ignoreMissingValues}\n        />\n      );\n    default:\n      if (!property) {\n        throw Error(`Displaying property of type ${props.propertyType} requires element schema`);\n      }\n      return (\n        <BackboneElementDisplay\n          value={{ type: property.type[0].code, value }}\n          compact={true}\n          ignoreMissingValues={props.ignoreMissingValues}\n        />\n      );\n  }\n}\n", "import { formatCodeableConcept } from '@medplum/core';\nimport { CodeableConcept } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface CodeableConceptDisplayProps {\n  value?: CodeableConcept;\n}\n\nexport function CodeableConceptDisplay(props: CodeableConceptDisplayProps): JSX.Element {\n  return <>{formatCodeableConcept(props.value)}</>;\n}\n", "import { formatCoding } from '@medplum/core';\nimport { Coding } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface CodingDisplayProps {\n  value?: Coding;\n}\n\nexport function CodingDisplay(props: CodingDisplayProps): JSX.Element {\n  return <>{formatCoding(props.value)}</>;\n}\n", "import { ContactDetail } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { ContactPointDisplay } from '../ContactPointDisplay/ContactPointDisplay';\n\nexport interface ContactDetailDisplayProps {\n  value?: ContactDetail;\n}\n\nexport function ContactDetailDisplay(props: ContactDetailDisplayProps): JSX.Element | null {\n  const contactDetail = props.value;\n  if (!contactDetail) {\n    return null;\n  }\n\n  return (\n    <>\n      {contactDetail.name}\n      {contactDetail.name && ': '}\n      {contactDetail.telecom?.map((telecom) => (\n        <ContactPointDisplay key={`telecom-${contactDetail.name}-${telecom.value}`} value={telecom} />\n      ))}\n    </>\n  );\n}\n", "import { ContactPoint } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface ContactPointDisplayProps {\n  value?: ContactPoint;\n}\n\nexport function ContactPointDisplay(props: ContactPointDisplayProps): JSX.Element | null {\n  const contactPoint = props.value;\n  if (!contactPoint) {\n    return null;\n  }\n\n  const builder = [];\n\n  if (contactPoint.value) {\n    builder.push(contactPoint.value);\n  }\n\n  if (contactPoint.use || contactPoint.system) {\n    builder.push(' [');\n\n    if (contactPoint.use) {\n      builder.push(contactPoint.use);\n    }\n\n    if (contactPoint.use && contactPoint.system) {\n      builder.push(' ');\n    }\n\n    if (contactPoint.system) {\n      builder.push(contactPoint.system);\n    }\n\n    builder.push(']');\n  }\n\n  return <>{builder.join('').trim()}</>;\n}\n", "import { Identifier } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface IdentifierDisplayProps {\n  value?: Identifier;\n}\n\nexport function IdentifierDisplay(props: IdentifierDisplayProps): JSX.Element {\n  return (\n    <div>\n      {props.value?.system}: {props.value?.value}\n    </div>\n  );\n}\n", "import { formatMoney } from '@medplum/core';\nimport { Money } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface MoneyDisplayProps {\n  value?: Money;\n}\n\nexport function MoneyDisplay(props: MoneyDisplayProps): JSX.Element | null {\n  return <>{formatMoney(props.value)}</>;\n}\n", "import { formatQuantity } from '@medplum/core';\nimport { Quantity } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface QuantityDisplayProps {\n  value?: Quantity;\n}\n\nexport function QuantityDisplay(props: QuantityDisplayProps): JSX.Element | null {\n  return <>{formatQuantity(props.value)}</>;\n}\n", "import { formatRange } from '@medplum/core';\nimport { Range } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface RangeDisplayProps {\n  value?: Range;\n}\n\nexport function RangeDisplay(props: RangeDisplayProps): JSX.Element | null {\n  return <>{formatRange(props.value)}</>;\n}\n", "import { Ratio } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { QuantityDisplay } from '../QuantityDisplay/QuantityDisplay';\n\nexport interface RatioDisplayProps {\n  value?: Ratio;\n}\n\nexport function RatioDisplay(props: RatioDisplayProps): JSX.Element | null {\n  const value = props.value;\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <>\n      <QuantityDisplay value={value.numerator} />\n      &nbsp;/&nbsp;\n      <QuantityDisplay value={value.denominator} />\n    </>\n  );\n}\n", "import { stringify } from '@medplum/core';\nimport { Reference } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\n\nexport interface ReferenceDisplayProps {\n  value?: Reference;\n  link?: boolean;\n}\n\nexport function ReferenceDisplay(props: ReferenceDisplayProps): JSX.Element | null {\n  if (!props.value) {\n    return null;\n  }\n\n  const displayString = props.value.display || props.value.reference || stringify(props.value);\n\n  // The \"link\" prop defaults to \"true\"; undefined is treated as \"true\"\n  // To disable the link, it must be explicitly \"false\"\n  if (props.link !== false && props.value.reference) {\n    return <MedplumLink to={props.value}>{displayString}</MedplumLink>;\n  } else {\n    return <>{displayString}</>;\n  }\n}\n", "import { InternalSchemaElement } from '@medplum/core';\nimport React from 'react';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\n\nexport interface ResourceArrayDisplayProps {\n  property: InternalSchemaElement;\n  values: any[];\n  arrayElement?: boolean;\n  ignoreMissingValues?: boolean;\n  link?: boolean;\n}\n\nexport function ResourceArrayDisplay(props: ResourceArrayDisplayProps): JSX.Element {\n  const { property, values } = props;\n  const propertyType = property.type[0].code;\n  return props.values ? (\n    <>\n      {values.map((v: any, index: number) => (\n        <div key={`${index}-${values.length}`}>\n          <ResourcePropertyDisplay\n            arrayElement={true}\n            property={property}\n            propertyType={propertyType}\n            value={v}\n            ignoreMissingValues={props.ignoreMissingValues}\n            link={props.link}\n          />\n        </div>\n      ))}\n    </>\n  ) : (\n    <></>\n  );\n}\n", "import { getTypedPropertyValue, TypedValue } from '@medplum/core';\n\n/**\n * Returns the value of the property and the property type.\n * Some property definitions support multiple types.\n * For example, \"Observation.value[x]\" can be \"valueString\", \"valueInteger\", \"valueQuantity\", etc.\n * According to the spec, there can only be one property for a given element definition.\n * This function returns the value and the type.\n * @param context - The base context (usually a FHIR resource).\n * @param path - The property path.\n * @returns The value of the property and the property type.\n */\nexport function getValueAndType(context: TypedValue, path: string): [any, string] {\n  const typedResult = getTypedPropertyValue(context, path);\n  if (!typedResult) {\n    return [undefined, 'undefined'];\n  }\n\n  if (Array.isArray(typedResult)) {\n    return [typedResult.map((e) => e.value), typedResult[0].type];\n  }\n\n  return [typedResult.value, typedResult.type];\n}\n", "import { Stack } from '@mantine/core';\nimport { getPropertyDisplayName, tryGetDataType } from '@medplum/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { CheckboxFormSection } from '../CheckboxFormSection/CheckboxFormSection';\nimport { DEFAULT_IGNORED_PROPERTIES } from '../constants';\nimport { FormSection } from '../FormSection/FormSection';\nimport { setPropertyValue } from '../ResourceForm/ResourceForm.utils';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\nimport { ResourcePropertyInput } from '../ResourcePropertyInput/ResourcePropertyInput';\n\nexport interface BackboneElementInputProps {\n  typeName: string;\n  defaultValue?: any;\n  outcome?: OperationOutcome;\n  onChange?: (value: any) => void;\n}\n\nexport function BackboneElementInput(props: BackboneElementInputProps): JSX.Element {\n  const [value, setValue] = useState<any>(props.defaultValue ?? {});\n\n  function setValueWrapper(newValue: any): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  const typeName = props.typeName;\n  const typeSchema = tryGetDataType(typeName);\n  if (!typeSchema) {\n    return <div>{typeName}&nbsp;not implemented</div>;\n  }\n\n  const typedValue = { type: typeName, value };\n\n  return (\n    <Stack>\n      {Object.entries(typeSchema.elements).map(([key, property]) => {\n        if (key === 'id' || DEFAULT_IGNORED_PROPERTIES.includes(key)) {\n          return null;\n        }\n        if (!property.type) {\n          return null;\n        }\n\n        const [propertyValue, propertyType] = getValueAndType(typedValue, key);\n        const required = property.min !== undefined && property.min > 0;\n\n        if (property.type.length === 1 && property.type[0].code === 'boolean') {\n          return (\n            <CheckboxFormSection\n              key={key}\n              title={getPropertyDisplayName(key)}\n              description={property.description}\n              htmlFor={key}\n            >\n              <ResourcePropertyInput\n                property={property}\n                name={key}\n                defaultValue={propertyValue}\n                defaultPropertyType={propertyType}\n                outcome={props.outcome}\n                onChange={(newValue: any, propName?: string) => {\n                  setValueWrapper(setPropertyValue(value, key, propName ?? key, property, newValue));\n                }}\n              />\n            </CheckboxFormSection>\n          );\n        }\n\n        return (\n          <FormSection\n            key={key}\n            title={getPropertyDisplayName(key)}\n            description={property.description}\n            withAsterisk={required}\n            htmlFor={key}\n            outcome={props.outcome}\n          >\n            <ResourcePropertyInput\n              property={property}\n              name={key}\n              defaultValue={propertyValue}\n              defaultPropertyType={propertyType}\n              onChange={(newValue: any, propName?: string) => {\n                setValueWrapper(setPropertyValue(value, key, propName ?? key, property, newValue));\n              }}\n            />\n          </FormSection>\n        );\n      })}\n    </Stack>\n  );\n}\n", "import { Group, Input } from '@mantine/core';\nimport React from 'react';\n\nexport interface CheckboxFormSectionProps {\n  htmlFor?: string;\n  title?: string;\n  description?: string;\n  withAsterisk?: boolean;\n  children?: React.ReactNode;\n}\n\nexport function CheckboxFormSection(props: CheckboxFormSectionProps): JSX.Element {\n  return (\n    <Group noWrap>\n      <div>{props.children}</div>\n      <div>\n        <Input.Wrapper\n          id={props.htmlFor}\n          label={props.title}\n          description={props.description}\n          withAsterisk={props.withAsterisk}\n        >\n          {(() => null)()}\n        </Input.Wrapper>\n      </div>\n    </Group>\n  );\n}\n", "import { Input } from '@mantine/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { getErrorsForInput } from '../utils/outcomes';\n\nexport interface FormSectionProps {\n  title?: string;\n  htmlFor?: string;\n  description?: string;\n  withAsterisk?: boolean;\n  outcome?: OperationOutcome;\n  children?: React.ReactNode;\n}\n\nexport function FormSection(props: FormSectionProps): JSX.Element {\n  return (\n    <Input.Wrapper\n      id={props.htmlFor}\n      label={props.title}\n      description={props.description}\n      withAsterisk={props.withAsterisk}\n      error={getErrorsForInput(props.outcome, props.htmlFor)}\n    >\n      {props.children}\n    </Input.Wrapper>\n  );\n}\n", "import { OperationOutcome, OperationOutcomeIssue } from '@medplum/fhirtypes';\n\nexport function getErrorsForInput(\n  outcome: OperationOutcome | undefined,\n  expression: string | undefined\n): string | undefined {\n  return outcome?.issue\n    ?.filter((issue) => isExpressionMatch(issue.expression?.[0], expression))\n    ?.map((issue) => issue.details?.text)\n    ?.join('\\n');\n}\n\nexport function getIssuesForExpression(\n  outcome: OperationOutcome | undefined,\n  expression: string | undefined\n): OperationOutcomeIssue[] | undefined {\n  return outcome?.issue?.filter((issue) => isExpressionMatch(issue.expression?.[0], expression));\n}\n\nfunction isExpressionMatch(expr1: string | undefined, expr2: string | undefined): boolean {\n  // Expression can be either \"fieldName\" or \"resourceType.fieldName\"\n  if (expr1 === expr2) {\n    return true;\n  }\n  if (!expr1 || !expr2) {\n    return false;\n  }\n  const dot1 = expr1.indexOf('.');\n  if (dot1 >= 0 && expr1.substring(dot1 + 1) === expr2) {\n    return true;\n  }\n  const dot2 = expr2.indexOf('.');\n  if (dot2 >= 0 && expr2.substring(dot2 + 1) === expr1) {\n    return true;\n  }\n  return false;\n}\n", "import { capitalize, InternalSchemaElement } from '@medplum/core';\n\nexport function setPropertyValue(\n  obj: any,\n  key: string,\n  propName: string,\n  elementDefinition: InternalSchemaElement,\n  value: any\n): any {\n  const types = elementDefinition.type;\n  if (types.length > 1) {\n    for (const type of types) {\n      const compoundKey = key.replace('[x]', capitalize(type.code as string));\n      if (compoundKey in obj) {\n        delete obj[compoundKey];\n      }\n    }\n  }\n  obj[propName] = value;\n  return obj;\n}\n", "import { Checkbox, Group, NativeSelect, Textarea, TextInput } from '@mantine/core';\nimport { capitalize, InternalSchemaElement, PropertyType } from '@medplum/core';\nimport { ElementDefinitionType, OperationOutcome } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { AddressInput } from '../AddressInput/AddressInput';\nimport { AnnotationInput } from '../AnnotationInput/AnnotationInput';\nimport { AttachmentArrayInput } from '../AttachmentArrayInput/AttachmentArrayInput';\nimport { AttachmentInput } from '../AttachmentInput/AttachmentInput';\nimport { BackboneElementInput } from '../BackboneElementInput/BackboneElementInput';\nimport { CodeableConceptInput } from '../CodeableConceptInput/CodeableConceptInput';\nimport { CodeInput } from '../CodeInput/CodeInput';\nimport { CodingInput } from '../CodingInput/CodingInput';\nimport { ContactDetailInput } from '../ContactDetailInput/ContactDetailInput';\nimport { ContactPointInput } from '../ContactPointInput/ContactPointInput';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { ExtensionInput } from '../ExtensionInput/ExtensionInput';\nimport { HumanNameInput } from '../HumanNameInput/HumanNameInput';\nimport { IdentifierInput } from '../IdentifierInput/IdentifierInput';\nimport { MoneyInput } from '../MoneyInput/MoneyInput';\nimport { PeriodInput } from '../PeriodInput/PeriodInput';\nimport { QuantityInput } from '../QuantityInput/QuantityInput';\nimport { RangeInput } from '../RangeInput/RangeInput';\nimport { RatioInput } from '../RatioInput/RatioInput';\nimport { ReferenceInput } from '../ReferenceInput/ReferenceInput';\nimport { ResourceArrayInput } from '../ResourceArrayInput/ResourceArrayInput';\nimport { TimingInput } from '../TimingInput/TimingInput';\nimport { getErrorsForInput } from '../utils/outcomes';\n\nexport interface ResourcePropertyInputProps {\n  property: InternalSchemaElement;\n  name: string;\n  defaultPropertyType?: string;\n  defaultValue?: any;\n  arrayElement?: boolean;\n  onChange?: (value: any, propName?: string) => void;\n  outcome?: OperationOutcome;\n}\n\nexport function ResourcePropertyInput(props: ResourcePropertyInputProps): JSX.Element {\n  const property = props.property;\n  const propertyType = props.defaultPropertyType ?? property.type[0].code;\n  const name = props.name;\n  const value = props.defaultValue;\n\n  if (property.max > 1 && !props.arrayElement) {\n    if (propertyType === PropertyType.Attachment) {\n      return <AttachmentArrayInput name={name} defaultValue={value} onChange={props.onChange} />;\n    }\n    return <ResourceArrayInput property={property} name={name} defaultValue={value} onChange={props.onChange} />;\n  }\n\n  const propertyTypes = property.type as ElementDefinitionType[];\n  if (propertyTypes.length > 1) {\n    return <ElementDefinitionInputSelector elementDefinitionTypes={propertyTypes} {...props} />;\n  } else {\n    return <ElementDefinitionTypeInput elementDefinitionType={propertyTypes[0]} {...props} />;\n  }\n}\n\nexport interface ElementDefinitionSelectorProps extends ResourcePropertyInputProps {\n  elementDefinitionTypes: ElementDefinitionType[];\n}\n\nexport function ElementDefinitionInputSelector(props: ElementDefinitionSelectorProps): JSX.Element {\n  const propertyTypes = props.elementDefinitionTypes;\n  let initialPropertyType: ElementDefinitionType | undefined = undefined;\n  if (props.defaultPropertyType) {\n    initialPropertyType = propertyTypes.find((t) => t.code === props.defaultPropertyType) as ElementDefinitionType;\n  }\n  if (!initialPropertyType) {\n    initialPropertyType = propertyTypes[0];\n  }\n  const [selectedType, setSelectedType] = useState(initialPropertyType);\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <NativeSelect\n        style={{ width: '200px' }}\n        defaultValue={selectedType.code}\n        onChange={(e) => {\n          setSelectedType(\n            propertyTypes.find(\n              (type: ElementDefinitionType) => type.code === e.currentTarget.value\n            ) as ElementDefinitionType\n          );\n        }}\n        data={propertyTypes.map((type: ElementDefinitionType) => ({\n          value: type.code as string,\n          label: type.code as string,\n        }))}\n      />\n      <ElementDefinitionTypeInput\n        {...props}\n        elementDefinitionType={selectedType}\n        onChange={(newValue: any) => {\n          if (props.onChange) {\n            props.onChange(newValue, props.name.replace('[x]', capitalize(selectedType.code as string)));\n          }\n        }}\n      />\n    </Group>\n  );\n}\n\nexport interface ElementDefinitionTypeInputProps extends ResourcePropertyInputProps {\n  elementDefinitionType: ElementDefinitionType;\n}\n\nexport function ElementDefinitionTypeInput(props: ElementDefinitionTypeInputProps): JSX.Element {\n  const property = props.property;\n  const propertyType = props.elementDefinitionType.code;\n  const name = props.name;\n  const value = props.defaultValue;\n  const required = property.min !== undefined && property.min > 0;\n\n  switch (propertyType) {\n    // 2.24.0.1 Primitive Types\n    // https://www.hl7.org/fhir/datatypes.html#primitive\n\n    case PropertyType.SystemString:\n    case PropertyType.canonical:\n    case PropertyType.string:\n    case PropertyType.time:\n    case PropertyType.uri:\n    case PropertyType.url:\n      return (\n        <TextInput\n          id={name}\n          name={name}\n          data-testid={name}\n          defaultValue={value}\n          required={required}\n          onChange={(e) => {\n            if (props.onChange) {\n              props.onChange(e.currentTarget.value);\n            }\n          }}\n          error={getErrorsForInput(props.outcome, name)}\n        />\n      );\n    case PropertyType.date:\n      return (\n        <TextInput\n          type=\"date\"\n          id={name}\n          name={name}\n          data-testid={name}\n          defaultValue={value}\n          required={required}\n          onChange={(e) => {\n            if (props.onChange) {\n              props.onChange(e.currentTarget.value);\n            }\n          }}\n          error={getErrorsForInput(props.outcome, name)}\n        />\n      );\n    case PropertyType.dateTime:\n    case PropertyType.instant:\n      return <DateTimeInput name={name} defaultValue={value} onChange={props.onChange} outcome={props.outcome} />;\n    case PropertyType.decimal:\n    case PropertyType.integer:\n    case PropertyType.positiveInt:\n    case PropertyType.unsignedInt:\n      return (\n        <TextInput\n          type=\"number\"\n          step={propertyType === PropertyType.decimal ? 'any' : '1'}\n          id={name}\n          name={name}\n          data-testid={name}\n          defaultValue={value}\n          required={required}\n          onChange={(e) => {\n            if (props.onChange) {\n              props.onChange(e.currentTarget.valueAsNumber);\n            }\n          }}\n        />\n      );\n    case PropertyType.code:\n      return (\n        <CodeInput binding={property.binding?.valueSet} name={name} defaultValue={value} onChange={props.onChange} />\n      );\n    case PropertyType.boolean:\n      return (\n        <Checkbox\n          id={name}\n          name={name}\n          data-testid={name}\n          defaultChecked={!!value}\n          onChange={(e) => {\n            if (props.onChange) {\n              props.onChange(e.currentTarget.checked);\n            }\n          }}\n        />\n      );\n    case PropertyType.markdown:\n      return (\n        <Textarea\n          id={name}\n          name={name}\n          data-testid={name}\n          defaultValue={value}\n          required={required}\n          onChange={(e) => {\n            if (props.onChange) {\n              props.onChange(e.currentTarget.value);\n            }\n          }}\n        />\n      );\n\n    // 2.24.0.2 Complex Types\n    // https://www.hl7.org/fhir/datatypes.html#complex\n\n    case PropertyType.Address:\n      return <AddressInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Annotation:\n      return <AnnotationInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Attachment:\n      return <AttachmentInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.CodeableConcept:\n      return (\n        <CodeableConceptInput\n          binding={property.binding?.valueSet}\n          name={name}\n          defaultValue={value}\n          onChange={props.onChange}\n        />\n      );\n    case PropertyType.Coding:\n      return (\n        <CodingInput binding={property.binding?.valueSet} name={name} defaultValue={value} onChange={props.onChange} />\n      );\n    case PropertyType.ContactDetail:\n      return <ContactDetailInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.ContactPoint:\n      return <ContactPointInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Extension:\n      return <ExtensionInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.HumanName:\n      return <HumanNameInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Identifier:\n      return <IdentifierInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Money:\n      return <MoneyInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Period:\n      return <PeriodInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Duration:\n    case PropertyType.Quantity:\n      return <QuantityInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Range:\n      return <RangeInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Ratio:\n      return <RatioInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Reference:\n      return (\n        <ReferenceInput\n          name={name}\n          defaultValue={value}\n          targetTypes={getTargetTypes(property)}\n          onChange={props.onChange}\n        />\n      );\n    case PropertyType.Timing:\n      return <TimingInput name={name} defaultValue={value} onChange={props.onChange} />;\n    case PropertyType.Dosage:\n    case PropertyType.UsageContext:\n      return (\n        <BackboneElementInput\n          typeName={propertyType}\n          defaultValue={value}\n          onChange={props.onChange}\n          outcome={props.outcome}\n        />\n      );\n    default:\n      return (\n        <BackboneElementInput\n          typeName={property.type[0].code}\n          defaultValue={value}\n          onChange={props.onChange}\n          outcome={props.outcome}\n        />\n      );\n  }\n}\n\nfunction getTargetTypes(property?: InternalSchemaElement): string[] | undefined {\n  return property?.type?.[0]?.targetProfile?.map((p) => p.split('/').pop() as string);\n}\n", "import { CodeableConcept, ValueSetExpansionContains } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { ValueSetAutocomplete } from '../ValueSetAutocomplete/ValueSetAutocomplete';\n\nexport interface CodeableConceptInputProps {\n  binding: string | undefined;\n  name: string;\n  placeholder?: string;\n  defaultValue?: CodeableConcept;\n  onChange?: (value: CodeableConcept | undefined) => void;\n}\n\nexport function CodeableConceptInput(props: CodeableConceptInputProps): JSX.Element {\n  const [value, setValue] = useState<CodeableConcept | undefined>(props.defaultValue);\n\n  function handleChange(newValues: ValueSetExpansionContains[]): void {\n    const newConcept = valueSetElementToCodeableConcept(newValues);\n    setValue(newConcept);\n    if (props.onChange) {\n      props.onChange(newConcept);\n    }\n  }\n\n  return (\n    <ValueSetAutocomplete\n      binding={props.binding}\n      name={props.name}\n      placeholder={props.placeholder}\n      defaultValue={value && codeableConceptToValueSetElement(value)}\n      maxSelectedValues={1}\n      onChange={handleChange}\n    />\n  );\n}\n\nfunction codeableConceptToValueSetElement(concept: CodeableConcept): ValueSetExpansionContains[] | undefined {\n  return concept.coding?.map((c) => ({\n    system: c.system,\n    code: c.code,\n    display: c.display,\n  }));\n}\n\nfunction valueSetElementToCodeableConcept(elements: ValueSetExpansionContains[]): CodeableConcept | undefined {\n  if (elements.length === 0) {\n    return undefined;\n  }\n  return {\n    coding: elements.map((e) => ({\n      system: e.system,\n      code: e.code,\n      display: e.display,\n    })),\n  };\n}\n", "import { Coding, ValueSetExpansionContains } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { ValueSetAutocomplete } from '../ValueSetAutocomplete/ValueSetAutocomplete';\n\nexport interface CodingInputProps {\n  binding: string | undefined;\n  name: string;\n  placeholder?: string;\n  defaultValue?: Coding;\n  onChange?: (value: Coding | undefined) => void;\n}\n\nexport function CodingInput(props: CodingInputProps): JSX.Element {\n  const [value, setValue] = useState<Coding | undefined>(props.defaultValue);\n\n  function handleChange(newValues: ValueSetExpansionContains[]): void {\n    const newValue = newValues[0];\n    const newConcept = newValue && valueSetElementToCoding(newValue);\n    setValue(newConcept);\n    if (props.onChange) {\n      props.onChange(newConcept);\n    }\n  }\n\n  return (\n    <ValueSetAutocomplete\n      binding={props.binding}\n      name={props.name}\n      placeholder={props.placeholder}\n      defaultValue={value && codingToValueSetElement(value)}\n      maxSelectedValues={1}\n      onChange={handleChange}\n    />\n  );\n}\n\nfunction codingToValueSetElement(coding: Coding): ValueSetExpansionContains {\n  return {\n    system: coding.system,\n    code: coding.code,\n    display: coding.display,\n  };\n}\n\nfunction valueSetElementToCoding(element: ValueSetExpansionContains): Coding {\n  return {\n    system: element.system,\n    code: element.code,\n    display: element.display,\n  };\n}\n", "import { Group, TextInput } from '@mantine/core';\nimport { ContactDetail, ContactPoint } from '@medplum/fhirtypes';\nimport React, { useRef, useState } from 'react';\nimport { ContactPointInput } from '../ContactPointInput/ContactPointInput';\n\nexport interface ContactDetailInputProps {\n  name: string;\n  defaultValue?: ContactDetail;\n  onChange?: (value: ContactDetail) => void;\n}\n\nexport function ContactDetailInput(props: ContactDetailInputProps): JSX.Element {\n  const [contactPoint, setContactDetail] = useState(props.defaultValue);\n\n  const ref = useRef<ContactDetail>();\n  ref.current = contactPoint;\n\n  function setContactDetailWrapper(newValue: ContactDetail): void {\n    setContactDetail(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  function setName(name: string): void {\n    const newValue: ContactDetail = { ...ref.current, name };\n    if (!name) {\n      delete newValue.name;\n    }\n    setContactDetailWrapper(newValue);\n  }\n\n  function setTelecom(telecom: ContactPoint | undefined): void {\n    const newValue: ContactDetail = { ...ref.current, telecom: telecom && [telecom] };\n    if (!telecom) {\n      delete newValue.telecom;\n    }\n    setContactDetailWrapper(newValue);\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <TextInput\n        data-testid={props.name + '-name'}\n        name={props.name + '-name'}\n        placeholder=\"Name\"\n        style={{ width: 180 }}\n        defaultValue={contactPoint?.name}\n        onChange={(e) => setName(e.currentTarget.value)}\n      />\n      <ContactPointInput\n        name={props.name + '-telecom'}\n        defaultValue={contactPoint?.telecom?.[0]}\n        onChange={setTelecom}\n      />\n    </Group>\n  );\n}\n", "import { Group, NativeSelect, TextInput } from '@mantine/core';\nimport { ContactPoint } from '@medplum/fhirtypes';\nimport React, { useRef, useState } from 'react';\n\nexport interface ContactPointInputProps {\n  name: string;\n  defaultValue?: ContactPoint;\n  onChange?: (value: ContactPoint | undefined) => void;\n}\n\nexport function ContactPointInput(props: ContactPointInputProps): JSX.Element {\n  const [contactPoint, setContactPoint] = useState(props.defaultValue);\n\n  const ref = useRef<ContactPoint>();\n  ref.current = contactPoint;\n\n  function setContactPointWrapper(newValue: ContactPoint | undefined): void {\n    if (newValue && Object.keys(newValue).length === 0) {\n      newValue = undefined;\n    }\n    setContactPoint(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  function setSystem(system: 'url' | 'phone' | 'fax' | 'email' | 'pager' | 'sms' | 'other'): void {\n    const newValue: ContactPoint = { ...ref.current, system };\n    if (!system) {\n      delete newValue.system;\n    }\n    setContactPointWrapper(newValue);\n  }\n\n  function setUse(use: 'home' | 'work' | 'temp' | 'old' | 'mobile'): void {\n    const newValue: ContactPoint = { ...ref.current, use };\n    if (!use) {\n      delete newValue.use;\n    }\n    setContactPointWrapper(newValue);\n  }\n\n  function setValue(value: string): void {\n    const newValue: ContactPoint = { ...ref.current, value };\n    if (!value) {\n      delete newValue.value;\n    }\n    setContactPointWrapper(newValue);\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <NativeSelect\n        data-testid=\"system\"\n        defaultValue={contactPoint?.system}\n        onChange={(e) =>\n          setSystem(e.currentTarget.value as 'url' | 'phone' | 'fax' | 'email' | 'pager' | 'sms' | 'other')\n        }\n        data={['', 'email', 'phone', 'fax', 'pager', 'sms', 'other']}\n      />\n      <NativeSelect\n        data-testid=\"use\"\n        defaultValue={contactPoint?.use}\n        onChange={(e) => setUse(e.currentTarget.value as 'home' | 'work' | 'temp' | 'old' | 'mobile')}\n        data={['', 'home', 'work', 'temp', 'old', 'mobile']}\n      />\n      <TextInput\n        placeholder=\"Value\"\n        defaultValue={contactPoint?.value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n      />\n    </Group>\n  );\n}\n", "import { TextInput } from '@mantine/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { getErrorsForInput } from '../utils/outcomes';\nimport { convertIsoToLocal, convertLocalToIso } from './DateTimeInput.utils';\n\nexport interface DateTimeInputProps {\n  name?: string;\n  placeholder?: string;\n  defaultValue?: string;\n  autoFocus?: boolean;\n  required?: boolean;\n  outcome?: OperationOutcome;\n  onChange?: (value: string) => void;\n}\n\n/**\n * The DateTimeInput component is a wrapper around the HTML5 input type=\"datetime-local\".\n * The main purpose is to reconcile time zones.\n * Most of our date/time values are in ISO-8601, which includes a time zone offset.\n * The datetime-local input does not support the time zone offset.\n * @param props - The Input props.\n * @returns The JSX element to render.\n */\nexport function DateTimeInput(props: DateTimeInputProps): JSX.Element {\n  return (\n    <TextInput\n      id={props.name}\n      name={props.name}\n      data-autofocus={props.autoFocus}\n      data-testid={props.name}\n      placeholder={props.placeholder}\n      required={props.required}\n      type={getInputType()}\n      defaultValue={convertIsoToLocal(props.defaultValue)}\n      autoFocus={props.autoFocus}\n      error={getErrorsForInput(props.outcome, props.name)}\n      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n        if (props.onChange) {\n          const newValue = e.currentTarget.value;\n          props.onChange(convertLocalToIso(newValue));\n        }\n      }}\n    />\n  );\n}\n\n/**\n * Returns the input type for the requested type.\n * JSDOM does not support many of the valid <input> type attributes.\n * For example, it won't fire change events for <input type=\"datetime-local\">.\n * @returns The input type for the current environment.\n */\nfunction getInputType(): string {\n  return import.meta.env.NODE_ENV === 'test' ? 'text' : 'datetime-local';\n}\n", "import { isValidDate } from '@medplum/core';\n\n/**\n * Converts an ISO-8601 date/time string to a local date/time string.\n * @param isoString - The ISO-8601 date/time string to convert.\n * @returns The local date/time string.\n */\nexport function convertIsoToLocal(isoString: string | undefined): string {\n  if (!isoString) {\n    return '';\n  }\n\n  // Convert the ISO-8601 date to a local datetime-local value.\n  // See: https://developer.mozilla.org/en-US/docs/Web/HTML/Date_and_time_formats#local_date_and_time_strings\n  // See: https://stackoverflow.com/a/60368477\n  const date = new Date(isoString);\n  if (!isValidDate(date)) {\n    // If the input string was malformed, return an empty string.\n    return '';\n  }\n\n  return date.toLocaleDateString('sv') + 'T' + date.toLocaleTimeString('sv');\n}\n\n/**\n * Converts a local date/time string to an ISO-8601 date/time string.\n * @param localString - The local date/time string to convert.\n * @returns The ISO-8601 date/time string.\n */\nexport function convertLocalToIso(localString: string | undefined): string {\n  if (!localString) {\n    return '';\n  }\n\n  // Try to parse the local string as a Date\n  // JavaScript's Date() constructor defaults to the local time zone.\n  // The Date() constructor will throw if the value is malformed.\n  const date = new Date(localString);\n  if (!isValidDate(date)) {\n    // If the input string was malformed, return an empty string.\n    return '';\n  }\n\n  return date.toISOString();\n}\n", "import { JsonInput } from '@mantine/core';\nimport { stringify } from '@medplum/core';\nimport { Extension } from '@medplum/fhirtypes';\nimport React from 'react';\n\nexport interface ExtensionInputProps {\n  name: string;\n  defaultValue?: Extension;\n  onChange?: (value: Extension) => void;\n}\n\nexport function ExtensionInput(props: ExtensionInputProps): JSX.Element {\n  return (\n    <JsonInput\n      id={props.name}\n      name={props.name}\n      data-testid=\"extension-input\"\n      defaultValue={stringify(props.defaultValue)}\n      deserialize={JSON.parse}\n      onChange={(newValue) => {\n        if (props.onChange) {\n          props.onChange(JSON.parse(newValue));\n        }\n      }}\n    />\n  );\n}\n", "import { Group, NativeSelect, TextInput } from '@mantine/core';\nimport { HumanName } from '@medplum/fhirtypes';\nimport React, { useRef, useState } from 'react';\n\nexport interface HumanNameInputProps {\n  name: string;\n  defaultValue?: HumanName;\n  onChange?: (value: HumanName) => void;\n}\n\nexport function HumanNameInput(props: HumanNameInputProps): JSX.Element {\n  const [value, setValue] = useState<HumanName | undefined>(props.defaultValue);\n\n  const valueRef = useRef<HumanName>();\n  valueRef.current = value;\n\n  function setValueWrapper(newValue: HumanName): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  function setUse(use: 'temp' | 'old' | 'usual' | 'official' | 'nickname' | 'anonymous' | 'maiden' | undefined): void {\n    setValueWrapper({ ...valueRef.current, use: use || undefined });\n  }\n\n  function setPrefix(prefix: string): void {\n    setValueWrapper({\n      ...valueRef.current,\n      prefix: prefix ? prefix.split(' ') : undefined,\n    });\n  }\n\n  function setGiven(given: string): void {\n    setValueWrapper({\n      ...valueRef.current,\n      given: given ? given.split(' ') : undefined,\n    });\n  }\n\n  function setFamily(family: string): void {\n    setValueWrapper({\n      ...valueRef.current,\n      family: family || undefined,\n    });\n  }\n\n  function setSuffix(suffix: string): void {\n    setValueWrapper({\n      ...valueRef.current,\n      suffix: suffix ? suffix.split(' ') : undefined,\n    });\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <NativeSelect\n        defaultValue={value?.use}\n        name={props.name + '-use'}\n        data-testid=\"use\"\n        onChange={(e) =>\n          setUse(e.currentTarget.value as 'temp' | 'old' | 'usual' | 'official' | 'nickname' | 'anonymous' | 'maiden')\n        }\n        data={['', 'temp', 'old', 'usual', 'official', 'nickname', 'anonymous', 'maiden']}\n      />\n      <TextInput\n        placeholder=\"Prefix\"\n        name={props.name + '-prefix'}\n        defaultValue={value?.prefix?.join(' ')}\n        onChange={(e) => setPrefix(e.currentTarget.value)}\n      />\n      <TextInput\n        placeholder=\"Given\"\n        name={props.name + '-given'}\n        defaultValue={value?.given?.join(' ')}\n        onChange={(e) => setGiven(e.currentTarget.value)}\n      />\n      <TextInput\n        name={props.name + '-family'}\n        placeholder=\"Family\"\n        defaultValue={value?.family}\n        onChange={(e) => setFamily(e.currentTarget.value)}\n      />\n      <TextInput\n        placeholder=\"Suffix\"\n        name={props.name + '-suffix'}\n        defaultValue={value?.suffix?.join(' ')}\n        onChange={(e) => setSuffix(e.currentTarget.value)}\n      />\n    </Group>\n  );\n}\n", "import { Group, TextInput } from '@mantine/core';\nimport { Identifier } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\n\nexport interface IdentifierInputProps {\n  name: string;\n  defaultValue?: Identifier;\n  onChange?: (value: Identifier) => void;\n}\n\nexport function IdentifierInput(props: IdentifierInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n\n  function setValueWrapper(newValue: Identifier): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <TextInput\n        placeholder=\"System\"\n        defaultValue={value?.system}\n        onChange={(e) => setValueWrapper({ ...value, system: e.currentTarget.value })}\n      />\n      <TextInput\n        placeholder=\"Value\"\n        defaultValue={value?.value}\n        onChange={(e) => setValueWrapper({ ...value, value: e.currentTarget.value })}\n      />\n    </Group>\n  );\n}\n", "import { NativeSelect, TextInput } from '@mantine/core';\nimport { Money } from '@medplum/fhirtypes';\nimport { IconCurrencyDollar } from '@tabler/icons-react';\nimport React, { useCallback, useState } from 'react';\n\n/*\n * Based on: https://github.com/mantinedev/ui.mantine.dev/blob/master/components/CurrencyInput/CurrencyInput.tsx\n */\n\n/**\n * List of currencies.\n *\n * Full list of currencies:\n * https://www.hl7.org/fhir/valueset-currencies.html\n *\n * Latest browsers can report list of supported currencies, but it's not widely supported:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/supportedValuesOf\n *\n * Using a short list for simplicity for now.\n */\nconst data = ['USD', 'EUR', 'CAD', 'GBP', 'AUD'];\n\nexport interface MoneyInputProps {\n  name: string;\n  label?: string;\n  placeholder?: string;\n  defaultValue?: Money;\n  onChange?: (value: Money) => void;\n}\n\nexport function MoneyInput(props: MoneyInputProps): JSX.Element {\n  const { onChange } = props;\n  const [value, setValue] = useState(props.defaultValue);\n\n  const setValueWrapper = useCallback(\n    (newValue: Money): void => {\n      setValue(newValue);\n      if (onChange) {\n        onChange(newValue);\n      }\n    },\n    [onChange]\n  );\n\n  const handleCurrencyChange = useCallback(\n    (e: React.ChangeEvent<HTMLSelectElement>) => {\n      setValueWrapper({\n        ...value,\n        currency: e.currentTarget.value,\n      });\n    },\n    [value, setValueWrapper]\n  );\n\n  const handleValueChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setValueWrapper({\n        ...value,\n        value: e.currentTarget.valueAsNumber,\n      });\n    },\n    [value, setValueWrapper]\n  );\n\n  const select = (\n    <NativeSelect\n      defaultValue={value?.currency}\n      data={data}\n      styles={{\n        input: {\n          fontWeight: 500,\n          borderTopLeftRadius: 0,\n          borderBottomLeftRadius: 0,\n          width: 92,\n        },\n      }}\n      onChange={handleCurrencyChange}\n    />\n  );\n\n  return (\n    <TextInput\n      type=\"number\"\n      label={props.label}\n      placeholder={props.placeholder ?? 'Value'}\n      defaultValue={value?.value?.toString() ?? 'USD'}\n      icon={<IconCurrencyDollar size={14} />}\n      rightSection={select}\n      rightSectionWidth={92}\n      onChange={handleValueChange}\n    />\n  );\n}\n", "import { Group } from '@mantine/core';\nimport { Period } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\n\nexport interface PeriodInputProps {\n  name: string;\n  defaultValue?: Period;\n  onChange?: (value: Period) => void;\n}\n\nexport function PeriodInput(props: PeriodInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n\n  function setValueWrapper(newValue: Period): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <DateTimeInput\n        name={props.name + '.start'}\n        placeholder=\"Start\"\n        defaultValue={value?.start}\n        onChange={(newValue) => setValueWrapper({ ...value, start: newValue })}\n      />\n      <DateTimeInput\n        name={props.name + '.end'}\n        placeholder=\"End\"\n        defaultValue={value?.end}\n        onChange={(newValue) => setValueWrapper({ ...value, end: newValue })}\n      />\n    </Group>\n  );\n}\n", "import { Group, NativeSelect, TextInput } from '@mantine/core';\nimport { Quantity } from '@medplum/fhirtypes';\nimport React, { useState, WheelEvent } from 'react';\n\nexport interface QuantityInputProps {\n  name: string;\n  defaultValue?: Quantity;\n  autoFocus?: boolean;\n  required?: boolean;\n  onChange?: (value: Quantity) => void;\n  disableWheel?: boolean;\n}\n\nexport function QuantityInput(props: QuantityInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n\n  function setValueWrapper(newValue: Quantity): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <NativeSelect\n        style={{ width: 80 }}\n        data-testid={props.name + '-comparator'}\n        defaultValue={value?.comparator}\n        data={['', '<', '<=', '>=', '>']}\n        onChange={(e) =>\n          setValueWrapper({\n            ...value,\n            comparator: e.currentTarget.value as '<' | '<=' | '>=' | '>',\n          })\n        }\n      />\n      <TextInput\n        id={props.name}\n        name={props.name}\n        required={props.required}\n        data-autofocus={props.autoFocus}\n        data-testid={props.name + '-value'}\n        type=\"number\"\n        placeholder=\"Value\"\n        defaultValue={value?.value}\n        autoFocus={props.autoFocus}\n        step=\"any\"\n        onWheel={(e: WheelEvent<HTMLInputElement>) => {\n          if (props.disableWheel) {\n            e.currentTarget.blur();\n          }\n        }}\n        onChange={(e) => {\n          setValueWrapper({\n            ...value,\n            value: tryParseNumber(e.currentTarget.value),\n          });\n        }}\n      />\n      <TextInput\n        placeholder=\"Unit\"\n        data-testid={props.name + '-unit'}\n        defaultValue={value?.unit}\n        onChange={(e) =>\n          setValueWrapper({\n            ...value,\n            unit: e.currentTarget.value,\n          })\n        }\n      />\n    </Group>\n  );\n}\n\nfunction tryParseNumber(str: string): number | undefined {\n  if (!str) {\n    return undefined;\n  }\n  return parseFloat(str);\n}\n", "import { Group } from '@mantine/core';\nimport { Range } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { QuantityInput } from '../QuantityInput/QuantityInput';\n\nexport interface RangeInputProps {\n  name: string;\n  defaultValue?: Range;\n  onChange?: (value: Range) => void;\n}\n\n/**\n * Renders a Range input.\n * See: https://www.hl7.org/fhir/datatypes.html#Range\n * @param props - Range input properties.\n * @returns Range input element.\n */\nexport function RangeInput(props: RangeInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n\n  function setValueWrapper(newValue: Range): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <QuantityInput\n        name={props.name + '-low'}\n        defaultValue={value?.low}\n        onChange={(v) =>\n          setValueWrapper({\n            ...value,\n            low: v,\n          })\n        }\n      />\n\n      <QuantityInput\n        name={props.name + '-high'}\n        defaultValue={value?.high}\n        onChange={(v) =>\n          setValueWrapper({\n            ...value,\n            high: v,\n          })\n        }\n      />\n    </Group>\n  );\n}\n", "import { Group } from '@mantine/core';\nimport { Ratio } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { QuantityInput } from '../QuantityInput/QuantityInput';\n\nexport interface RatioInputProps {\n  name: string;\n  defaultValue?: Ratio;\n  onChange?: (value: Ratio) => void;\n}\n\n/**\n * Renders a Ratio input.\n * See: https://www.hl7.org/fhir/datatypes.html#Ratio\n * @param props - Ratio input properties.\n * @returns Ratio input element.\n */\nexport function RatioInput(props: RatioInputProps): JSX.Element {\n  const [value, setValue] = useState(props.defaultValue);\n\n  function setValueWrapper(newValue: Ratio): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      <QuantityInput\n        name={props.name + '-numerator'}\n        defaultValue={value?.numerator}\n        onChange={(v) =>\n          setValueWrapper({\n            ...value,\n            numerator: v,\n          })\n        }\n      />\n      <QuantityInput\n        name={props.name + '-denominator'}\n        defaultValue={value?.denominator}\n        onChange={(v) =>\n          setValueWrapper({\n            ...value,\n            denominator: v,\n          })\n        }\n      />\n    </Group>\n  );\n}\n", "import { Group, NativeSelect } from '@mantine/core';\nimport { createReference } from '@medplum/core';\nimport { Reference, Resource, ResourceType } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { ResourceInput } from '../ResourceInput/ResourceInput';\nimport { ResourceTypeInput } from '../ResourceTypeInput/ResourceTypeInput';\n\nexport interface ReferenceInputProps {\n  name: string;\n  placeholder?: string;\n  defaultValue?: Reference;\n  targetTypes?: string[];\n  autoFocus?: boolean;\n  required?: boolean;\n  onChange?: (value: Reference | undefined) => void;\n}\n\nexport function ReferenceInput(props: ReferenceInputProps): JSX.Element {\n  const targetTypes = getTargetTypes(props.targetTypes);\n  const initialResourceType = getInitialResourceType(props.defaultValue, targetTypes);\n  const [value, setValue] = useState<Reference | undefined>(props.defaultValue);\n  const [resourceType, setResourceType] = useState<ResourceType | undefined>(initialResourceType);\n\n  function setValueHelper(newValue: Reference | undefined): void {\n    setValue(newValue);\n    if (props.onChange) {\n      props.onChange(newValue);\n    }\n  }\n\n  return (\n    <Group spacing=\"xs\" grow noWrap>\n      {targetTypes && targetTypes.length > 1 && (\n        <NativeSelect\n          data-autofocus={props.autoFocus}\n          data-testid=\"reference-input-resource-type-select\"\n          defaultValue={resourceType}\n          autoFocus={props.autoFocus}\n          onChange={(e) => setResourceType(e.currentTarget.value as ResourceType)}\n          data={targetTypes}\n        />\n      )}\n      {!targetTypes && (\n        <ResourceTypeInput\n          autoFocus={props.autoFocus}\n          testId=\"reference-input-resource-type-input\"\n          defaultValue={resourceType}\n          onChange={setResourceType}\n          name={props.name + '-resourceType'}\n          placeholder=\"Resource Type\"\n        />\n      )}\n      <ResourceInput\n        resourceType={resourceType as ResourceType}\n        name={props.name + '-id'}\n        required={props.required}\n        placeholder={props.placeholder}\n        defaultValue={value}\n        onChange={(item: Resource | undefined) => {\n          setValueHelper(item ? createReference(item) : undefined);\n        }}\n      />\n    </Group>\n  );\n}\n\nfunction getTargetTypes(targetTypes: string[] | undefined): string[] | undefined {\n  if (!targetTypes || targetTypes.length === 0 || (targetTypes.length === 1 && targetTypes[0] === 'Resource')) {\n    return undefined;\n  }\n  return targetTypes;\n}\n\nfunction getInitialResourceType(\n  defaultValue: Reference | undefined,\n  targetTypes: string[] | undefined\n): ResourceType | undefined {\n  const defaultValueResourceType = defaultValue?.reference?.split('/')[0];\n  if (defaultValueResourceType) {\n    return defaultValueResourceType as ResourceType;\n  }\n\n  if (targetTypes && targetTypes.length > 0) {\n    return targetTypes[0] as ResourceType;\n  }\n\n  return undefined;\n}\n", "import { Group, Text } from '@mantine/core';\nimport { getDisplayString, getReferenceString } from '@medplum/core';\nimport { OperationOutcome, Patient, Reference, Resource } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport React, { forwardRef, useCallback, useState } from 'react';\nimport { AsyncAutocomplete, AsyncAutocompleteOption } from '../AsyncAutocomplete/AsyncAutocomplete';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\n\n/**\n * Search parameter overrides for specific resource types.\n * Use this to specify the search parameter to use for a given resource type.\n * Otherwise it will fallback to \"name\" if the resource type is in NAME_RESOURCE_TYPES.\n * Otherwise it will fallback to \"_id\".\n */\nconst SEARCH_CODES: Record<string, string> = {\n  Observation: 'code',\n  User: 'email:contains',\n};\n\n/**\n * Resource types that should use the \"name\" search parameter.\n * This is the full list of resource types that have a \"name\" search parameter.\n * Otherwise it will fallback to \"_id\".\n */\nconst NAME_RESOURCE_TYPES = [\n  'AccessPolicy',\n  'Account',\n  'ActivityDefinition',\n  'Bot',\n  'CapabilityStatement',\n  'ClientApplication',\n  'CodeSystem',\n  'CompartmentDefinition',\n  'ConceptMap',\n  'EffectEvidenceSynthesis',\n  'Endpoint',\n  'EventDefinition',\n  'Evidence',\n  'EvidenceVariable',\n  'ExampleScenario',\n  'GraphDefinition',\n  'HealthcareService',\n  'ImplementationGuide',\n  'InsurancePlan',\n  'Library',\n  'Location',\n  'Measure',\n  'MedicinalProduct',\n  'MessageDefinition',\n  'NamingSystem',\n  'OperationDefinition',\n  'Organization',\n  'Patient',\n  'Person',\n  'PlanDefinition',\n  'Practitioner',\n  'Project',\n  'Questionnaire',\n  'RelatedPerson',\n  'ResearchDefinition',\n  'ResearchElementDefinition',\n  'RiskEvidenceSynthesis',\n  'SearchParameter',\n  'StructureDefinition',\n  'StructureMap',\n  'TerminologyCapabilities',\n  'TestScript',\n  'UserConfiguration',\n  'ValueSet',\n];\n\nexport interface ResourceInputProps<T extends Resource = Resource> {\n  readonly resourceType: T['resourceType'];\n  readonly name: string;\n  readonly defaultValue?: T | Reference<T>;\n  readonly placeholder?: string;\n  readonly loadOnFocus?: boolean;\n  readonly required?: boolean;\n  readonly onChange?: (value: T | undefined) => void;\n}\n\nfunction toOption<T extends Resource>(resource: T): AsyncAutocompleteOption<T> {\n  return {\n    value: getReferenceString(resource),\n    label: getDisplayString(resource),\n    resource,\n  };\n}\n\nexport function ResourceInput<T extends Resource = Resource>(props: ResourceInputProps<T>): JSX.Element | null {\n  const medplum = useMedplum();\n  const resourceType = props.resourceType;\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n  const defaultValue = useResource(props.defaultValue, setOutcome);\n  const onChange = props.onChange;\n\n  const loadValues = useCallback(\n    async (input: string, signal: AbortSignal): Promise<T[]> => {\n      const searchCode = getSearchParamForResourceType(resourceType);\n      const searchParams = new URLSearchParams({\n        [searchCode]: input,\n        _count: '10',\n      });\n\n      const resources = await medplum.searchResources(resourceType, searchParams, { signal });\n      return resources as unknown as T[];\n    },\n    [medplum, resourceType]\n  );\n\n  const handleChange = useCallback(\n    (newResources: T[]) => {\n      if (onChange) {\n        onChange(newResources[0]);\n      }\n    },\n    [onChange]\n  );\n\n  if (props.defaultValue && !outcome && !defaultValue) {\n    // If a default value was specified, but the default resource is not loaded yet,\n    // then return null to avoid rendering the input until the default resource is loaded.\n    // The Mantine <MultiSelect> component does not reliably handle changes to defaultValue.\n    return null;\n  }\n\n  return (\n    <AsyncAutocomplete<T>\n      name={props.name}\n      required={props.required}\n      itemComponent={ItemComponent}\n      defaultValue={defaultValue}\n      placeholder={props.placeholder}\n      maxSelectedValues={1}\n      toKey={getReferenceString}\n      toOption={toOption}\n      loadOptions={loadValues}\n      onChange={handleChange}\n      clearable\n    />\n  );\n}\n\nconst ItemComponent = forwardRef<HTMLDivElement, any>(({ label, resource, ...others }: any, ref) => {\n  return (\n    <div ref={ref} {...others}>\n      <Group noWrap>\n        <ResourceAvatar value={resource} />\n        <div>\n          <Text>{label}</Text>\n          <Text size=\"xs\" color=\"dimmed\">\n            {(resource as Patient).birthDate}\n          </Text>\n        </div>\n      </Group>\n    </div>\n  );\n});\n\n/**\n * Returns the search parameter to use for the given resource type.\n * If the resource type is in SEARCH_CODES, then that value is used.\n * Otherwise, if the resource type is in NAME_RESOURCE_TYPES, then \"name\" is used.\n * Otherwise, \"_id\" is used.\n * @param resourceType - The FHIR resource type.\n * @returns The search parameter to use for the autocomplete input.\n */\nfunction getSearchParamForResourceType(resourceType: string): string {\n  return SEARCH_CODES[resourceType] ?? (NAME_RESOURCE_TYPES.includes(resourceType) ? 'name' : '_id');\n}\n", "import { ActionIcon } from '@mantine/core';\nimport { InternalSchemaElement } from '@medplum/core';\nimport { IconCircleMinus, IconCirclePlus } from '@tabler/icons-react';\nimport React, { useRef, useState } from 'react';\nimport { ResourcePropertyInput } from '../ResourcePropertyInput/ResourcePropertyInput';\nimport { killEvent } from '../utils/dom';\n\nexport interface ResourceArrayInputProps {\n  property: InternalSchemaElement;\n  name: string;\n  defaultValue?: any[];\n  arrayElement?: boolean;\n  onChange?: (value: any[]) => void;\n}\n\nexport function ResourceArrayInput(props: ResourceArrayInputProps): JSX.Element {\n  const [values, setValues] = useState(\n    props.defaultValue && Array.isArray(props.defaultValue) ? props.defaultValue : []\n  );\n\n  const valuesRef = useRef<any[]>();\n  valuesRef.current = values;\n\n  function setValuesWrapper(newValues: any[]): void {\n    setValues(newValues);\n    if (props.onChange) {\n      props.onChange(newValues);\n    }\n  }\n\n  return (\n    <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n      <colgroup>\n        <col width=\"97%\" />\n        <col width=\"3%\" />\n      </colgroup>\n      <tbody>\n        {values.map((v, index) => (\n          <tr key={`${index}-${values.length}`}>\n            <td>\n              <ResourcePropertyInput\n                arrayElement={true}\n                property={props.property}\n                name={props.name + '.' + index}\n                defaultValue={v}\n                onChange={(newValue: any) => {\n                  const copy = [...(valuesRef.current as any[])];\n                  copy[index] = newValue;\n                  setValuesWrapper(copy);\n                }}\n              />\n            </td>\n            <td style={{ textAlign: 'right' }}>\n              <ActionIcon\n                title=\"Remove\"\n                size=\"sm\"\n                onClick={(e: React.MouseEvent) => {\n                  killEvent(e);\n                  const copy = [...(valuesRef.current as any[])];\n                  copy.splice(index, 1);\n                  setValuesWrapper(copy);\n                }}\n              >\n                <IconCircleMinus />\n              </ActionIcon>\n            </td>\n          </tr>\n        ))}\n        <tr>\n          <td></td>\n          <td style={{ textAlign: 'right' }}>\n            <ActionIcon\n              title=\"Add\"\n              size=\"sm\"\n              color=\"green\"\n              onClick={(e: React.MouseEvent) => {\n                killEvent(e);\n                const copy = [...(valuesRef.current as any[])];\n                copy.push(undefined);\n                setValuesWrapper(copy);\n              }}\n            >\n              <IconCirclePlus />\n            </ActionIcon>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n", "import { Button, Chip, Group, Modal, NativeSelect, Stack, Switch, TextInput } from '@mantine/core';\nimport { formatTiming } from '@medplum/core';\nimport { Timing, TimingRepeat } from '@medplum/fhirtypes';\nimport React, { useRef, useState } from 'react';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { FormSection } from '../FormSection/FormSection';\n\nconst daysOfWeek = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];\n\ntype DayOfWeek = 'sun' | 'mon' | 'tue' | 'wed' | 'thu' | 'fri' | 'sat';\n\ntype PeriodUnit = 'a' | 's' | 'min' | 'h' | 'd' | 'wk' | 'mo';\n\nexport interface TimingInputProps {\n  name: string;\n  defaultValue?: Timing;\n  onChange?: (newValue: Timing) => void;\n}\n\nexport function TimingInput(props: TimingInputProps): JSX.Element {\n  const [value, setValue] = useState<Timing | undefined>(props.defaultValue);\n  const [open, setOpen] = useState(false);\n\n  const valueRef = useRef<Timing>();\n  valueRef.current = value;\n\n  return (\n    <>\n      <Group spacing=\"xs\" grow noWrap>\n        <span>{formatTiming(valueRef.current) || 'No repeat'}</span>\n        <Button onClick={() => setOpen(true)}>Edit</Button>\n      </Group>\n      <TimingEditorDialog\n        visible={open}\n        defaultValue={valueRef.current}\n        onOk={(newValue) => {\n          if (props.onChange) {\n            props.onChange(newValue);\n          }\n          setValue(newValue);\n          setOpen(false);\n        }}\n        onCancel={() => setOpen(false)}\n      />\n    </>\n  );\n}\n\ninterface TimingEditorDialogProps {\n  visible: boolean;\n  defaultValue?: Timing;\n  onOk: (newValue: Timing) => void;\n  onCancel: () => void;\n}\n\nconst defaultValue: Timing = {\n  repeat: {\n    period: 1,\n    periodUnit: 'd',\n  },\n};\n\nfunction TimingEditorDialog(props: TimingEditorDialogProps): JSX.Element {\n  const [value, setValue] = useState<Timing>(props.defaultValue || defaultValue);\n\n  const valueRef = useRef<Timing>();\n  valueRef.current = value;\n\n  function setStart(newStart: string): void {\n    setValue({ ...valueRef.current, event: [newStart] });\n  }\n\n  function setRepeat(repeat: TimingRepeat | undefined): void {\n    setValue({ ...valueRef.current, repeat });\n  }\n\n  function setPeriod(newPeriod: number | undefined): void {\n    setRepeat({ ...valueRef.current?.repeat, period: newPeriod });\n  }\n\n  function setPeriodUnit(newPeriodUnit: PeriodUnit | undefined): void {\n    setRepeat({ ...valueRef.current?.repeat, periodUnit: newPeriodUnit });\n  }\n\n  function setDaysOfWeek(newDaysOfWeek: DayOfWeek[] | undefined): void {\n    setRepeat({ ...valueRef.current?.repeat, dayOfWeek: newDaysOfWeek });\n  }\n\n  return (\n    <Modal\n      title=\"Timing\"\n      closeButtonProps={{ 'aria-label': 'Close' }}\n      opened={props.visible}\n      onClose={() => props.onCancel()}\n    >\n      <Stack>\n        <FormSection title=\"Starts on\" htmlFor={'timing-dialog-start'}>\n          <DateTimeInput name={'timing-dialog-start'} onChange={(newValue) => setStart(newValue)} />\n        </FormSection>\n        <Switch\n          label=\"Repeat\"\n          checked={!!value.repeat}\n          onChange={(e) => setRepeat(e.currentTarget.checked ? defaultValue.repeat : undefined)}\n        />\n        {value.repeat && (\n          <>\n            <FormSection title=\"Repeat every\" htmlFor={'timing-dialog-period'}>\n              <Group spacing=\"xs\" grow noWrap>\n                <TextInput\n                  type=\"number\"\n                  step={1}\n                  id=\"timing-dialog-period\"\n                  name=\"timing-dialog-period\"\n                  defaultValue={value.repeat.period || 1}\n                  onChange={(e) => setPeriod(parseInt(e.currentTarget.value, 10) || 1)}\n                />\n                <NativeSelect\n                  id=\"timing-dialog-periodUnit\"\n                  name=\"timing-dialog-periodUnit\"\n                  defaultValue={value.repeat.periodUnit}\n                  onChange={(e) => setPeriodUnit(e.currentTarget.value as PeriodUnit | undefined)}\n                  data={[\n                    { label: 'second', value: 's' },\n                    { label: 'minute', value: 'min' },\n                    { label: 'hour', value: 'h' },\n                    { label: 'day', value: 'd' },\n                    { label: 'week', value: 'wk' },\n                    { label: 'month', value: 'mo' },\n                    { label: 'year', value: 'a' },\n                  ]}\n                />\n              </Group>\n            </FormSection>\n            {value.repeat.periodUnit === 'wk' && (\n              <FormSection title=\"Repeat on\">\n                <Chip.Group multiple onChange={setDaysOfWeek as (v: string[] | undefined) => void}>\n                  <Group position=\"apart\" mt=\"md\" spacing=\"xs\">\n                    {daysOfWeek.map((day) => (\n                      <Chip key={day} value={day} size=\"xs\" radius=\"xl\">\n                        {day.charAt(0).toUpperCase()}\n                      </Chip>\n                    ))}\n                  </Group>\n                </Chip.Group>\n              </FormSection>\n            )}\n          </>\n        )}\n        <Group position=\"right\">\n          <Button onClick={() => props.onOk(value)}>OK</Button>\n        </Group>\n      </Stack>\n    </Modal>\n  );\n}\n", "import { Button, createStyles, Group } from '@mantine/core';\nimport { Slot } from '@medplum/fhirtypes';\nimport React, { useMemo, useState } from 'react';\nimport { getMonthString, getStartMonth } from './CalendarInput.utils';\n\nconst useStyles = createStyles((theme) => ({\n  table: {\n    width: 350,\n\n    '& th': {\n      fontWeight: 'normal',\n      fontSize: 11,\n      padding: 8,\n      textAlign: 'center',\n    },\n\n    '& td': {\n      padding: '2px 4px',\n    },\n\n    '& td button': {\n      width: 44,\n      height: 44,\n      color: theme.colors[theme.primaryColor][5],\n      fontSize: 16,\n      fontWeight: 500,\n      textAlign: 'center',\n      padding: 0,\n      backgroundColor: theme.colors[theme.primaryColor][0],\n      border: 0,\n      borderRadius: '50%',\n      cursor: 'pointer',\n    },\n\n    '& td button:hover': {\n      backgroundColor: theme.colors[theme.primaryColor][1],\n    },\n\n    '& td button:disabled': {\n      backgroundColor: 'transparent',\n      cursor: 'default',\n      color: theme.colors.gray[4],\n      fontWeight: 'normal',\n    },\n  },\n}));\n\nexport interface CalendarInputProps {\n  slots: Slot[];\n  onChangeMonth: (date: Date) => void;\n  onClick: (date: Date) => void;\n}\n\ninterface CalendarCell {\n  date: Date;\n  available: boolean;\n}\n\ntype OptionalCalendarCell = CalendarCell | undefined;\n\nexport function CalendarInput(props: CalendarInputProps): JSX.Element {\n  const { classes } = useStyles();\n  const { onChangeMonth, onClick } = props;\n  const [month, setMonth] = useState<Date>(getStartMonth);\n\n  function moveMonth(delta: number): void {\n    setMonth((currMonth) => {\n      const newMonth = new Date(currMonth.getTime());\n      newMonth.setMonth(currMonth.getMonth() + delta);\n      onChangeMonth(newMonth);\n      return newMonth;\n    });\n  }\n\n  const grid = useMemo(() => buildGrid(month, props.slots), [month, props.slots]);\n\n  return (\n    <div>\n      <Group position=\"apart\" spacing=\"xs\" grow noWrap>\n        <p style={{ flex: 1 }}>{getMonthString(month)}</p>\n        <Group position=\"right\" spacing=\"xs\">\n          <Button variant=\"outline\" aria-label=\"Previous month\" onClick={() => moveMonth(-1)}>\n            &lt;\n          </Button>\n          <Button variant=\"outline\" aria-label=\"Next month\" onClick={() => moveMonth(1)}>\n            &gt;\n          </Button>\n        </Group>\n      </Group>\n      <table className={classes.table}>\n        <thead>\n          <tr>\n            <th>SUN</th>\n            <th>MON</th>\n            <th>TUE</th>\n            <th>WED</th>\n            <th>THU</th>\n            <th>FRI</th>\n            <th>SAT</th>\n          </tr>\n        </thead>\n        <tbody>\n          {grid.map((week, weekIndex) => (\n            <tr key={'week-' + weekIndex}>\n              {week.map((day, dayIndex) => (\n                <td key={'day-' + dayIndex}>\n                  {day && (\n                    <Button disabled={!day.available} onClick={() => onClick(day.date)}>\n                      {day.date.getDate()}\n                    </Button>\n                  )}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction buildGrid(startDate: Date, slots: Slot[]): OptionalCalendarCell[][] {\n  const d = new Date(startDate.getFullYear(), startDate.getMonth());\n  const grid: OptionalCalendarCell[][] = [];\n  let row: OptionalCalendarCell[] = [];\n\n  // Fill leading empty days\n  for (let i = 0; i < d.getDay(); i++) {\n    row.push(undefined);\n  }\n\n  while (d.getMonth() === startDate.getMonth()) {\n    row.push({\n      date: new Date(d.getTime()),\n      available: isDayAvailable(d, slots),\n    });\n\n    if (d.getDay() === 6) {\n      grid.push(row);\n      row = [];\n    }\n\n    d.setDate(d.getDate() + 1);\n  }\n\n  // Fill trailing empty days\n  if (d.getDay() !== 0) {\n    for (let i = d.getDay(); i < 7; i++) {\n      row.push(undefined);\n    }\n    grid.push(row);\n  }\n\n  return grid;\n}\n\n/**\n * Returns true if the given date is available for booking.\n * @param day - The day to check.\n * @param slots - The list of available slots.\n * @returns True if there are any available slots for the day.\n */\nfunction isDayAvailable(day: Date, slots: Slot[]): boolean {\n  // Note that slot start and end time may or may not be in UTC.\n  for (const slot of slots) {\n    const slotStart = new Date(slot.start as string);\n    if (\n      slotStart.getFullYear() === day.getFullYear() &&\n      slotStart.getMonth() === day.getMonth() &&\n      slotStart.getDate() === day.getDate()\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n", "/**\n * Returns a month display string (e.g. \"January 2020\").\n * @param date - Any date within the month.\n * @returns The month display string (e.g. \"January 2020\")\n */\nexport function getMonthString(date: Date): string {\n  return date.toLocaleString('default', { month: 'long' }) + ' ' + date.getFullYear();\n}\n\nexport function getStartMonth(): Date {\n  const result = new Date();\n  result.setDate(1);\n  result.setHours(0, 0, 0, 0);\n  return result;\n}\n", "import { Container as MantineContainer, ContainerProps, createStyles } from '@mantine/core';\nimport React from 'react';\n\nconst useStyles = createStyles(() => ({\n  root: {\n    '@media (max-width: 800px)': {\n      paddingLeft: 4,\n      paddingRight: 4,\n    },\n  },\n}));\n\nexport function Container(props: ContainerProps): JSX.Element {\n  const { children, ...others } = props;\n  const { classes } = useStyles();\n\n  return (\n    <MantineContainer className={classes.root} {...others}>\n      {children}\n    </MantineContainer>\n  );\n}\n", "import { MedplumClient } from '@medplum/core';\nimport { Reference, Resource, ResourceType } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { ResourceTimeline } from '../ResourceTimeline/ResourceTimeline';\n\nexport interface DefaultResourceTimelineProps {\n  resource: Resource | Reference;\n}\n\nexport function DefaultResourceTimeline(props: DefaultResourceTimelineProps): JSX.Element {\n  return (\n    <ResourceTimeline\n      value={props.resource}\n      loadTimelineResources={async (medplum: MedplumClient, resourceType: ResourceType, id: string) => {\n        const ref = `${resourceType}/${id}`;\n        const _count = 100;\n        return Promise.allSettled([\n          medplum.readHistory(resourceType, id),\n          medplum.search('Task', { _filter: `based-on eq ${ref} or focus eq ${ref} or subject eq ${ref}`, _count }),\n        ]);\n      }}\n    />\n  );\n}\n", "import { ActionIcon, Center, createStyles, Group, Loader, Menu, ScrollArea, TextInput } from '@mantine/core';\nimport { showNotification, updateNotification } from '@mantine/notifications';\nimport { getReferenceString, MedplumClient, normalizeErrorString, ProfileResource } from '@medplum/core';\nimport {\n  Attachment,\n  AuditEvent,\n  Bundle,\n  BundleEntry,\n  Communication,\n  DiagnosticReport,\n  Media,\n  OperationOutcome,\n  Reference,\n  Resource,\n  ResourceType,\n} from '@medplum/fhirtypes';\nimport { useMedplum, useMedplumNavigate, useResource } from '@medplum/react-hooks';\nimport {\n  IconCheck,\n  IconCloudUpload,\n  IconEdit,\n  IconFileAlert,\n  IconListDetails,\n  IconMessage,\n  IconPin,\n  IconPinnedOff,\n  IconTrash,\n} from '@tabler/icons-react';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { AttachmentButton } from '../AttachmentButton/AttachmentButton';\nimport { AttachmentDisplay } from '../AttachmentDisplay/AttachmentDisplay';\nimport { DiagnosticReportDisplay } from '../DiagnosticReportDisplay/DiagnosticReportDisplay';\nimport { Form } from '../Form/Form';\nimport { Panel } from '../Panel/Panel';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { ResourceDiffTable } from '../ResourceDiffTable/ResourceDiffTable';\nimport { ResourceTable } from '../ResourceTable/ResourceTable';\nimport { Timeline, TimelineItem } from '../Timeline/Timeline';\nimport { sortByDateAndPriority } from '../utils/date';\n\nconst useStyles = createStyles((theme) => ({\n  pinnedComment: {\n    backgroundColor: theme.colors.blue[0],\n  },\n}));\n\nexport interface ResourceTimelineProps<T extends Resource> {\n  value: T | Reference<T>;\n  loadTimelineResources: (\n    medplum: MedplumClient,\n    resourceType: ResourceType,\n    id: string\n  ) => Promise<PromiseSettledResult<Bundle>[]>;\n  createCommunication?: (resource: T, sender: ProfileResource, text: string) => Communication;\n  createMedia?: (resource: T, operator: ProfileResource, attachment: Attachment) => Media;\n}\n\nexport function ResourceTimeline<T extends Resource>(props: ResourceTimelineProps<T>): JSX.Element {\n  const medplum = useMedplum();\n  const navigate = useMedplumNavigate();\n  const sender = medplum.getProfile() as ProfileResource;\n  const inputRef = useRef<HTMLInputElement>(null);\n  const resource = useResource(props.value);\n  const [history, setHistory] = useState<Bundle>();\n  const [items, setItems] = useState<Resource[]>([]);\n  const loadTimelineResources = props.loadTimelineResources;\n\n  const itemsRef = useRef<Resource[]>(items);\n  itemsRef.current = items;\n\n  /**\n   * Sorts and sets the items.\n   *\n   * Sorting is primarily a function of meta.lastUpdated, but there are special cases.\n   * When displaying connected resources, for example a Communication in the context of an Encounter,\n   * the Communication.sent time is used rather than Communication.meta.lastUpdated.\n   *\n   * Other examples of special cases:\n   * - DiagnosticReport.issued\n   * - Media.issued\n   * - Observation.issued\n   * - DocumentReference.date\n   *\n   * See \"sortByDateAndPriority()\" for more details.\n   */\n  const sortAndSetItems = useCallback(\n    (newItmes: Resource[]): void => {\n      sortByDateAndPriority(newItmes, resource);\n      newItmes.reverse();\n      setItems(newItmes);\n    },\n    [resource]\n  );\n\n  /**\n   * Handles a batch request response.\n   * @param batchResponse - The batch response.\n   */\n  const handleBatchResponse = useCallback(\n    (batchResponse: PromiseSettledResult<Bundle>[]): void => {\n      const newItems = [];\n\n      for (const settledResult of batchResponse) {\n        if (settledResult.status !== 'fulfilled') {\n          // User may not have access to all resource types\n          continue;\n        }\n\n        const bundle = settledResult.value;\n        if (bundle.type === 'history') {\n          setHistory(bundle);\n        }\n\n        if (bundle.entry) {\n          for (const entry of bundle.entry) {\n            newItems.push(entry.resource as Resource);\n          }\n        }\n      }\n\n      sortAndSetItems(newItems);\n    },\n    [sortAndSetItems]\n  );\n\n  /**\n   * Adds an array of resources to the timeline.\n   * @param resource - Resource to add.\n   */\n  const addResource = useCallback(\n    (resource: Resource): void => sortAndSetItems([...itemsRef.current, resource]),\n    [sortAndSetItems]\n  );\n\n  /**\n   * Loads the timeline.\n   */\n  const loadTimeline = useCallback(() => {\n    let resourceType: ResourceType;\n    let id: string;\n    if ('resourceType' in props.value) {\n      resourceType = props.value.resourceType;\n      id = props.value.id as string;\n    } else {\n      [resourceType, id] = props.value.reference?.split('/') as [ResourceType, string];\n    }\n    loadTimelineResources(medplum, resourceType, id).then(handleBatchResponse).catch(console.log);\n  }, [medplum, props.value, loadTimelineResources, handleBatchResponse]);\n\n  useEffect(() => loadTimeline(), [loadTimeline]);\n\n  /**\n   * Adds a Communication resource to the timeline.\n   * @param contentString - The comment content.\n   */\n  function createComment(contentString: string): void {\n    if (!resource || !props.createCommunication) {\n      // Encounter not loaded yet\n      return;\n    }\n    medplum\n      .createResource(props.createCommunication(resource, sender, contentString))\n      .then((result) => addResource(result))\n      .catch(console.log);\n  }\n\n  /**\n   * Adds a Media resource to the timeline.\n   * @param attachment - The media attachment.\n   */\n  function createMedia(attachment: Attachment): void {\n    if (!resource || !props.createMedia) {\n      // Encounter not loaded yet\n      return;\n    }\n    medplum\n      .createResource(props.createMedia(resource, sender, attachment))\n      .then((result) => addResource(result))\n      .then(() =>\n        updateNotification({\n          id: 'upload-notification',\n          color: 'teal',\n          title: 'Upload complete',\n          message: '',\n          icon: <IconCheck size={16} />,\n          autoClose: 2000,\n        })\n      )\n      .catch((reason) =>\n        updateNotification({\n          id: 'upload-notification',\n          color: 'red',\n          title: 'Upload error',\n          message: normalizeErrorString(reason),\n          icon: <IconFileAlert size={16} />,\n          autoClose: 2000,\n        })\n      );\n  }\n\n  function setPriority(\n    communication: Communication,\n    priority: 'routine' | 'urgent' | 'asap' | 'stat'\n  ): Promise<Communication> {\n    return medplum.updateResource({ ...communication, priority });\n  }\n\n  function onPin(communication: Communication): void {\n    setPriority(communication, 'stat').then(loadTimeline).catch(console.log);\n  }\n\n  function onUnpin(communication: Communication): void {\n    setPriority(communication, 'routine').then(loadTimeline).catch(console.log);\n  }\n\n  function onDetails(timelineItem: Resource): void {\n    navigate(`/${timelineItem.resourceType}/${timelineItem.id}`);\n  }\n\n  function onEdit(timelineItem: Resource): void {\n    navigate(`/${timelineItem.resourceType}/${timelineItem.id}/edit`);\n  }\n\n  function onDelete(timelineItem: Resource): void {\n    navigate(`/${timelineItem.resourceType}/${timelineItem.id}/delete`);\n  }\n\n  function onVersionDetails(version: Resource): void {\n    navigate(`/${version.resourceType}/${version.id}/_history/${version.meta?.versionId}`);\n  }\n\n  function onUploadStart(): void {\n    showNotification({\n      id: 'upload-notification',\n      loading: true,\n      title: 'Initializing upload...',\n      message: 'Please wait...',\n      autoClose: false,\n      withCloseButton: false,\n    });\n  }\n\n  function onUploadProgress(e: ProgressEvent): void {\n    updateNotification({\n      id: 'upload-notification',\n      loading: true,\n      title: 'Uploading...',\n      message: getProgressMessage(e),\n      autoClose: false,\n      withCloseButton: false,\n    });\n  }\n\n  function onUploadError(outcome: OperationOutcome): void {\n    updateNotification({\n      id: 'upload-notification',\n      color: 'red',\n      title: 'Upload error',\n      message: normalizeErrorString(outcome),\n      icon: <IconFileAlert size={16} />,\n      autoClose: 2000,\n    });\n  }\n\n  if (!resource) {\n    return (\n      <Center style={{ width: '100%', height: '100%' }}>\n        <Loader />\n      </Center>\n    );\n  }\n\n  return (\n    <Timeline>\n      {props.createCommunication && (\n        <Panel>\n          <Form\n            testid=\"timeline-form\"\n            onSubmit={(formData: Record<string, string>) => {\n              createComment(formData.text);\n\n              const input = inputRef.current;\n              if (input) {\n                input.value = '';\n                input.focus();\n              }\n            }}\n          >\n            <Group spacing=\"xs\" noWrap style={{ width: '100%' }}>\n              <ResourceAvatar value={sender} />\n              <TextInput\n                name=\"text\"\n                ref={inputRef}\n                placeholder=\"Add comment\"\n                style={{ width: '100%', maxWidth: 300 }}\n              />\n              <ActionIcon type=\"submit\" radius=\"xl\" color=\"blue\" variant=\"filled\">\n                <IconMessage size={16} />\n              </ActionIcon>\n              <AttachmentButton\n                onUpload={createMedia}\n                onUploadStart={onUploadStart}\n                onUploadProgress={onUploadProgress}\n                onUploadError={onUploadError}\n              >\n                {(props) => (\n                  <ActionIcon {...props} radius=\"xl\" color=\"blue\" variant=\"filled\">\n                    <IconCloudUpload size={16} />\n                  </ActionIcon>\n                )}\n              </AttachmentButton>\n            </Group>\n          </Form>\n        </Panel>\n      )}\n      {items.map((item) => {\n        if (!item) {\n          // TODO: Handle null history items for deleted versions.\n          return null;\n        }\n        const key = `${item.resourceType}/${item.id}/${item.meta?.versionId}`;\n        if (item.resourceType === resource.resourceType && item.id === resource.id) {\n          return (\n            <HistoryTimelineItem key={key} history={history as Bundle} resource={item} onDetails={onVersionDetails} />\n          );\n        }\n        switch (item.resourceType) {\n          case 'AuditEvent':\n            return <AuditEventTimelineItem key={key} resource={item} onDetails={onDetails} />;\n          case 'Communication':\n            return (\n              <CommunicationTimelineItem\n                key={key}\n                resource={item}\n                onPin={item.priority !== 'stat' ? onPin : undefined}\n                onUnpin={item.priority === 'stat' ? onUnpin : undefined}\n                onDetails={onDetails}\n                onEdit={onEdit}\n                onDelete={onDelete}\n              />\n            );\n          case 'DiagnosticReport':\n            return (\n              <DiagnosticReportTimelineItem\n                key={key}\n                resource={item}\n                onDetails={onDetails}\n                onEdit={onEdit}\n                onDelete={onDelete}\n              />\n            );\n          case 'Media':\n            return (\n              <MediaTimelineItem key={key} resource={item} onDetails={onDetails} onEdit={onEdit} onDelete={onDelete} />\n            );\n          default:\n            return (\n              <TimelineItem key={key} resource={item} padding={true}>\n                <ResourceTable value={item} ignoreMissingValues={true} />\n              </TimelineItem>\n            );\n        }\n      })}\n    </Timeline>\n  );\n}\n\ninterface BaseTimelineItemProps<T extends Resource> {\n  resource: T;\n  onPin?: (resource: T) => void;\n  onUnpin?: (resource: T) => void;\n  onDetails?: (resource: T) => void;\n  onEdit?: (resource: T) => void;\n  onDelete?: (resource: T) => void;\n}\n\nfunction TimelineItemPopupMenu<T extends Resource>(props: BaseTimelineItemProps<T>): JSX.Element {\n  return (\n    <Menu.Dropdown>\n      <Menu.Label>Resource</Menu.Label>\n      {props.onPin && (\n        <Menu.Item\n          icon={<IconPin size={14} />}\n          onClick={() => (props.onPin as (resource: T) => void)(props.resource)}\n          aria-label={`Pin ${getReferenceString(props.resource)}`}\n        >\n          Pin\n        </Menu.Item>\n      )}\n      {props.onUnpin && (\n        <Menu.Item\n          icon={<IconPinnedOff size={14} />}\n          onClick={() => (props.onUnpin as (resource: T) => void)(props.resource)}\n          aria-label={`Unpin ${getReferenceString(props.resource)}`}\n        >\n          Unpin\n        </Menu.Item>\n      )}\n      {props.onDetails && (\n        <Menu.Item\n          icon={<IconListDetails size={14} />}\n          onClick={() => (props.onDetails as (resource: T) => void)(props.resource)}\n          aria-label={`Details ${getReferenceString(props.resource)}`}\n        >\n          Details\n        </Menu.Item>\n      )}\n      {props.onEdit && (\n        <Menu.Item\n          icon={<IconEdit size={14} />}\n          onClick={() => (props.onEdit as (resource: T) => void)(props.resource)}\n          aria-label={`Edit ${getReferenceString(props.resource)}`}\n        >\n          Edit\n        </Menu.Item>\n      )}\n      {props.onDelete && (\n        <>\n          <Menu.Divider />\n          <Menu.Label>Danger zone</Menu.Label>\n          <Menu.Item\n            color=\"red\"\n            icon={<IconTrash size={14} />}\n            onClick={() => (props.onDelete as (resource: T) => void)(props.resource)}\n            aria-label={`Delete ${getReferenceString(props.resource)}`}\n          >\n            Delete\n          </Menu.Item>\n        </>\n      )}\n    </Menu.Dropdown>\n  );\n}\n\ninterface HistoryTimelineItemProps extends BaseTimelineItemProps<Resource> {\n  history: Bundle;\n}\n\nfunction HistoryTimelineItem(props: HistoryTimelineItemProps): JSX.Element {\n  const previous = getPrevious(props.history, props.resource);\n  if (previous) {\n    return (\n      <TimelineItem resource={props.resource} padding={true} popupMenuItems={<TimelineItemPopupMenu {...props} />}>\n        <ResourceDiffTable original={previous} revised={props.resource} />\n      </TimelineItem>\n    );\n  } else {\n    return (\n      <TimelineItem resource={props.resource} padding={true} popupMenuItems={<TimelineItemPopupMenu {...props} />}>\n        <h3>Created</h3>\n        <ResourceTable value={props.resource} ignoreMissingValues forceUseInput />\n      </TimelineItem>\n    );\n  }\n}\n\nfunction getPrevious(history: Bundle, version: Resource): Resource | undefined {\n  const entries = history.entry as BundleEntry[];\n  const index = entries.findIndex((entry) => entry.resource?.meta?.versionId === version.meta?.versionId);\n  if (index >= entries.length - 1) {\n    return undefined;\n  }\n  return entries[index + 1].resource;\n}\n\nfunction CommunicationTimelineItem(props: BaseTimelineItemProps<Communication>): JSX.Element {\n  const { classes } = useStyles();\n  const routine = !props.resource.priority || props.resource.priority === 'routine';\n  const className = routine ? undefined : classes.pinnedComment;\n  return (\n    <TimelineItem\n      resource={props.resource}\n      profile={props.resource.sender}\n      dateTime={props.resource.sent}\n      padding={true}\n      className={className}\n      popupMenuItems={<TimelineItemPopupMenu {...props} />}\n    >\n      <p>{props.resource.payload?.[0]?.contentString}</p>\n    </TimelineItem>\n  );\n}\n\nfunction MediaTimelineItem(props: BaseTimelineItemProps<Media>): JSX.Element {\n  const contentType = props.resource.content?.contentType;\n  const padding =\n    contentType &&\n    !contentType.startsWith('image/') &&\n    !contentType.startsWith('video/') &&\n    contentType !== 'application/pdf';\n  return (\n    <TimelineItem resource={props.resource} padding={!!padding} popupMenuItems={<TimelineItemPopupMenu {...props} />}>\n      <AttachmentDisplay value={props.resource.content} />\n    </TimelineItem>\n  );\n}\n\nfunction AuditEventTimelineItem(props: BaseTimelineItemProps<AuditEvent>): JSX.Element {\n  return (\n    <TimelineItem resource={props.resource} padding={true} popupMenuItems={<TimelineItemPopupMenu {...props} />}>\n      <ScrollArea>\n        <pre>{props.resource.outcomeDesc}</pre>\n      </ScrollArea>\n    </TimelineItem>\n  );\n}\n\nfunction DiagnosticReportTimelineItem(props: BaseTimelineItemProps<DiagnosticReport>): JSX.Element {\n  return (\n    <TimelineItem resource={props.resource} padding={true} popupMenuItems={<TimelineItemPopupMenu {...props} />}>\n      <DiagnosticReportDisplay value={props.resource} />\n    </TimelineItem>\n  );\n}\n\nfunction getProgressMessage(e: ProgressEvent): string {\n  if (e.lengthComputable) {\n    const percent = (100 * e.loaded) / e.total;\n    return `Uploaded: ${formatFileSize(e.loaded)} / ${formatFileSize(e.total)} ${percent.toFixed(2)}%`;\n  }\n  return `Uploaded: ${formatFileSize(e.loaded)}`;\n}\n\nfunction formatFileSize(bytes: number): string {\n  if (bytes === 0) {\n    return '0.00 B';\n  }\n  const e = Math.floor(Math.log(bytes) / Math.log(1024));\n  return (bytes / Math.pow(1024, e)).toFixed(2) + ' ' + ' KMGTP'.charAt(e) + 'B';\n}\n", "import { createStyles, Group, List, Stack, Text, Title } from '@mantine/core';\nimport { capitalize, formatCodeableConcept, formatDateTime, formatObservationValue, isReference } from '@medplum/core';\nimport {\n  Annotation,\n  DiagnosticReport,\n  Observation,\n  ObservationComponent,\n  ObservationReferenceRange,\n  Reference,\n  Specimen,\n} from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport React, { useEffect, useState } from 'react';\nimport { CodeableConceptDisplay } from '../CodeableConceptDisplay/CodeableConceptDisplay';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { NoteDisplay } from '../NoteDisplay/NoteDisplay';\nimport { RangeDisplay } from '../RangeDisplay/RangeDisplay';\nimport { ReferenceDisplay } from '../ReferenceDisplay/ReferenceDisplay';\nimport { ResourceBadge } from '../ResourceBadge/ResourceBadge';\nimport { StatusBadge } from '../StatusBadge/StatusBadge';\n\nconst useStyles = createStyles((theme) => ({\n  table: {\n    border: `0.1px solid ${theme.colors.gray[5]}`,\n    borderCollapse: 'collapse',\n\n    '& td, & th': {\n      border: `0.1px solid ${theme.colors.gray[5]}`,\n      padding: 4,\n    },\n  },\n\n  criticalRow: {\n    background: theme.colorScheme === 'dark' ? theme.colors.red[7] : theme.colors.red[1],\n    border: `0.1px solid ${theme.colors.red[5]}`,\n    color: theme.colors.red[5],\n    fontWeight: 500,\n\n    '& td': {\n      border: `0.1px solid ${theme.colors.red[5]}`,\n    },\n  },\n\n  noteBody: { fontSize: theme.fontSizes.sm },\n  noteCite: { fontSize: theme.fontSizes.xs, marginBlockStart: 3 },\n  noteRoot: { padding: 5 },\n}));\n\nexport interface DiagnosticReportDisplayProps {\n  value?: DiagnosticReport | Reference<DiagnosticReport>;\n  hideObservationNotes?: boolean;\n  hideSpecimenInfo?: boolean;\n}\n\nDiagnosticReportDisplay.defaultProps = {\n  hideObservationNotes: false,\n  hideSpecimenInfo: false,\n} as DiagnosticReportDisplayProps;\n\nexport function DiagnosticReportDisplay(props: DiagnosticReportDisplayProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const diagnosticReport = useResource(props.value);\n  const [specimens, setSpecimens] = useState<Specimen[]>();\n\n  useEffect(() => {\n    if (diagnosticReport?.specimen) {\n      Promise.allSettled(diagnosticReport.specimen.map((ref) => medplum.readReference(ref)))\n        .then((outcomes) =>\n          outcomes\n            .filter((outcome) => outcome.status === 'fulfilled')\n            .map((outcome) => (outcome as PromiseFulfilledResult<Specimen>).value)\n        )\n        .then(setSpecimens)\n        .catch(console.error);\n    }\n  }, [medplum, diagnosticReport]);\n\n  if (!diagnosticReport) {\n    return null;\n  }\n\n  const specimenNotes: Annotation[] = specimens?.flatMap((spec) => spec.note || []) || [];\n\n  if (diagnosticReport.presentedForm && diagnosticReport.presentedForm.length > 0) {\n    const pf = diagnosticReport.presentedForm[0];\n    if (pf.contentType?.startsWith('text/plain') && pf.data) {\n      specimenNotes.push({ text: window.atob(pf.data) });\n    }\n  }\n\n  return (\n    <Stack>\n      <Title>Diagnostic Report</Title>\n      <DiagnosticReportHeader value={diagnosticReport} />\n      {specimens && !props.hideSpecimenInfo && SpecimenInfo(specimens)}\n      {diagnosticReport.result && (\n        <ObservationTable hideObservationNotes={props.hideObservationNotes} value={diagnosticReport.result} />\n      )}\n      {specimenNotes.length > 0 && <NoteDisplay value={specimenNotes} />}\n    </Stack>\n  );\n}\n\ninterface DiagnosticReportHeaderProps {\n  value: DiagnosticReport;\n}\n\nfunction DiagnosticReportHeader({ value }: DiagnosticReportHeaderProps): JSX.Element {\n  return (\n    <Group mt=\"md\" spacing={30}>\n      {value.subject && (\n        <div>\n          <Text size=\"xs\" transform=\"uppercase\" color=\"dimmed\">\n            Subject\n          </Text>\n          <Text>\n            <ResourceBadge value={value.subject} link={true} />\n          </Text>\n        </div>\n      )}\n      {value.resultsInterpreter?.map((interpreter) => (\n        <div key={interpreter.reference}>\n          <Text size=\"xs\" transform=\"uppercase\" color=\"dimmed\">\n            Interpreter\n          </Text>\n          <Text>\n            <ResourceBadge value={interpreter} link={true} />\n          </Text>\n        </div>\n      ))}\n      {value.performer?.map((performer) => (\n        <div key={performer.reference}>\n          <Text size=\"xs\" transform=\"uppercase\" color=\"dimmed\">\n            Performer\n          </Text>\n          <Text>\n            <ResourceBadge value={performer} link={true} />\n          </Text>\n        </div>\n      ))}\n      {value.issued && (\n        <div>\n          <Text size=\"xs\" transform=\"uppercase\" color=\"dimmed\">\n            Issued\n          </Text>\n          <Text>{formatDateTime(value.issued)}</Text>\n        </div>\n      )}\n      {value.status && (\n        <div>\n          <Text size=\"xs\" transform=\"uppercase\" color=\"dimmed\">\n            Status\n          </Text>\n          <Text>{capitalize(value.status)}</Text>\n        </div>\n      )}\n    </Group>\n  );\n}\n\nfunction SpecimenInfo(specimens: Specimen[] | undefined): JSX.Element {\n  return (\n    <Stack spacing={'xs'}>\n      <Title order={2} size=\"h6\">\n        Specimens\n      </Title>\n\n      <List type=\"ordered\">\n        {specimens?.map((specimen) => (\n          <List.Item ml={'sm'} key={`specimen-${specimen.id}`}>\n            <Group spacing={20}>\n              <Group spacing={5}>\n                <Text fw={500}>Collected:</Text> {formatDateTime(specimen.collection?.collectedDateTime)}\n              </Group>\n              <Group spacing={5}>\n                <Text fw={500}>Received:</Text> {formatDateTime(specimen.receivedTime)}\n              </Group>\n            </Group>\n          </List.Item>\n        ))}\n      </List>\n    </Stack>\n  );\n}\n\nexport interface ObservationTableProps {\n  value?: Observation[] | Reference<Observation>[];\n  ancestorIds?: string[];\n  hideObservationNotes?: boolean;\n}\n\nexport function ObservationTable(props: ObservationTableProps): JSX.Element {\n  const { classes } = useStyles();\n  return (\n    <table className={classes.table}>\n      <thead>\n        <tr>\n          <th>Test</th>\n          <th>Value</th>\n          <th>Reference Range</th>\n          <th>Interpretation</th>\n          <th>Category</th>\n          <th>Performer</th>\n          <th>Status</th>\n        </tr>\n      </thead>\n      <tbody>\n        <ObservationRowGroup\n          value={props.value}\n          ancestorIds={props.ancestorIds}\n          hideObservationNotes={props.hideObservationNotes}\n        />\n      </tbody>\n    </table>\n  );\n}\n\ninterface ObservationRowGroupProps {\n  value?: Observation[] | Reference<Observation>[];\n  ancestorIds?: string[];\n  hideObservationNotes?: boolean;\n}\n\nfunction ObservationRowGroup(props: ObservationRowGroupProps): JSX.Element {\n  return (\n    <>\n      {props.value?.map((observation) => (\n        <ObservationRow\n          key={`obs-${isReference(observation) ? observation.reference : observation.id}`}\n          value={observation}\n          ancestorIds={props.ancestorIds}\n          hideObservationNotes={props.hideObservationNotes}\n        />\n      ))}\n    </>\n  );\n}\n\ninterface ObservationRowProps {\n  value: Observation | Reference<Observation>;\n  ancestorIds?: string[];\n  hideObservationNotes?: boolean;\n}\n\nfunction ObservationRow(props: ObservationRowProps): JSX.Element | null {\n  const { classes, cx } = useStyles();\n  const observation = useResource(props.value);\n\n  if (!observation || props.ancestorIds?.includes(observation.id as string)) {\n    return null;\n  }\n\n  const displayNotes = !props.hideObservationNotes && observation.note;\n\n  const critical = isCritical(observation);\n\n  return (\n    <>\n      <tr className={cx({ [classes.criticalRow]: critical })}>\n        <td rowSpan={displayNotes ? 2 : 1}>\n          <MedplumLink to={observation}>\n            <CodeableConceptDisplay value={observation.code} />\n          </MedplumLink>\n        </td>\n        <td>\n          <ObservationValueDisplay value={observation} />\n        </td>\n        <td>\n          <ReferenceRangeDisplay value={observation.referenceRange} />\n        </td>\n        <td>\n          {observation.interpretation && observation.interpretation.length > 0 && (\n            <CodeableConceptDisplay value={observation.interpretation[0]} />\n          )}\n        </td>\n        <td>\n          {observation.category && observation.category.length > 0 && (\n            <>\n              {observation.category.map((concept) => (\n                <div key={`category-${formatCodeableConcept(concept)}`}>\n                  <CodeableConceptDisplay value={concept} />\n                </div>\n              ))}\n            </>\n          )}\n        </td>\n        <td>\n          {observation.performer?.map((performer) => <ReferenceDisplay key={performer.reference} value={performer} />)}\n        </td>\n        <td>{observation.status && <StatusBadge status={observation.status} />}</td>\n      </tr>\n      {observation.hasMember && (\n        <ObservationRowGroup\n          value={observation.hasMember as Reference<Observation>[]}\n          ancestorIds={\n            props.ancestorIds ? [...props.ancestorIds, observation.id as string] : [observation.id as string]\n          }\n          hideObservationNotes={props.hideObservationNotes}\n        />\n      )}\n      {displayNotes && (\n        <tr>\n          <td colSpan={6}>\n            <NoteDisplay value={observation.note} />\n          </td>\n        </tr>\n      )}\n    </>\n  );\n}\n\ninterface ObservationValueDisplayProps {\n  value?: Observation | ObservationComponent;\n}\n\nfunction ObservationValueDisplay(props: ObservationValueDisplayProps): JSX.Element | null {\n  const obs = props.value;\n  return <>{formatObservationValue(obs)}</>;\n}\n\ninterface ReferenceRangeProps {\n  value?: ObservationReferenceRange[];\n}\n\nfunction ReferenceRangeDisplay(props: ReferenceRangeProps): JSX.Element | null {\n  const range = props.value && props.value.length > 0 && props.value[0];\n  if (!range) {\n    return null;\n  }\n  if (range.text) {\n    return <>{range.text}</>;\n  }\n  return <RangeDisplay value={range} />;\n}\n\n/**\n * Returns true if the observation is critical.\n * See: https://www.hl7.org/fhir/valueset-observation-interpretation.html\n * @param observation - The FHIR observation.\n * @returns True if the FHIR observation is a critical value.\n */\nfunction isCritical(observation: Observation): boolean {\n  const code = observation.interpretation?.[0]?.coding?.[0]?.code;\n  return code === 'AA' || code === 'LL' || code === 'HH' || code === 'A';\n}\n", "import { Blockquote, createStyles, Stack } from '@mantine/core';\nimport { Annotation } from '@medplum/fhirtypes';\nimport React from 'react';\n\nconst useStyles = createStyles((theme) => ({\n  noteBody: { fontSize: theme.fontSizes.sm },\n  noteCite: { fontSize: theme.fontSizes.xs, marginBlockStart: 3 },\n  noteRoot: { padding: 5 },\n}));\n\nexport interface NoteDisplayProps {\n  value?: Annotation[];\n}\n\nexport function NoteDisplay({ value }: NoteDisplayProps): JSX.Element | null {\n  const { classes } = useStyles();\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <Stack justify=\"flex-start\" spacing=\"xs\">\n      {value.map(\n        (note) =>\n          note.text && (\n            <Blockquote\n              key={`note-${note.text}`}\n              classNames={{ cite: classes.noteCite, body: classes.noteBody, root: classes.noteRoot }}\n              cite={note.authorReference?.display || note.authorString}\n              icon={null}\n            >\n              {note.text}\n            </Blockquote>\n          )\n      )}\n    </Stack>\n  );\n}\n", "import { Group } from '@mantine/core';\nimport { Reference, Resource } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { ResourceName } from '../ResourceName/ResourceName';\n\nexport interface ResourceBadgeProps {\n  value?: Reference | Resource;\n  link?: boolean;\n}\n\nexport function ResourceBadge(props: ResourceBadgeProps): JSX.Element {\n  return (\n    <Group spacing=\"xs\">\n      <ResourceAvatar size={24} radius={12} value={props.value} link={props.link} />\n      <ResourceName value={props.value} link={props.link} />\n    </Group>\n  );\n}\n", "import { Text, TextProps } from '@mantine/core';\nimport { getDisplayString, isOk, normalizeErrorString } from '@medplum/core';\nimport { OperationOutcome, Reference, Resource } from '@medplum/fhirtypes';\nimport { useResource } from '@medplum/react-hooks';\nimport React, { useState } from 'react';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\n\nexport interface ResourceNameProps extends TextProps {\n  value?: Reference | Resource;\n  link?: boolean;\n}\n\nexport function ResourceName(props: ResourceNameProps): JSX.Element | null {\n  const { value, link, ...rest } = props;\n  const [outcome, setOutcome] = useState<OperationOutcome | undefined>();\n  const resource = useResource(value, setOutcome);\n  let text: string;\n\n  if (outcome && !isOk(outcome)) {\n    text = `[${normalizeErrorString(outcome)}]`;\n  } else if (resource) {\n    text = getDisplayString(resource);\n  } else {\n    return null;\n  }\n\n  return link ? (\n    <MedplumLink to={value} {...rest}>\n      {text}\n    </MedplumLink>\n  ) : (\n    <Text component=\"span\" {...rest}>\n      {text}\n    </Text>\n  );\n}\n", "import { Badge, DefaultMantineColor } from '@mantine/core';\nimport React from 'react';\n\n/*\n * Request status: https://hl7.org/fhir/valueset-request-status.html\n * draft, active, on-hold, revoked, completed, entered-in-error, unknown\n *\n * Publication status: https://hl7.org/fhir/valueset-publication-status.html\n * draft, active, retired, unknown\n *\n * Observation status: https://www.hl7.org/fhir/valueset-observation-status.html\n * registered, preliminary, final, amended,  corrected, cancelled, entered-in-error, unknown\n *\n * DiagnosticReport status: https://hl7.org/fhir/valueset-diagnostic-report-status.html\n * registered, preliminary, final, amended, corrected, appended, cancelled, entered-in-error, unknown\n *\n * Task status: https://hl7.org/fhir/valueset-task-status.html\n * draft, requested, received, accepted, rejected, ready, cancelled, in-progress, on-hold, failed, completed, entered-in-error\n *\n * Appointment status: https://www.hl7.org/fhir/valueset-appointmentstatus.html\n * proposed, pending, booked, arrived, fulfilled, cancelled, noshow, entered-in-error, chcked-in, waitlist\n */\n\nconst statusToColor: Record<string, DefaultMantineColor> = {\n  draft: 'blue',\n  active: 'blue',\n  'on-hold': 'yellow',\n  revoked: 'red',\n  completed: 'green',\n  'entered-in-error': 'red',\n  unknown: 'gray',\n  retired: 'gray',\n  registered: 'blue',\n  preliminary: 'blue',\n  final: 'green',\n  amended: 'yellow',\n  corrected: 'yellow',\n  cancelled: 'red',\n  requested: 'blue',\n  received: 'blue',\n  accepted: 'blue',\n  rejected: 'red',\n  ready: 'blue',\n  'in-progress': 'blue',\n  failed: 'red',\n  proposed: 'blue',\n  pending: 'blue',\n  booked: 'blue',\n  arrived: 'blue',\n  fulfilled: 'green',\n  noshow: 'red',\n  'checked-in': 'blue',\n  waitlist: 'gray',\n  routine: 'gray',\n  urgent: 'red',\n  asap: 'red',\n  stat: 'red',\n};\n\nexport interface StatusBadgeProps {\n  readonly status: string;\n}\n\nexport function StatusBadge(props: StatusBadgeProps): JSX.Element {\n  return <Badge color={statusToColor[props.status]}>{props.status}</Badge>;\n}\n", "import { createStyles, Paper, PaperProps, useComponentDefaultProps } from '@mantine/core';\nimport React from 'react';\n\nexport interface PanelStylesParams {\n  width?: number;\n  fill?: boolean;\n}\n\nconst useStyles = createStyles((theme, { width, fill }: PanelStylesParams) => ({\n  paper: {\n    maxWidth: width,\n    margin: `${theme.spacing.xl} auto`,\n    padding: fill ? 0 : theme.spacing.md,\n    '@media (max-width: 800px)': {\n      padding: fill ? 0 : 8,\n    },\n    '& img': {\n      width: '100%',\n      maxWidth: '100%',\n    },\n    '& video': {\n      width: '100%',\n      maxWidth: '100%',\n    },\n  },\n}));\n\nexport interface PanelProps extends PaperProps {\n  width?: number;\n  fill?: boolean;\n}\n\nconst defaultProps: Partial<PanelProps> = {\n  shadow: 'xs',\n  radius: 'md',\n  withBorder: true,\n};\n\nexport function Panel(props: PanelProps): JSX.Element {\n  const { className, children, width, fill, unstyled, ...others } = useComponentDefaultProps(\n    'Panel',\n    defaultProps,\n    props\n  );\n  const { classes, cx } = useStyles({ width, fill }, { name: 'Panel', unstyled });\n\n  return (\n    <Paper className={cx(classes.paper, className)} {...others}>\n      {children}\n    </Paper>\n  );\n}\n", "import { createStyles } from '@mantine/core';\nimport { getDataType, getPropertyDisplayName, stringify, toTypedValue } from '@medplum/core';\nimport { Resource } from '@medplum/fhirtypes';\nimport React, { useEffect, useState } from 'react';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    borderCollapse: 'collapse',\n    width: '100%',\n\n    '& tr': {\n      borderTop: `0.1px solid ${theme.colors.gray[3]}`,\n    },\n\n    '& th, & td': {\n      padding: `${theme.spacing.sm} ${theme.spacing.sm}`,\n      verticalAlign: 'top',\n    },\n  },\n\n  removed: {\n    color: theme.colors.red[7],\n    textDecoration: 'line-through',\n  },\n\n  added: {\n    color: theme.colors.green[7],\n  },\n}));\n\nexport interface ResourceDiffTableProps {\n  original: Resource;\n  revised: Resource;\n}\n\nexport function ResourceDiffTable(props: ResourceDiffTableProps): JSX.Element | null {\n  const { classes } = useStyles();\n  const medplum = useMedplum();\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n\n  useEffect(() => {\n    medplum\n      .requestSchema(props.original.resourceType)\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum, props.original.resourceType]);\n\n  if (!schemaLoaded) {\n    return null;\n  }\n\n  const typeSchema = getDataType(props.original.resourceType);\n\n  return (\n    <table className={classes.root}>\n      <colgroup>\n        <col style={{ width: '30%' }} />\n        <col style={{ width: '35%' }} />\n        <col style={{ width: '35%' }} />\n      </colgroup>\n      <thead>\n        <tr>\n          <th>Property</th>\n          <th>Before</th>\n          <th>After</th>\n        </tr>\n      </thead>\n      <tbody>\n        {Object.entries(typeSchema.elements).map(([key, property]) => {\n          if (key === 'id' || key === 'meta') {\n            return null;\n          }\n\n          const [originalPropertyValue, originalPropertyType] = getValueAndType(toTypedValue(props.original), key);\n          const [revisedPropertyValue, revisedPropertyType] = getValueAndType(toTypedValue(props.revised), key);\n          if (isEmpty(originalPropertyValue) && isEmpty(revisedPropertyValue)) {\n            return null;\n          }\n\n          if (stringify(originalPropertyValue) === stringify(revisedPropertyValue)) {\n            return null;\n          }\n\n          return (\n            <tr key={key}>\n              <td>{getPropertyDisplayName(key)}</td>\n              <td className={classes.removed}>\n                <ResourcePropertyDisplay\n                  property={property}\n                  propertyType={originalPropertyType}\n                  value={originalPropertyValue}\n                  ignoreMissingValues={true}\n                />\n              </td>\n              <td className={classes.added}>\n                <ResourcePropertyDisplay\n                  property={property}\n                  propertyType={revisedPropertyType}\n                  value={revisedPropertyValue}\n                  ignoreMissingValues={true}\n                />\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nfunction isEmpty(value: unknown): boolean {\n  return (\n    !value ||\n    (Array.isArray(value) && value.length === 0) ||\n    (typeof value === 'object' && Object.keys(value).length === 0)\n  );\n}\n", "import { Reference, Resource } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport React, { useEffect, useState } from 'react';\nimport { BackboneElementDisplay } from '../BackboneElementDisplay/BackboneElementDisplay';\n\nexport interface ResourceTableProps {\n  /**\n   * The input value either as a resource or a reference.\n   */\n  value: Resource | Reference;\n\n  /**\n   * Optional flag to ignore missing values.\n   * By default, missing values are displayed as empty strings.\n   */\n  ignoreMissingValues?: boolean;\n\n  /**\n   * Optional flag to force use the input value.\n   * This is useful when you want to display a specific version of the resource,\n   * and not use the latest version.\n   */\n  forceUseInput?: boolean;\n}\n\nexport function ResourceTable(props: ResourceTableProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const value = useResource(props.value);\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n\n  useEffect(() => {\n    if (value) {\n      medplum\n        .requestSchema(value.resourceType)\n        .then(() => setSchemaLoaded(true))\n        .catch(console.log);\n    }\n  }, [medplum, value]);\n\n  if (!schemaLoaded || !value) {\n    return null;\n  }\n\n  return (\n    <BackboneElementDisplay\n      value={{\n        type: value.resourceType,\n        value: props.forceUseInput ? props.value : value,\n      }}\n      ignoreMissingValues={props.ignoreMissingValues}\n    />\n  );\n}\n", "import { ActionIcon, Group, Menu, Text } from '@mantine/core';\nimport { formatDateTime, getReferenceString } from '@medplum/core';\nimport { Reference, Resource } from '@medplum/fhirtypes';\nimport { IconDots } from '@tabler/icons-react';\nimport React from 'react';\nimport { Container } from '../Container/Container';\nimport { ErrorBoundary } from '../ErrorBoundary/ErrorBoundary';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { Panel, PanelProps } from '../Panel/Panel';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { ResourceName } from '../ResourceName/ResourceName';\n\nexport interface TimelineProps {\n  children?: React.ReactNode;\n}\n\nexport function Timeline(props: TimelineProps): JSX.Element {\n  return <Container>{props.children}</Container>;\n}\n\nexport interface TimelineItemProps extends PanelProps {\n  resource: Resource;\n  profile?: Reference;\n  dateTime?: string;\n  padding?: boolean;\n  popupMenuItems?: React.ReactNode;\n}\n\nexport function TimelineItem(props: TimelineItemProps): JSX.Element {\n  const { resource, profile, padding, popupMenuItems, ...others } = props;\n  const author = profile ?? resource.meta?.author;\n  const dateTime = props.dateTime ?? resource.meta?.lastUpdated;\n\n  return (\n    <Panel data-testid=\"timeline-item\" fill={true} {...others}>\n      <Group position=\"apart\" spacing={8} mx=\"xs\" my=\"sm\">\n        <ResourceAvatar value={author} link={true} size=\"md\" />\n        <div style={{ flex: 1 }}>\n          <Text size=\"sm\">\n            <ResourceName color=\"dark\" weight={500} value={author} link={true} />\n          </Text>\n          <Text size=\"xs\">\n            <MedplumLink color=\"dimmed\" to={props.resource}>\n              {formatDateTime(dateTime)}\n            </MedplumLink>\n            <Text component=\"span\" color=\"dimmed\" mx={8}>\n              &middot;\n            </Text>\n            <MedplumLink color=\"dimmed\" to={props.resource}>\n              {props.resource.resourceType}\n            </MedplumLink>\n          </Text>\n        </div>\n        {popupMenuItems && (\n          <Menu position=\"bottom-end\" shadow=\"md\" width={200}>\n            <Menu.Target>\n              <ActionIcon radius=\"xl\" aria-label={`Actions for ${getReferenceString(props.resource)}`}>\n                <IconDots />\n              </ActionIcon>\n            </Menu.Target>\n            {popupMenuItems}\n          </Menu>\n        )}\n      </Group>\n      <ErrorBoundary>\n        {padding && <div style={{ padding: '0 16px 16px 16px' }}>{props.children}</div>}\n        {!padding && <>{props.children}</>}\n      </ErrorBoundary>\n    </Panel>\n  );\n}\n", "import { Resource } from '@medplum/fhirtypes';\n\n/**\n * Sorts an array of resources in place by meta.lastUpdated ascending.\n * @param resources - Array of resources.\n * @param timelineResource - Optional primary resource of a timeline view. If specified, the primary resource will be sorted by meta.lastUpdated descending.\n */\nexport function sortByDateAndPriority(resources: Resource[], timelineResource?: Resource): void {\n  resources.sort((a: Resource, b: Resource): number => {\n    const priority1 = getPriorityScore(a, timelineResource);\n    const priority2 = getPriorityScore(b, timelineResource);\n    if (priority1 > priority2) {\n      return 1;\n    }\n    if (priority1 < priority2) {\n      return -1;\n    }\n    return getTime(a, timelineResource) - getTime(b, timelineResource);\n  });\n}\n\nfunction getPriorityScore(resource: Resource, timelineResource: Resource | undefined): number {\n  if (!isSameResourceType(resource, timelineResource)) {\n    // Only use priority if not the primary resource of a timeline view.\n\n    const priority = (resource as any).priority;\n    if (typeof priority === 'string') {\n      return { stat: 4, asap: 3, urgent: 2 }[priority] ?? 0;\n    }\n  }\n  return 0;\n}\n\nfunction getTime(resource: Resource, timelineResource: Resource | undefined): number {\n  if (!isSameResourceType(resource, timelineResource)) {\n    // Only use special case timestamps if not the primary resource of a timeline view.\n\n    if (resource.resourceType === 'Communication' && resource.sent) {\n      return new Date(resource.sent).getTime();\n    }\n\n    if (\n      (resource.resourceType === 'DiagnosticReport' ||\n        resource.resourceType === 'Media' ||\n        resource.resourceType === 'Observation') &&\n      resource.issued\n    ) {\n      return new Date(resource.issued).getTime();\n    }\n\n    if (resource.resourceType === 'DocumentReference' && resource.date) {\n      return new Date(resource.date).getTime();\n    }\n  }\n\n  const dateTime = resource.meta?.lastUpdated;\n  if (!dateTime) {\n    return 0;\n  }\n  return new Date(dateTime).getTime();\n}\n\nfunction isSameResourceType(a: Resource, b: Resource | undefined): boolean {\n  return !!b && a.resourceType === b.resourceType && a.id === b.id;\n}\n", "import React from 'react';\nimport { Container } from '../Container/Container';\nimport { Panel, PanelProps } from '../Panel/Panel';\n\nexport function Document(props: PanelProps): JSX.Element {\n  const { children, ...others } = props;\n  return (\n    <Container>\n      <Panel {...others}>{children}</Panel>\n    </Container>\n  );\n}\n", "import { createReference, MedplumClient, ProfileResource } from '@medplum/core';\nimport { Attachment, Encounter, Reference, ResourceType } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { ResourceTimeline } from '../ResourceTimeline/ResourceTimeline';\n\nexport interface EncounterTimelineProps {\n  encounter: Encounter | Reference<Encounter>;\n}\n\nexport function EncounterTimeline(props: EncounterTimelineProps): JSX.Element {\n  return (\n    <ResourceTimeline\n      value={props.encounter}\n      loadTimelineResources={async (medplum: MedplumClient, _resourceType: ResourceType, id: string) => {\n        return Promise.allSettled([\n          medplum.readHistory('Encounter', id),\n          medplum.search('Communication', 'encounter=Encounter/' + id),\n          medplum.search('Media', 'encounter=Encounter/' + id),\n        ]);\n      }}\n      createCommunication={(resource: Encounter, sender: ProfileResource, text: string) => ({\n        resourceType: 'Communication',\n        status: 'completed',\n        encounter: createReference(resource),\n        subject: resource.subject,\n        sender: createReference(sender),\n        sent: new Date().toISOString(),\n        payload: [{ contentString: text }],\n      })}\n      createMedia={(resource: Encounter, operator: ProfileResource, content: Attachment) => ({\n        resourceType: 'Media',\n        status: 'completed',\n        encounter: createReference(resource),\n        subject: resource.subject,\n        operator: createReference(operator),\n        issued: new Date().toISOString(),\n        content,\n      })}\n    />\n  );\n}\n", "import { Button, Loader, Table } from '@mantine/core';\nimport { normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome, Resource } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FhirPathDisplay } from '../FhirPathDisplay/FhirPathDisplay';\nimport { SearchClickEvent } from '../SearchControl/SearchControl';\nimport { isCheckboxCell, killEvent } from '../utils/dom';\n\nexport interface FhirPathTableField {\n  readonly propertyType: string;\n  readonly name: string;\n  readonly fhirPath: string;\n}\n\nexport interface FhirPathTableProps {\n  resourceType: string;\n  query: string;\n  fields: FhirPathTableField[];\n  checkboxesEnabled?: boolean;\n  onClick?: (e: SearchClickEvent) => void;\n  onAuxClick?: (e: SearchClickEvent) => void;\n  onBulk?: (ids: string[]) => void;\n}\n\nexport interface SmartSearchResponse {\n  data: {\n    ResourceList: Resource[];\n  };\n}\n\n/**\n * The FhirPathTable component represents the embeddable search table control.\n * @param props - FhirPathTable React props.\n * @returns FhirPathTable React node.\n */\nexport function FhirPathTable(props: FhirPathTableProps): JSX.Element {\n  const medplum = useMedplum();\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const [outcome, setOutcome] = useState<OperationOutcome | undefined>();\n  const { query, fields } = props;\n  const [response, setResponse] = useState<SmartSearchResponse | undefined>();\n  const [selected, setSelected] = useState<{ [id: string]: boolean }>({});\n\n  const responseRef = useRef<SmartSearchResponse>();\n  responseRef.current = response;\n\n  const selectedRef = useRef<{ [id: string]: boolean }>({});\n  selectedRef.current = selected;\n\n  useEffect(() => {\n    setOutcome(undefined);\n    medplum\n      .graphql(query)\n      .then(setResponse)\n      .catch((err) => setOutcome(normalizeOperationOutcome(err)));\n  }, [medplum, query]);\n\n  function handleSingleCheckboxClick(e: React.ChangeEvent, id: string): void {\n    e.stopPropagation();\n\n    const el = e.target as HTMLInputElement;\n    const checked = el.checked;\n    const newSelected = { ...selectedRef.current };\n    if (checked) {\n      newSelected[id] = true;\n    } else {\n      delete newSelected[id];\n    }\n    setSelected(newSelected);\n  }\n\n  function handleAllCheckboxClick(e: React.ChangeEvent): void {\n    e.stopPropagation();\n\n    const el = e.target as HTMLInputElement;\n    const checked = el.checked;\n    const newSelected = {} as { [id: string]: boolean };\n    const resources = responseRef.current?.data.ResourceList;\n    if (checked && resources) {\n      resources.forEach((resource) => {\n        if (resource.id) {\n          newSelected[resource.id] = true;\n        }\n      });\n    }\n    setSelected(newSelected);\n  }\n\n  function isAllSelected(): boolean {\n    const resources = responseRef.current?.data.ResourceList;\n    if (!resources || resources.length === 0) {\n      return false;\n    }\n    for (const resource of resources) {\n      if (resource.id && !selectedRef.current[resource.id]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  function handleRowClick(e: React.MouseEvent, resource: Resource): void {\n    if (isCheckboxCell(e.target as Element)) {\n      // Ignore clicks on checkboxes\n      return;\n    }\n\n    killEvent(e);\n\n    if (e.button !== 1 && props.onClick) {\n      props.onClick(new SearchClickEvent(resource, e));\n    }\n\n    if (e.button === 1 && props.onAuxClick) {\n      props.onAuxClick(new SearchClickEvent(resource, e));\n    }\n  }\n\n  useEffect(() => {\n    medplum\n      .requestSchema(props.resourceType)\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum, props.resourceType]);\n\n  if (!schemaLoaded) {\n    return <Loader />;\n  }\n\n  const checkboxColumn = props.checkboxesEnabled;\n\n  return (\n    <div onContextMenu={(e) => killEvent(e)} data-testid=\"search-control\">\n      <Table>\n        <thead>\n          <tr>\n            {checkboxColumn && (\n              <th>\n                <input\n                  type=\"checkbox\"\n                  value=\"checked\"\n                  aria-label=\"all-checkbox\"\n                  data-testid=\"all-checkbox\"\n                  checked={isAllSelected()}\n                  onChange={(e) => handleAllCheckboxClick(e)}\n                />\n              </th>\n            )}\n            {fields.map((field) => (\n              <th key={field.name}>{field.name}</th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {response?.data.ResourceList.map(\n            (resource) =>\n              resource && (\n                <tr\n                  key={resource.id}\n                  data-testid=\"search-control-row\"\n                  onClick={(e) => handleRowClick(e, resource)}\n                  onAuxClick={(e) => handleRowClick(e, resource)}\n                >\n                  {checkboxColumn && (\n                    <td>\n                      <input\n                        type=\"checkbox\"\n                        value=\"checked\"\n                        data-testid=\"row-checkbox\"\n                        aria-label={`Checkbox for ${resource.id}`}\n                        checked={!!selected[resource.id as string]}\n                        onChange={(e) => handleSingleCheckboxClick(e, resource.id as string)}\n                      />\n                    </td>\n                  )}\n                  {fields.map((field) => {\n                    return (\n                      <td key={field.name}>\n                        <FhirPathDisplay propertyType={field.propertyType} path={field.fhirPath} resource={resource} />\n                      </td>\n                    );\n                  })}\n                </tr>\n              )\n          )}\n        </tbody>\n      </Table>\n      {response?.data.ResourceList.length === 0 && <div data-testid=\"empty-search\">No results</div>}\n      {outcome && (\n        <div data-testid=\"search-error\">\n          <pre style={{ textAlign: 'left' }}>{JSON.stringify(outcome, undefined, 2)}</pre>\n        </div>\n      )}\n      {props.onBulk && (\n        <Button onClick={() => (props.onBulk as (ids: string[]) => any)(Object.keys(selectedRef.current))}>\n          Bulk...\n        </Button>\n      )}\n    </div>\n  );\n}\n\nexport const MemoizedFhirPathTable = React.memo(FhirPathTable);\n", "import { evalFhirPath } from '@medplum/core';\nimport { Resource } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\n\nexport interface FhirPathDisplayProps {\n  resource: Resource;\n  path: string;\n  propertyType: string;\n}\n\nexport function FhirPathDisplay(props: FhirPathDisplayProps): JSX.Element | null {\n  let value;\n\n  try {\n    value = evalFhirPath(props.path, props.resource);\n  } catch (err) {\n    console.warn('FhirPathDisplay:', err);\n    return null;\n  }\n\n  if (value.length > 1) {\n    throw new Error(\n      `Component \"path\" for \"FhirPathDisplay\" must resolve to a single element. \\\n       Received ${value.length} elements \\\n       [${JSON.stringify(value, null, 2)}]`\n    );\n  }\n  return <ResourcePropertyDisplay value={value[0] || ''} propertyType={props.propertyType} />;\n}\n", "import {\n  ActionIcon,\n  Button,\n  Center,\n  createStyles,\n  Group,\n  Loader,\n  Menu,\n  Pagination,\n  Table,\n  Text,\n  UnstyledButton,\n} from '@mantine/core';\nimport { DEFAULT_SEARCH_COUNT, Filter, formatSearchQuery, SearchRequest } from '@medplum/core';\nimport {\n  Bundle,\n  OperationOutcome,\n  Resource,\n  ResourceType,\n  SearchParameter,\n  UserConfiguration,\n} from '@medplum/fhirtypes';\nimport {\n  IconAdjustmentsHorizontal,\n  IconBoxMultiple,\n  IconColumns,\n  IconFilePlus,\n  IconFilter,\n  IconRefresh,\n  IconTableExport,\n  IconTrash,\n} from '@tabler/icons-react';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Container } from '../Container/Container';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { SearchExportDialog } from '../SearchExportDialog/SearchExportDialog';\nimport { SearchFieldEditor } from '../SearchFieldEditor/SearchFieldEditor';\nimport { SearchFilterEditor } from '../SearchFilterEditor/SearchFilterEditor';\nimport { SearchFilterValueDialog } from '../SearchFilterValueDialog/SearchFilterValueDialog';\nimport { SearchFilterValueDisplay } from '../SearchFilterValueDisplay/SearchFilterValueDisplay';\nimport { SearchPopupMenu } from '../SearchPopupMenu/SearchPopupMenu';\nimport { isCheckboxCell, killEvent } from '../utils/dom';\nimport { getFieldDefinitions } from './SearchControlField';\nimport { addFilter, buildFieldNameString, getOpString, renderValue, setPage } from './SearchUtils';\n\nexport class SearchChangeEvent extends Event {\n  readonly definition: SearchRequest;\n\n  constructor(definition: SearchRequest) {\n    super('change');\n    this.definition = definition;\n  }\n}\n\nexport class SearchLoadEvent extends Event {\n  readonly response: Bundle;\n\n  constructor(response: Bundle) {\n    super('load');\n    this.response = response;\n  }\n}\n\nexport class SearchClickEvent extends Event {\n  readonly resource: Resource;\n  readonly browserEvent: React.MouseEvent;\n\n  constructor(resource: Resource, browserEvent: React.MouseEvent) {\n    super('click');\n    this.resource = resource;\n    this.browserEvent = browserEvent;\n  }\n}\n\nexport interface SearchControlProps {\n  search: SearchRequest;\n  userConfig?: UserConfiguration;\n  checkboxesEnabled?: boolean;\n  hideToolbar?: boolean;\n  hideFilters?: boolean;\n  onLoad?: (e: SearchLoadEvent) => void;\n  onChange?: (e: SearchChangeEvent) => void;\n  onClick?: (e: SearchClickEvent) => void;\n  onAuxClick?: (e: SearchClickEvent) => void;\n  onNew?: () => void;\n  onExport?: () => void;\n  onExportCsv?: () => void;\n  onExportTransactionBundle?: () => void;\n  onDelete?: (ids: string[]) => void;\n  onPatch?: (ids: string[]) => void;\n  onBulk?: (ids: string[]) => void;\n}\n\ninterface SearchControlState {\n  searchResponse?: Bundle;\n  selected: { [id: string]: boolean };\n  fieldEditorVisible: boolean;\n  filterEditorVisible: boolean;\n  filterDialogVisible: boolean;\n  exportDialogVisible: boolean;\n  filterDialogFilter?: Filter;\n  filterDialogSearchParam?: SearchParameter;\n}\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    maxWidth: '100%',\n    overflow: 'auto',\n    textAlign: 'left',\n    marginBottom: '20px',\n  },\n\n  table: {\n    cursor: 'pointer',\n  },\n\n  tr: {\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.colors.gray[0],\n    },\n  },\n\n  th: {\n    padding: '0 !important',\n  },\n\n  control: {\n    width: '100%',\n    padding: `${theme.spacing.xs} ${theme.spacing.md}`,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n    },\n  },\n\n  icon: {\n    width: 21,\n    height: 21,\n    borderRadius: 21,\n  },\n}));\n\n/**\n * The SearchControl component represents the embeddable search table control.\n * It includes the table, rows, headers, sorting, etc.\n * It does not include the field editor, filter editor, pagination buttons.\n * @param props - The SearchControl React props.\n * @returns The SearchControl React node.\n */\nexport function SearchControl(props: SearchControlProps): JSX.Element {\n  const { classes } = useStyles();\n  const medplum = useMedplum();\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const [outcome, setOutcome] = useState<OperationOutcome | undefined>();\n  const { search, onLoad } = props;\n\n  const [state, setState] = useState<SearchControlState>({\n    selected: {},\n    fieldEditorVisible: false,\n    filterEditorVisible: false,\n    exportDialogVisible: false,\n    filterDialogVisible: false,\n  });\n\n  const stateRef = useRef<SearchControlState>(state);\n  stateRef.current = state;\n\n  const totalType = search.total ?? 'accurate';\n\n  const loadResults = useCallback(\n    (options?: RequestInit) => {\n      setOutcome(undefined);\n\n      medplum\n        .search(\n          search.resourceType as ResourceType,\n          formatSearchQuery({ ...search, total: totalType, fields: undefined }),\n          options\n        )\n        .then((response) => {\n          setState({ ...stateRef.current, searchResponse: response });\n          if (onLoad) {\n            onLoad(new SearchLoadEvent(response));\n          }\n        })\n        .catch((reason) => {\n          setState({ ...stateRef.current, searchResponse: undefined });\n          setOutcome(reason);\n        });\n    },\n    [medplum, search, totalType, onLoad]\n  );\n\n  const refreshResults = useCallback(() => {\n    setState({ ...stateRef.current, searchResponse: undefined });\n    loadResults({ cache: 'reload' });\n  }, [loadResults]);\n\n  useEffect(() => {\n    loadResults();\n  }, [loadResults]);\n\n  function handleSingleCheckboxClick(e: React.ChangeEvent, id: string): void {\n    e.stopPropagation();\n\n    const el = e.target as HTMLInputElement;\n    const checked = el.checked;\n    const newSelected = { ...stateRef.current.selected };\n    if (checked) {\n      newSelected[id] = true;\n    } else {\n      delete newSelected[id];\n    }\n    setState({ ...stateRef.current, selected: newSelected });\n  }\n\n  function handleAllCheckboxClick(e: React.ChangeEvent): void {\n    e.stopPropagation();\n\n    const el = e.target as HTMLInputElement;\n    const checked = el.checked;\n    const newSelected = {} as { [id: string]: boolean };\n    const searchResponse = stateRef.current.searchResponse;\n    if (checked && searchResponse?.entry) {\n      searchResponse.entry.forEach((entry) => {\n        if (entry.resource?.id) {\n          newSelected[entry.resource.id] = true;\n        }\n      });\n    }\n    setState({ ...stateRef.current, selected: newSelected });\n  }\n\n  function isAllSelected(): boolean {\n    const state = stateRef.current;\n    if (!state.searchResponse?.entry || state.searchResponse.entry.length === 0) {\n      return false;\n    }\n    for (const e of state.searchResponse.entry) {\n      if (e.resource?.id && !state.selected[e.resource.id]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Emits a change event to the optional change listener.\n   * @param newSearch - The new search definition.\n   */\n  function emitSearchChange(newSearch: SearchRequest): void {\n    if (props.onChange) {\n      props.onChange(new SearchChangeEvent(newSearch));\n    }\n  }\n\n  /**\n   * Handles a click on a order row.\n   * @param e - The click event.\n   * @param resource - The FHIR resource.\n   */\n  function handleRowClick(e: React.MouseEvent, resource: Resource): void {\n    if (isCheckboxCell(e.target as Element)) {\n      // Ignore clicks on checkboxes\n      return;\n    }\n\n    if (e.button === 2) {\n      // Ignore right clicks\n      return;\n    }\n\n    killEvent(e);\n\n    const isAux = e.button === 1 || e.ctrlKey || e.metaKey;\n\n    if (!isAux && props.onClick) {\n      props.onClick(new SearchClickEvent(resource, e));\n    }\n\n    if (isAux && props.onAuxClick) {\n      props.onAuxClick(new SearchClickEvent(resource, e));\n    }\n  }\n\n  function isExportPassed(): boolean {\n    return !!(props.onExport ?? props.onExportCsv ?? props.onExportTransactionBundle);\n  }\n\n  useEffect(() => {\n    setSchemaLoaded(false);\n    medplum\n      .requestSchema(props.search.resourceType as ResourceType)\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum, props.search.resourceType]);\n\n  if (!schemaLoaded) {\n    return (\n      <Center style={{ width: '100%', height: '100%' }}>\n        <Loader />\n      </Center>\n    );\n  }\n\n  const checkboxColumn = props.checkboxesEnabled;\n  const fields = getFieldDefinitions(search);\n  const resourceType = search.resourceType;\n  const lastResult = state.searchResponse;\n  const entries = lastResult?.entry;\n  const resources = entries?.map((e) => e.resource);\n\n  const buttonVariant = 'subtle';\n  const buttonColor = 'gray';\n  const iconSize = 16;\n  const isMobile = window.innerWidth < 768;\n\n  return (\n    <div className={classes.root} data-testid=\"search-control\">\n      {!props.hideToolbar && (\n        <Group position=\"apart\" mb=\"xl\">\n          <Group spacing={2}>\n            <Button\n              compact\n              variant={buttonVariant}\n              color={buttonColor}\n              leftIcon={<IconColumns size={iconSize} />}\n              onClick={() => setState({ ...stateRef.current, fieldEditorVisible: true })}\n            >\n              Fields\n            </Button>\n            <Button\n              compact\n              variant={buttonVariant}\n              color={buttonColor}\n              leftIcon={<IconFilter size={iconSize} />}\n              onClick={() => setState({ ...stateRef.current, filterEditorVisible: true })}\n            >\n              Filters\n            </Button>\n            {props.onNew && (\n              <Button\n                compact\n                variant={buttonVariant}\n                color={buttonColor}\n                leftIcon={<IconFilePlus size={iconSize} />}\n                onClick={props.onNew}\n              >\n                New...\n              </Button>\n            )}\n            {!isMobile && isExportPassed() && (\n              <Button\n                compact\n                variant={buttonVariant}\n                color={buttonColor}\n                leftIcon={<IconTableExport size={iconSize} />}\n                onClick={\n                  props.onExport ? props.onExport : () => setState({ ...stateRef.current, exportDialogVisible: true })\n                }\n              >\n                Export...\n              </Button>\n            )}\n            {!isMobile && props.onDelete && (\n              <Button\n                compact\n                variant={buttonVariant}\n                color={buttonColor}\n                leftIcon={<IconTrash size={iconSize} />}\n                onClick={() => (props.onDelete as (ids: string[]) => any)(Object.keys(state.selected))}\n              >\n                Delete...\n              </Button>\n            )}\n            {!isMobile && props.onBulk && (\n              <Button\n                compact\n                variant={buttonVariant}\n                color={buttonColor}\n                leftIcon={<IconBoxMultiple size={iconSize} />}\n                onClick={() => (props.onBulk as (ids: string[]) => any)(Object.keys(state.selected))}\n              >\n                Bulk...\n              </Button>\n            )}\n          </Group>\n          <Group spacing={2}>\n            {lastResult && (\n              <Text size=\"xs\" color=\"dimmed\">\n                {getStart(search, lastResult.total as number)}-{getEnd(search, lastResult.total as number)} of{' '}\n                {`${totalType === 'estimate' ? '~' : ''}${lastResult.total?.toLocaleString()}`}\n              </Text>\n            )}\n            <ActionIcon title=\"Refresh\" onClick={refreshResults}>\n              <IconRefresh size=\"1.125rem\" />\n            </ActionIcon>\n          </Group>\n        </Group>\n      )}\n      <Table className={classes.table}>\n        <thead>\n          <tr>\n            {checkboxColumn && (\n              <th>\n                <input\n                  type=\"checkbox\"\n                  value=\"checked\"\n                  aria-label=\"all-checkbox\"\n                  data-testid=\"all-checkbox\"\n                  checked={isAllSelected()}\n                  onChange={(e) => handleAllCheckboxClick(e)}\n                />\n              </th>\n            )}\n            {fields.map((field) => (\n              <th key={field.name}>\n                <Menu shadow=\"md\" width={240} position=\"bottom-end\">\n                  <Menu.Target>\n                    <UnstyledButton className={classes.control}>\n                      <Group position=\"apart\" noWrap>\n                        <Text weight={500} size=\"sm\">\n                          {buildFieldNameString(field.name)}\n                        </Text>\n                        <Center className={classes.icon}>\n                          <IconAdjustmentsHorizontal size={14} stroke={1.5} />\n                        </Center>\n                      </Group>\n                    </UnstyledButton>\n                  </Menu.Target>\n                  <SearchPopupMenu\n                    search={props.search}\n                    searchParams={field.searchParams}\n                    onPrompt={(searchParam, filter) => {\n                      setState({\n                        ...stateRef.current,\n                        filterDialogVisible: true,\n                        filterDialogSearchParam: searchParam,\n                        filterDialogFilter: filter,\n                      });\n                    }}\n                    onChange={(result) => {\n                      emitSearchChange(result);\n                    }}\n                  />\n                </Menu>\n              </th>\n            ))}\n          </tr>\n          {!props.hideFilters && (\n            <tr>\n              {checkboxColumn && <th />}\n              {fields.map((field) => (\n                <th key={field.name}>\n                  {field.searchParams && (\n                    <FilterDescription\n                      resourceType={resourceType}\n                      searchParams={field.searchParams}\n                      filters={props.search.filters}\n                    />\n                  )}\n                </th>\n              ))}\n            </tr>\n          )}\n        </thead>\n        <tbody>\n          {resources?.map(\n            (resource) =>\n              resource && (\n                <tr\n                  key={resource.id}\n                  className={classes.tr}\n                  data-testid=\"search-control-row\"\n                  onClick={(e) => handleRowClick(e, resource)}\n                  onAuxClick={(e) => handleRowClick(e, resource)}\n                >\n                  {checkboxColumn && (\n                    <td>\n                      <input\n                        type=\"checkbox\"\n                        value=\"checked\"\n                        data-testid=\"row-checkbox\"\n                        aria-label={`Checkbox for ${resource.id}`}\n                        checked={!!state.selected[resource.id as string]}\n                        onChange={(e) => handleSingleCheckboxClick(e, resource.id as string)}\n                      />\n                    </td>\n                  )}\n                  {fields.map((field) => (\n                    <td key={field.name}>{renderValue(resource, field)}</td>\n                  ))}\n                </tr>\n              )\n          )}\n        </tbody>\n      </Table>\n      {resources?.length === 0 && (\n        <Container>\n          <Center style={{ height: 150 }}>\n            <Text size=\"xl\" color=\"dimmed\">\n              No results\n            </Text>\n          </Center>\n        </Container>\n      )}\n      {lastResult?.total !== undefined && lastResult.total > 0 && (\n        <Center m=\"md\" p=\"md\">\n          <Pagination\n            value={getPage(search)}\n            total={getTotalPages(search, lastResult.total)}\n            onChange={(newPage) => emitSearchChange(setPage(search, newPage))}\n            getControlProps={(control) => {\n              switch (control) {\n                case 'previous':\n                  return { 'aria-label': 'Previous page' };\n                case 'next':\n                  return { 'aria-label': 'Next page' };\n                default:\n                  return {};\n              }\n            }}\n          />\n        </Center>\n      )}\n      {outcome && (\n        <div data-testid=\"search-error\">\n          <pre style={{ textAlign: 'left' }}>{JSON.stringify(outcome, undefined, 2)}</pre>\n        </div>\n      )}\n      <SearchFieldEditor\n        search={props.search}\n        visible={stateRef.current.fieldEditorVisible}\n        onOk={(result) => {\n          emitSearchChange(result);\n          setState({\n            ...stateRef.current,\n            fieldEditorVisible: false,\n          });\n        }}\n        onCancel={() => {\n          setState({\n            ...stateRef.current,\n            fieldEditorVisible: false,\n          });\n        }}\n      />\n      <SearchFilterEditor\n        search={props.search}\n        visible={stateRef.current.filterEditorVisible}\n        onOk={(result) => {\n          emitSearchChange(result);\n          setState({\n            ...stateRef.current,\n            filterEditorVisible: false,\n          });\n        }}\n        onCancel={() => {\n          setState({\n            ...stateRef.current,\n            filterEditorVisible: false,\n          });\n        }}\n      />\n      <SearchExportDialog\n        visible={stateRef.current.exportDialogVisible}\n        exportCsv={props.onExportCsv}\n        exportTransactionBundle={props.onExportTransactionBundle}\n        onCancel={() => {\n          setState({\n            ...stateRef.current,\n            exportDialogVisible: false,\n          });\n        }}\n      />\n      <SearchFilterValueDialog\n        key={state.filterDialogSearchParam?.code}\n        visible={stateRef.current.filterDialogVisible}\n        title={state.filterDialogSearchParam?.code ? buildFieldNameString(state.filterDialogSearchParam.code) : ''}\n        resourceType={resourceType}\n        searchParam={state.filterDialogSearchParam}\n        filter={state.filterDialogFilter}\n        defaultValue=\"\"\n        onOk={(filter) => {\n          emitSearchChange(addFilter(props.search, filter.code, filter.operator, filter.value));\n          setState({\n            ...stateRef.current,\n            filterDialogVisible: false,\n          });\n        }}\n        onCancel={() => {\n          setState({\n            ...stateRef.current,\n            filterDialogVisible: false,\n          });\n        }}\n      />\n    </div>\n  );\n}\n\nexport const MemoizedSearchControl = React.memo(SearchControl);\n\ninterface FilterDescriptionProps {\n  readonly resourceType: string;\n  readonly searchParams: SearchParameter[];\n  readonly filters?: Filter[];\n}\n\nfunction FilterDescription(props: FilterDescriptionProps): JSX.Element {\n  const filters = (props.filters ?? []).filter((f) => props.searchParams.find((p) => p.code === f.code));\n  if (filters.length === 0) {\n    return <span>no filters</span>;\n  }\n\n  return (\n    <>\n      {filters.map((filter: Filter) => (\n        <div key={`filter-${filter.code}-${filter.operator}-${filter.value}`}>\n          {getOpString(filter.operator)}\n          &nbsp;\n          <SearchFilterValueDisplay resourceType={props.resourceType} filter={filter} />\n        </div>\n      ))}\n    </>\n  );\n}\n\nfunction getPage(search: SearchRequest): number {\n  return Math.floor((search.offset ?? 0) / (search.count ?? DEFAULT_SEARCH_COUNT)) + 1;\n}\n\nfunction getTotalPages(search: SearchRequest, total: number): number {\n  const pageSize = search.count ?? DEFAULT_SEARCH_COUNT;\n  return Math.ceil(total / pageSize);\n}\n\nfunction getStart(search: SearchRequest, total: number): number {\n  return Math.min(total, (search.offset ?? 0) + 1);\n}\n\nfunction getEnd(search: SearchRequest, total: number): number {\n  return Math.min(total, ((search.offset ?? 0) + 1) * (search.count ?? DEFAULT_SEARCH_COUNT));\n}\n", "import { Box, Button, Modal, Text } from '@mantine/core';\nimport React from 'react';\n\ninterface SearchExportDialogProps {\n  visible: boolean;\n  exportCsv?: () => void;\n  exportTransactionBundle?: () => void;\n  onCancel: () => void;\n}\n\nexport function SearchExportDialog(props: SearchExportDialogProps): JSX.Element | null {\n  return (\n    <Modal title=\"Export\" closeButtonProps={{ 'aria-label': 'Close' }} opened={props.visible} onClose={props.onCancel}>\n      <Box display=\"flex\" sx={{ justifyContent: 'space-between' }}>\n        {props.exportCsv && <ExportButton text=\"CSV\" exportLogic={props.exportCsv} onCancel={props.onCancel} />}\n        {props.exportTransactionBundle && (\n          <ExportButton\n            text=\"Transaction Bundle\"\n            exportLogic={props.exportTransactionBundle}\n            onCancel={props.onCancel}\n          />\n        )}\n      </Box>\n      <Text sx={{ marginTop: '10px', marginLeft: '2px' }}>Limited to 1000 records</Text>\n    </Modal>\n  );\n}\n\ninterface ExportButtonProps {\n  text: string;\n  exportLogic: () => void;\n  onCancel: () => void;\n}\n\nexport function ExportButton(props: ExportButtonProps): JSX.Element {\n  return (\n    <Button\n      onClick={() => {\n        props.exportLogic();\n        props.onCancel();\n      }}\n    >\n      {`Export as ${props.text}`}\n    </Button>\n  );\n}\n", "import { Button, Group, Modal, MultiSelect, Stack } from '@mantine/core';\nimport { InternalTypeSchema, SearchRequest, getDataType, getSearchParameters, stringify } from '@medplum/core';\nimport { SearchParameter } from '@medplum/fhirtypes';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { buildFieldNameString } from '../SearchControl/SearchUtils';\n\nexport interface SearchFieldEditorProps {\n  visible: boolean;\n  search: SearchRequest;\n  onOk: (search: SearchRequest) => void;\n  onCancel: () => void;\n}\n\nexport function SearchFieldEditor(props: SearchFieldEditorProps): JSX.Element | null {\n  const wasDropdownOpen = useRef(false);\n  const [state, setState] = useState({\n    search: JSON.parse(stringify(props.search)) as SearchRequest,\n  });\n\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n  useEffect(() => {\n    setState({ search: props.search });\n  }, [props.search]);\n\n  const allFields = useMemo(() => {\n    if (!props.visible) {\n      return [];\n    }\n\n    const resourceType = props.search.resourceType;\n    const typeSchema = getDataType(resourceType);\n    const searchParams = getSearchParameters(resourceType);\n    return getFieldsList(typeSchema, searchParams)\n      .sort((a, b) => a.localeCompare(b))\n      .map((field) => {\n        return { value: field, label: buildFieldNameString(field) };\n      });\n  }, [props.visible, props.search.resourceType]);\n\n  if (!props.visible) {\n    return null;\n  }\n\n  function handleChange(newFields: string[]): void {\n    setState({ search: { ...state.search, fields: newFields } });\n  }\n\n  return (\n    <Modal\n      title=\"Fields\"\n      closeButtonProps={{ 'aria-label': 'Close' }}\n      opened={props.visible}\n      onClose={() => {\n        props.onCancel();\n      }}\n      size=\"auto\"\n      /*\n      By default, the MultiSelect dropdown does not interact well with Modal's closeOnClickOutside:\n      When the MultiSelect's dropdown is opened and the user clicks outside of the dropdown to close it\n      (and outside the modal, i.e. clicks on the Modal's overlay), the Modal is undesirably also closed\n      from the same click.\n\n      Due to the sequencing of the events fired during a click on the overlay and when React\n      rerenders of various components occur, it is not possible to simply do something such as setting\n      closeOnClickOutside={!isDropdownOpened}:\n\n      * user begins a click on the overlay which triggers\n      * mousedown event on the overlay which triggers\n      * blur event on the MultiSelect's input element which invokes\n      * the MultiSelect.onDropdownClose callback which calls setIsDropdownOpen(false) which causes\n      * rerender of SearchFieldEditor with isDropdownOpen set to false\n      * the user ends the click which triggers\n      * click event on the Modal which activates the closeOnClickOutside logic\n      * since isDropdownOpen is false, closeOnClickOutside is true, so the Modal closes\n\n      Instead, emulate closeOnClickOutside's behavior only when the MultiSelect dropdown\n      was not open at the beginning of the click\n      */\n      withOverlay\n      closeOnClickOutside={false}\n      overlayProps={{\n        onMouseDownCapture: () => {\n          // capture whether the MultiSelect dropdown is open when a click on the overlay begins (i.e. mousedown)\n          wasDropdownOpen.current = isDropdownOpen;\n        },\n        onClick: () => {\n          if (!wasDropdownOpen.current) {\n            // invoke onCancel callback since the dropdown wasn't open at the start of the click on the overlay\n            props.onCancel();\n          }\n\n          // not strictly needed since onMouseDownCapture should always precede onClick, but reset the ref\n          wasDropdownOpen.current = false;\n        },\n        children: <div data-testid=\"overlay-child\" />, // can't specify testid on the overlay itself\n      }}\n    >\n      <Stack>\n        <MultiSelect\n          withinPortal={true}\n          style={{ width: 550 }}\n          placeholder=\"Select fields to display\"\n          data={allFields}\n          value={state.search.fields ?? []}\n          onChange={handleChange}\n          onDropdownOpen={() => setIsDropdownOpen(true)}\n          onDropdownClose={() => setIsDropdownOpen(false)}\n          /* shows at most ~6.5 items; the extra half to provide a hint that there are more entries to scroll through */\n          maxDropdownHeight={'250px'}\n          dropdownPosition=\"bottom\"\n          clearButtonProps={{ 'aria-label': 'Clear selection' }}\n          clearable\n          searchable\n        />\n        <Group position=\"right\">\n          <Button onClick={() => props.onOk(state.search)}>OK</Button>\n        </Group>\n      </Stack>\n    </Modal>\n  );\n}\n\n/**\n * Returns a list of fields/columns available for a type.\n * The result is the union of properties and search parameters.\n * @param typeSchema - The type definition.\n * @param searchParams - The search parameters.\n * @returns A list of fields/columns available for a resource type.\n */\nfunction getFieldsList(\n  typeSchema: InternalTypeSchema,\n  searchParams: Record<string, SearchParameter> | undefined\n): string[] {\n  const result = [] as string[];\n  const keys = new Set<string>();\n  const names = new Set<string>();\n\n  // Add properties first\n  for (const key of Object.keys(typeSchema.elements)) {\n    result.push(key);\n    keys.add(key.toLowerCase());\n    names.add(buildFieldNameString(key));\n  }\n\n  // Add search parameters if unique\n  if (searchParams) {\n    for (const code of Object.keys(searchParams)) {\n      const name = buildFieldNameString(code);\n      if (!keys.has(code) && !names.has(name)) {\n        result.push(code);\n        keys.add(code);\n        names.add(name);\n      }\n    }\n  }\n\n  return result;\n}\n", "import {\n  capitalize,\n  DEFAULT_SEARCH_COUNT,\n  evalFhirPathTyped,\n  Filter,\n  formatDateTime,\n  InternalSchemaElement,\n  Operator,\n  SearchRequest,\n} from '@medplum/core';\nimport { Resource, SearchParameter } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\nimport { SearchControlField } from './SearchControlField';\n\nconst searchParamToOperators: Record<string, Operator[]> = {\n  string: [Operator.EQUALS, Operator.NOT, Operator.CONTAINS, Operator.EXACT],\n  fulltext: [Operator.EQUALS, Operator.NOT, Operator.CONTAINS, Operator.EXACT],\n  token: [Operator.EQUALS, Operator.NOT],\n  reference: [Operator.EQUALS, Operator.NOT],\n  numeric: [\n    Operator.EQUALS,\n    Operator.NOT_EQUALS,\n    Operator.GREATER_THAN,\n    Operator.LESS_THAN,\n    Operator.GREATER_THAN_OR_EQUALS,\n    Operator.LESS_THAN_OR_EQUALS,\n  ],\n  quantity: [\n    Operator.EQUALS,\n    Operator.NOT_EQUALS,\n    Operator.GREATER_THAN,\n    Operator.LESS_THAN,\n    Operator.GREATER_THAN_OR_EQUALS,\n    Operator.LESS_THAN_OR_EQUALS,\n  ],\n  date: [\n    Operator.EQUALS,\n    Operator.NOT_EQUALS,\n    Operator.GREATER_THAN,\n    Operator.LESS_THAN,\n    Operator.GREATER_THAN_OR_EQUALS,\n    Operator.LESS_THAN_OR_EQUALS,\n    Operator.STARTS_AFTER,\n    Operator.ENDS_BEFORE,\n    Operator.APPROXIMATELY,\n  ],\n  datetime: [\n    Operator.EQUALS,\n    Operator.NOT_EQUALS,\n    Operator.GREATER_THAN,\n    Operator.LESS_THAN,\n    Operator.GREATER_THAN_OR_EQUALS,\n    Operator.LESS_THAN_OR_EQUALS,\n    Operator.STARTS_AFTER,\n    Operator.ENDS_BEFORE,\n    Operator.APPROXIMATELY,\n  ],\n};\n\nconst operatorNames: Record<Operator, string> = {\n  eq: 'equals',\n  ne: 'not equals',\n  gt: 'greater than',\n  lt: 'less than',\n  ge: 'greater than or equals',\n  le: 'less than or equals',\n  sa: 'starts after',\n  eb: 'ends before',\n  ap: 'approximately',\n  contains: 'contains',\n  exact: 'exact',\n  text: 'text',\n  not: 'not',\n  above: 'above',\n  below: 'below',\n  in: 'in',\n  'not-in': 'not in',\n  'of-type': 'of type',\n  missing: 'missing',\n  identifier: 'identifier',\n  iterate: 'iterate',\n};\n\n/**\n * Sets the array of filters.\n * @param definition - The original search request.\n * @param filters - The new filters.\n * @returns The updated search request.\n */\nexport function setFilters(definition: SearchRequest, filters: Filter[]): SearchRequest {\n  return {\n    ...definition,\n    filters: filters,\n    offset: 0,\n    name: undefined,\n  };\n}\n\n/**\n * Clears all of the filters.\n * @param definition - The original search request.\n * @returns The updated search request.\n */\nexport function clearFilters(definition: SearchRequest): SearchRequest {\n  return setFilters(definition, []);\n}\n\n/**\n * Clears all of the filters on a certain field.\n * @param definition - The original search request.\n * @param code - The field key name to clear filters.\n * @returns The updated search request.\n */\nexport function clearFiltersOnField(definition: SearchRequest, code: string): SearchRequest {\n  return setFilters(\n    definition,\n    (definition.filters ?? []).filter((f) => f.code !== code)\n  );\n}\n\n/**\n * Adds a filter.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param op - The operation key name.\n * @param value - The filter value.\n * @param opt_clear - Optional flag to clear filters on the field.\n * @returns The updated search request.\n */\nexport function addFilter(\n  definition: SearchRequest,\n  field: string,\n  op: Operator,\n  value?: string,\n  opt_clear?: boolean\n): SearchRequest {\n  if (opt_clear) {\n    definition = clearFiltersOnField(definition, field);\n  }\n\n  const nextFilters: Filter[] = [];\n  if (definition.filters) {\n    nextFilters.push(...definition.filters);\n  }\n  nextFilters.push({ code: field, operator: op, value: value ?? '' });\n\n  return setFilters(definition, nextFilters);\n}\n\n/**\n * Adds a field.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addField(definition: SearchRequest, field: string): SearchRequest {\n  if (definition.fields?.includes(field)) {\n    return definition;\n  }\n  const newFields = [];\n  if (definition.fields) {\n    newFields.push(...definition.fields);\n  }\n  newFields.push(field);\n  return {\n    ...definition,\n    fields: newFields,\n    name: undefined,\n  };\n}\n\n/**\n * Deletes a filter at the specified index.\n * @param definition - The original search request.\n * @param index - The filter index.\n * @returns The updated search request.\n */\nexport function deleteFilter(definition: SearchRequest, index: number): SearchRequest {\n  if (!definition.filters) {\n    return definition;\n  }\n  const newFilters = [...definition.filters];\n  newFilters.splice(index, 1);\n  return {\n    ...definition,\n    filters: newFilters,\n    name: undefined,\n  };\n}\n\n/**\n * Adds a filter that constrains the specified field to \"yesterday\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addYesterdayFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addDayFilter(definition, field, -1);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"today\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addTodayFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addDayFilter(definition, field, 0);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"tomorrow\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addTomorrowFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addDayFilter(definition, field, 1);\n}\n\n/**\n * Adds a filter that constrains the specified field to a day.\n * The day is specified as a delta from the current day.\n * \"Today\" would be 0.\n * \"Yesterday\" would be -1.\n * \"Tomorrow\" would be 1.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param delta - The number of days from this day.\n * @returns The updated search request.\n */\nfunction addDayFilter(definition: SearchRequest, field: string, delta: number): SearchRequest {\n  const startTime = new Date();\n  startTime.setDate(startTime.getDate() + delta);\n  startTime.setHours(0, 0, 0, 0);\n\n  const endTime = new Date(startTime.getTime());\n  endTime.setDate(endTime.getDate() + 1);\n  endTime.setTime(endTime.getTime() - 1);\n\n  return addDateFilterBetween(definition, field, startTime, endTime);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"last month\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addLastMonthFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addMonthFilter(definition, field, -1);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"this month\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addThisMonthFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addMonthFilter(definition, field, 0);\n}\n\n/**\n * Adds a filter that constrains the specified field to \"next month\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addNextMonthFilter(definition: SearchRequest, field: string): SearchRequest {\n  return addMonthFilter(definition, field, 1);\n}\n\n/**\n * Adds a filter that constrains the specified field to a month.\n * The month is specified as a delta from the current month.\n * \"This month\" would be 0.\n * \"Last month\" would be -1.\n * \"Next month\" would be 1.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param delta - The number of months from this month.\n * @returns The updated search request.\n */\nfunction addMonthFilter(definition: SearchRequest, field: string, delta: number): SearchRequest {\n  const startTime = new Date();\n  startTime.setMonth(startTime.getMonth() + delta);\n  startTime.setDate(1);\n  startTime.setHours(0, 0, 0, 0);\n\n  const endTime = new Date(startTime.getTime());\n  endTime.setMonth(endTime.getMonth() + 1);\n  endTime.setDate(1);\n  endTime.setHours(0, 0, 0, 0);\n  endTime.setTime(endTime.getTime() - 1);\n\n  return addDateFilterBetween(definition, field, startTime, endTime);\n}\n\n/**\n * Adds a filter that constrains the specified field to the year to date.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @returns The updated search request.\n */\nexport function addYearToDateFilter(definition: SearchRequest, field: string): SearchRequest {\n  const startTime = new Date();\n  startTime.setMonth(0);\n  startTime.setDate(1);\n  startTime.setHours(0, 0, 0, 0);\n\n  const endTime = new Date();\n\n  return addDateFilterBetween(definition, field, startTime, endTime);\n}\n\n/**\n * Adds a filter for a date between two dates (inclusive of both dates).\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param d1 - The start date.\n * @param d2 - The end date.\n * @returns The updated search request.\n */\nexport function addDateFilterBetween(definition: SearchRequest, field: string, d1: Date, d2: Date): SearchRequest {\n  definition = clearFiltersOnField(definition, field);\n  definition = addDateFilterImpl(definition, field, Operator.GREATER_THAN_OR_EQUALS, d1);\n  definition = addDateFilterImpl(definition, field, Operator.LESS_THAN_OR_EQUALS, d2);\n  return definition;\n}\n\n/**\n * Adds a filter for a date before a certain date/time.\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param op - The date/time operation.\n * @param value - The date.\n * @returns The updated search request.\n */\nfunction addDateFilterImpl(definition: SearchRequest, field: string, op: Operator, value: Date): SearchRequest {\n  return addFilter(definition, field, op, value.toISOString());\n}\n\n/**\n * Adds a filter that constrains the specified field to \"missing\".\n * @param definition - The original search request.\n * @param field - The field key name.\n * @param value - Optional boolean value. Default is true.\n * @returns The updated search request.\n */\nexport function addMissingFilter(definition: SearchRequest, field: string, value = true): SearchRequest {\n  return addFilter(definition, field, Operator.MISSING, value.toString());\n}\n\n/**\n * Sets the offset (starting at zero).\n * @param definition - The original search request.\n * @param offset - The offset number.\n * @returns The updated search request.\n */\nexport function setOffset(definition: SearchRequest, offset: number): SearchRequest {\n  if (definition.offset === offset) {\n    return definition;\n  }\n  return {\n    ...definition,\n    offset,\n    name: undefined,\n  };\n}\n\n/**\n * Creates a new search request with the search offset at the specified page.\n * @param definition - The search definition.\n * @param page - The new page number\n * @returns The new search definition.\n */\nexport function setPage(definition: SearchRequest, page: number): SearchRequest {\n  const count = definition.count ?? DEFAULT_SEARCH_COUNT;\n  const newOffset = (page - 1) * count;\n  return setOffset(definition, newOffset);\n}\n\n/**\n * Sorts the search by the specified key, and optional direction.\n * Direction defaults to ascending ('asc') if not specified.\n * @param definition - The original search request.\n * @param sort - The sort key.\n * @param desc - Optional descending flag. Default is false.\n * @returns The updated search request.\n */\nexport function setSort(definition: SearchRequest, sort: string, desc?: boolean): SearchRequest {\n  if (sort === getSortField(definition) && desc !== undefined && desc === isSortDescending(definition)) {\n    return definition;\n  }\n  return {\n    ...definition,\n    sortRules: [\n      {\n        code: sort,\n        descending: !!desc,\n      },\n    ],\n    name: undefined,\n  };\n}\n\n/**\n * Toggles the sort of the search by key.\n * If the search is already sorted by the key, reverses the direction.\n * If the search is not sorted by the key, sort in ascending order.\n * @param definition - The original search request.\n * @param key - The field key name.\n * @returns The updated search request.\n */\nexport function toggleSort(definition: SearchRequest, key: string): SearchRequest {\n  let desc = false;\n  if (getSortField(definition) === key) {\n    desc = !isSortDescending(definition);\n  }\n  return setSort(definition, key, desc);\n}\n\nexport function getSortField(definition: SearchRequest): string | undefined {\n  const sortRules = definition.sortRules;\n  if (!sortRules || sortRules.length === 0) {\n    return undefined;\n  }\n  const field = sortRules[0].code;\n  return field.startsWith('-') ? field.substr(1) : field;\n}\n\nexport function isSortDescending(definition: SearchRequest): boolean {\n  const sortRules = definition.sortRules;\n  if (!sortRules || sortRules.length === 0) {\n    return false;\n  }\n  return !!sortRules[0].descending;\n}\n\n/**\n * Returns a list of operators for a search parameter.\n * @param searchParam - The search parameter.\n * @returns The list of operators that can be used for the search parameter.\n */\nexport function getSearchOperators(searchParam: SearchParameter): Operator[] | undefined {\n  return searchParamToOperators[searchParam.type as string];\n}\n\n/**\n * Returns a string representing the operation.\n * @param op - The operation code.\n * @returns A display string for the operation.\n */\nexport function getOpString(op: Operator): string {\n  return operatorNames[op] ?? '';\n}\n\n/**\n * Returns a field display name.\n * @param key - The field key.\n * @returns The field display name.\n */\nexport function buildFieldNameString(key: string): string {\n  let tmp = key;\n\n  // If dot separated, only the last part\n  if (tmp.includes('.')) {\n    tmp = tmp.split('.').pop() as string;\n  }\n\n  // Special case for Version ID\n  if (tmp === 'versionId') {\n    return 'Version ID';\n  }\n\n  // Remove choice of type\n  tmp = tmp.replace('[x]', '');\n\n  // Convert camel case to space separated\n  tmp = tmp.replace(/([A-Z])/g, ' $1');\n\n  // Convert dashes and underscores to spaces\n  tmp = tmp.replace(/[-_]/g, ' ');\n\n  // Normalize whitespace to single space character\n  tmp = tmp.replace(/\\s+/g, ' ');\n\n  // Trim\n  tmp = tmp.trim();\n\n  // Special case for ID\n  if (tmp.toLowerCase() === 'id') {\n    return 'ID';\n  }\n\n  // Capitalize the first letter of each word\n  return tmp.split(/\\s/).map(capitalize).join(' ');\n}\n\n/**\n * Returns a fragment to be displayed in the search table for the value.\n * @param resource - The parent resource.\n * @param field - The search code or FHIRPath expression.\n * @returns The fragment to display.\n */\nexport function renderValue(resource: Resource, field: SearchControlField): string | JSX.Element | null | undefined {\n  const key = field.name;\n  if (key === 'id') {\n    return resource.id;\n  }\n\n  if (key === 'meta.versionId') {\n    return resource.meta?.versionId;\n  }\n\n  if (key === '_lastUpdated') {\n    return formatDateTime(resource.meta?.lastUpdated);\n  }\n\n  // Priority 1: InternalSchemaElement by exact match\n  if (field.elementDefinition && `${resource.resourceType}.${field.name}` === field.elementDefinition.path) {\n    return renderPropertyValue(resource, field.elementDefinition);\n  }\n\n  // Priority 2: SearchParameter by exact match\n  if (field.searchParams && field.searchParams.length === 1 && field.name === field.searchParams[0].code) {\n    return renderSearchParameterValue(resource, field.searchParams[0]);\n  }\n\n  // We don't know how to render this field definition\n  return null;\n}\n\n/**\n * Returns a fragment to be displayed in the search table for a resource property.\n * @param resource - The parent resource.\n * @param elementDefinition - The property element definition.\n * @returns A React element or null.\n */\nfunction renderPropertyValue(resource: Resource, elementDefinition: InternalSchemaElement): JSX.Element | null {\n  const path = elementDefinition.path?.split('.')?.pop()?.replaceAll('[x]', '') ?? '';\n  const [value, propertyType] = getValueAndType({ type: resource.resourceType, value: resource }, path);\n  if (!value) {\n    return null;\n  }\n\n  return (\n    <ResourcePropertyDisplay\n      property={elementDefinition}\n      propertyType={propertyType}\n      value={value}\n      maxWidth={200}\n      ignoreMissingValues={true}\n      link={false}\n    />\n  );\n}\n\n/**\n * Returns a fragment to be displayed in the search table for a search parameter.\n * @param resource - The parent resource.\n * @param searchParam - The search parameter.\n * @returns A React element or null.\n */\nfunction renderSearchParameterValue(resource: Resource, searchParam: SearchParameter): JSX.Element | null {\n  const value = evalFhirPathTyped(searchParam.expression as string, [{ type: resource.resourceType, value: resource }]);\n  if (!value || value.length === 0) {\n    return null;\n  }\n\n  return (\n    <>\n      {value.map((v, index) => (\n        <ResourcePropertyDisplay\n          key={`${index}-${value.length}`}\n          propertyType={v.type}\n          value={v.value}\n          maxWidth={200}\n          ignoreMissingValues={true}\n          link={false}\n        />\n      ))}\n    </>\n  );\n}\n", "import { Button, Group, Modal, NativeSelect } from '@mantine/core';\nimport { Filter, getSearchParameters, Operator, SearchRequest, stringify } from '@medplum/core';\nimport { SearchParameter } from '@medplum/fhirtypes';\nimport React, { useEffect, useRef, useState } from 'react';\nimport {\n  addFilter,\n  buildFieldNameString,\n  deleteFilter,\n  getOpString,\n  getSearchOperators,\n  setFilters,\n} from '../SearchControl/SearchUtils';\nimport { SearchFilterValueDisplay } from '../SearchFilterValueDisplay/SearchFilterValueDisplay';\nimport { SearchFilterValueInput } from '../SearchFilterValueInput/SearchFilterValueInput';\n\nexport interface SearchFilterEditorProps {\n  visible: boolean;\n  search: SearchRequest;\n  onOk: (search: SearchRequest) => void;\n  onCancel: () => void;\n}\n\nexport function SearchFilterEditor(props: SearchFilterEditorProps): JSX.Element | null {\n  const [search, setSearch] = useState<SearchRequest>(JSON.parse(stringify(props.search)) as SearchRequest);\n  const [editingIndex, setEditingIndex] = useState<number>(-1);\n\n  const searchRef = useRef<SearchRequest>(search);\n  searchRef.current = search;\n\n  useEffect(() => {\n    setSearch(JSON.parse(stringify(props.search)) as SearchRequest);\n  }, [props.search]);\n\n  function onAddFilter(filter: Filter): void {\n    setSearch(addFilter(searchRef.current, filter.code, filter.operator, filter.value));\n  }\n\n  if (!props.visible) {\n    return null;\n  }\n\n  const resourceType = props.search.resourceType;\n  const searchParams = getSearchParameters(resourceType) ?? {};\n  const filters = search.filters || [];\n\n  return (\n    <Modal\n      title=\"Filters\"\n      closeButtonProps={{ 'aria-label': 'Close' }}\n      size={900}\n      opened={props.visible}\n      onClose={props.onCancel}\n    >\n      <div>\n        <table>\n          <colgroup>\n            <col style={{ width: 200 }} />\n            <col style={{ width: 200 }} />\n            <col style={{ width: 380 }} />\n            <col style={{ width: 120 }} />\n          </colgroup>\n          <thead>\n            <tr>\n              <th>Field</th>\n              <th>Operation</th>\n              <th>Value</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filters.map((filter: Filter, index: number) => {\n              if (index === editingIndex) {\n                return (\n                  <FilterRowInput\n                    key={`filter-${filter.code}-${filter.operator}-${filter.value}-input`}\n                    resourceType={resourceType}\n                    searchParams={searchParams}\n                    defaultValue={filter}\n                    okText=\"Save\"\n                    onOk={(newFilter: Filter) => {\n                      const newFilters = [...filters];\n                      newFilters[index] = newFilter;\n                      setSearch(setFilters(searchRef.current, newFilters));\n                      setEditingIndex(-1);\n                    }}\n                    onCancel={() => setEditingIndex(-1)}\n                  />\n                );\n              } else {\n                return (\n                  <FilterRowDisplay\n                    key={`filter-${filter.code}-${filter.operator}-${filter.value}-display`}\n                    resourceType={resourceType}\n                    searchParams={searchParams}\n                    filter={filter}\n                    onEdit={() => setEditingIndex(index)}\n                    onDelete={() => setSearch(deleteFilter(searchRef.current, index))}\n                  />\n                );\n              }\n            })}\n            <FilterRowInput resourceType={resourceType} searchParams={searchParams} okText=\"Add\" onOk={onAddFilter} />\n          </tbody>\n        </table>\n      </div>\n      <Group position=\"right\" mt=\"xl\">\n        <Button onClick={() => props.onOk(searchRef.current)}>OK</Button>\n      </Group>\n    </Modal>\n  );\n}\n\ninterface FilterRowDisplayProps {\n  readonly searchParams: Record<string, SearchParameter>;\n  readonly resourceType: string;\n  readonly filter: Filter;\n  readonly onEdit: () => void;\n  readonly onDelete: () => void;\n}\n\nfunction FilterRowDisplay(props: FilterRowDisplayProps): JSX.Element | null {\n  const { filter } = props;\n  return (\n    <tr>\n      <td>{buildFieldNameString(filter.code)}</td>\n      <td>{getOpString(filter.operator)}</td>\n      <td>\n        <SearchFilterValueDisplay resourceType={props.resourceType} filter={filter} />\n      </td>\n      <td>\n        <Button compact variant=\"outline\" onClick={props.onEdit}>\n          Edit\n        </Button>\n        <Button compact variant=\"outline\" onClick={props.onDelete}>\n          Delete\n        </Button>\n      </td>\n    </tr>\n  );\n}\n\ninterface FilterRowInputProps {\n  resourceType: string;\n  searchParams: Record<string, SearchParameter>;\n  defaultValue?: Filter;\n  okText: string;\n  onOk: (value: Filter) => void;\n  onCancel?: () => void;\n}\n\nfunction FilterRowInput(props: FilterRowInputProps): JSX.Element {\n  const [value, setValue] = useState<Filter>(props.defaultValue ?? ({} as Filter));\n  const valueRef = useRef<Filter>(value);\n  valueRef.current = value;\n\n  function setFilterCode(newCode: string): void {\n    setValue({ ...valueRef.current, code: newCode });\n  }\n\n  function setFilterOperator(newOperator: Operator): void {\n    setValue({ ...valueRef.current, operator: newOperator });\n  }\n\n  function setFilterValue(newFilterValue: string): void {\n    setValue({ ...valueRef.current, value: newFilterValue });\n  }\n\n  const searchParam = props.searchParams[value.code];\n  const operators = searchParam && getSearchOperators(searchParam);\n\n  return (\n    <tr>\n      <td>\n        <NativeSelect\n          data-testid=\"filter-field\"\n          defaultValue={valueRef.current.code}\n          onChange={(e) => setFilterCode(e.currentTarget.value)}\n          data={[\n            '',\n            ...Object.keys(props.searchParams).map((param) => ({ value: param, label: buildFieldNameString(param) })),\n          ]}\n        />\n      </td>\n      <td>\n        {operators && (\n          <NativeSelect\n            data-testid=\"filter-operation\"\n            defaultValue={value.operator}\n            onChange={(e) => setFilterOperator(e.currentTarget.value as Operator)}\n            data={['', ...operators.map((op) => ({ value: op, label: getOpString(op) }))]}\n          />\n        )}\n      </td>\n      <td>\n        {searchParam && value.operator && (\n          <SearchFilterValueInput\n            resourceType={props.resourceType}\n            searchParam={searchParam}\n            defaultValue={value.value}\n            onChange={setFilterValue}\n          />\n        )}\n      </td>\n      <td>\n        {value.code && value.operator && (\n          <Button\n            compact\n            variant=\"outline\"\n            onClick={() => {\n              props.onOk(valueRef.current);\n              setValue({} as Filter);\n            }}\n          >\n            {props.okText}\n          </Button>\n        )}\n        {props.onCancel && (\n          <Button compact variant=\"outline\" onClick={props.onCancel}>\n            Cancel\n          </Button>\n        )}\n      </td>\n    </tr>\n  );\n}\n", "import {\n  Filter,\n  formatDateTime,\n  getSearchParameterDetails,\n  globalSchema,\n  Operator,\n  SearchParameterType,\n} from '@medplum/core';\nimport React from 'react';\nimport { ResourceName } from '../ResourceName/ResourceName';\n\nexport interface SearchFilterValueDisplayProps {\n  readonly resourceType: string;\n  readonly filter: Filter;\n}\n\nexport function SearchFilterValueDisplay(props: SearchFilterValueDisplayProps): JSX.Element {\n  const { resourceType, filter } = props;\n\n  const searchParam = globalSchema.types[resourceType].searchParams?.[filter.code];\n  if (searchParam) {\n    if (\n      searchParam.type === 'reference' &&\n      (filter.operator === Operator.EQUALS || filter.operator === Operator.NOT_EQUALS)\n    ) {\n      return <ResourceName value={{ reference: filter.value }} />;\n    }\n\n    const searchParamDetails = getSearchParameterDetails(resourceType, searchParam);\n    if (filter.code === '_lastUpdated' || searchParamDetails.type === SearchParameterType.DATETIME) {\n      return <>{formatDateTime(filter.value)}</>;\n    }\n  }\n\n  return <>{filter.value}</>;\n}\n", "import { Checkbox, TextInput } from '@mantine/core';\nimport { getSearchParameterDetails, SearchParameterType } from '@medplum/core';\nimport { Quantity, Reference, SearchParameter } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { DateTimeInput } from '../DateTimeInput/DateTimeInput';\nimport { QuantityInput } from '../QuantityInput/QuantityInput';\nimport { ReferenceInput } from '../ReferenceInput/ReferenceInput';\n\nexport interface SearchFilterValueInputProps {\n  resourceType: string;\n  searchParam: SearchParameter;\n  defaultValue?: string;\n  autoFocus?: boolean;\n  onChange: (value: string) => void;\n}\n\nexport function SearchFilterValueInput(props: SearchFilterValueInputProps): JSX.Element | null {\n  const details = getSearchParameterDetails(props.resourceType, props.searchParam);\n  const name = 'filter-value';\n\n  switch (details.type) {\n    case SearchParameterType.REFERENCE:\n      return (\n        <ReferenceInput\n          name={name}\n          defaultValue={props.defaultValue ? { reference: props.defaultValue } : undefined}\n          targetTypes={props.searchParam.target}\n          autoFocus={props.autoFocus}\n          onChange={(newReference: Reference | undefined) => {\n            if (newReference) {\n              props.onChange(newReference.reference as string);\n            } else {\n              props.onChange('');\n            }\n          }}\n        />\n      );\n\n    case SearchParameterType.BOOLEAN:\n      return (\n        <Checkbox\n          name={name}\n          data-autofocus={props.autoFocus}\n          data-testid={name}\n          defaultChecked={props.defaultValue === 'true'}\n          autoFocus={props.autoFocus}\n          onChange={(e) => props.onChange(e.currentTarget.checked.toString())}\n        />\n      );\n\n    case SearchParameterType.DATE:\n      return (\n        <TextInput\n          type=\"date\"\n          name={name}\n          data-autofocus={props.autoFocus}\n          data-testid={name}\n          defaultValue={props.defaultValue}\n          autoFocus={props.autoFocus}\n          onChange={(e) => props.onChange(e.currentTarget.value)}\n        />\n      );\n\n    case SearchParameterType.DATETIME:\n      return (\n        <DateTimeInput\n          name={name}\n          defaultValue={props.defaultValue}\n          autoFocus={props.autoFocus}\n          onChange={props.onChange}\n        />\n      );\n\n    case SearchParameterType.NUMBER:\n      return (\n        <TextInput\n          type=\"number\"\n          name={name}\n          data-autofocus={props.autoFocus}\n          data-testid={name}\n          defaultValue={props.defaultValue}\n          autoFocus={props.autoFocus}\n          onChange={(e) => props.onChange(e.currentTarget.value)}\n        />\n      );\n\n    case SearchParameterType.QUANTITY:\n      return (\n        <QuantityInput\n          name={name}\n          defaultValue={tryParseQuantity(props.defaultValue)}\n          autoFocus={props.autoFocus}\n          onChange={(newQuantity: Quantity | undefined) => {\n            if (newQuantity) {\n              props.onChange(`${newQuantity.value}`);\n            } else {\n              props.onChange('');\n            }\n          }}\n        />\n      );\n\n    default:\n      return (\n        <TextInput\n          name={name}\n          data-autofocus={props.autoFocus}\n          data-testid={name}\n          defaultValue={props.defaultValue}\n          autoFocus={props.autoFocus}\n          onChange={(e) => props.onChange(e.currentTarget.value)}\n          placeholder=\"Search value\"\n        />\n      );\n  }\n}\n\nfunction tryParseQuantity(value: string | undefined): Quantity | undefined {\n  if (value) {\n    const [valueString, systemString, unitString] = value.split('|');\n    if (valueString) {\n      return {\n        value: parseFloat(valueString),\n        system: systemString,\n        unit: unitString,\n      };\n    }\n  }\n  return undefined;\n}\n", "import { Button, Grid, Modal } from '@mantine/core';\nimport { Filter } from '@medplum/core';\nimport { SearchParameter } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { SearchFilterValueInput } from '../SearchFilterValueInput/SearchFilterValueInput';\n\nexport interface SearchFilterValueDialogProps {\n  title: string;\n  visible: boolean;\n  resourceType: string;\n  searchParam?: SearchParameter;\n  filter?: Filter;\n  defaultValue?: string;\n  onOk: (filter: Filter) => void;\n  onCancel: () => void;\n}\n\nexport function SearchFilterValueDialog(props: SearchFilterValueDialogProps): JSX.Element | null {\n  const [value, setValue] = useState<string>(props.defaultValue ?? '');\n\n  if (!props.visible || !props.searchParam || !props.filter) {\n    return null;\n  }\n\n  function onOk(): void {\n    props.onOk({ ...(props.filter as Filter), value });\n  }\n\n  return (\n    <Modal title={props.title} size=\"xl\" opened={props.visible} onClose={props.onCancel}>\n      <Form onSubmit={onOk}>\n        <Grid>\n          <Grid.Col span={10}>\n            <SearchFilterValueInput\n              resourceType={props.resourceType}\n              searchParam={props.searchParam}\n              defaultValue={value}\n              autoFocus={true}\n              onChange={setValue}\n            />\n          </Grid.Col>\n          <Grid.Col span={2}>\n            <Button onClick={onOk} fullWidth>\n              OK\n            </Button>\n          </Grid.Col>\n        </Grid>\n      </Form>\n    </Modal>\n  );\n}\n", "import { Menu } from '@mantine/core';\nimport { Filter, Operator, SearchRequest } from '@medplum/core';\nimport { SearchParameter } from '@medplum/fhirtypes';\nimport {\n  IconBleach,\n  IconBleachOff,\n  IconBracketsContain,\n  IconBucket,\n  IconBucketOff,\n  IconCalendar,\n  IconEqual,\n  IconEqualNot,\n  IconMathGreater,\n  IconMathLower,\n  IconSettings,\n  IconSortAscending,\n  IconSortDescending,\n  IconX,\n} from '@tabler/icons-react';\nimport React from 'react';\nimport {\n  addLastMonthFilter,\n  addMissingFilter,\n  addNextMonthFilter,\n  addThisMonthFilter,\n  addTodayFilter,\n  addTomorrowFilter,\n  addYearToDateFilter,\n  addYesterdayFilter,\n  buildFieldNameString,\n  clearFiltersOnField,\n  setSort,\n} from '../SearchControl/SearchUtils';\n\nexport interface SearchPopupMenuProps {\n  search: SearchRequest;\n  searchParams?: SearchParameter[];\n  onPrompt: (searchParam: SearchParameter, filter: Filter) => void;\n  onChange: (definition: SearchRequest) => void;\n}\n\nexport function SearchPopupMenu(props: SearchPopupMenuProps): JSX.Element | null {\n  if (!props.searchParams) {\n    return null;\n  }\n\n  function onSort(searchParam: SearchParameter, desc: boolean): void {\n    onChange(setSort(props.search, searchParam.code as string, desc));\n  }\n\n  function onClear(searchParam: SearchParameter): void {\n    onChange(clearFiltersOnField(props.search, searchParam.code as string));\n  }\n\n  function onPrompt(searchParam: SearchParameter, operator: Operator): void {\n    props.onPrompt(searchParam, { code: searchParam.code as string, operator, value: '' });\n  }\n\n  function onChange(definition: SearchRequest): void {\n    props.onChange(definition);\n  }\n\n  // If there is only one search parameter, then show it directly\n  if (props.searchParams.length === 1) {\n    return (\n      <SearchParameterSubMenu\n        search={props.search}\n        searchParam={props.searchParams[0]}\n        onSort={onSort}\n        onPrompt={onPrompt}\n        onChange={onChange}\n        onClear={onClear}\n      />\n    );\n  }\n\n  // Otherwise, show a menu, with each search parameter as a sub menu\n  return (\n    <Menu.Dropdown>\n      {props.searchParams.map((searchParam) => (\n        <Menu.Item key={searchParam.code}>{buildFieldNameString(searchParam.code as string)}</Menu.Item>\n      ))}\n    </Menu.Dropdown>\n  );\n}\n\ninterface SearchPopupSubMenuProps {\n  search: SearchRequest;\n  searchParam: SearchParameter;\n  onSort: (searchParam: SearchParameter, descending: boolean) => void;\n  onPrompt: (searchParam: SearchParameter, operator: Operator) => void;\n  onChange: (search: SearchRequest) => void;\n  onClear: (searchParam: SearchParameter) => void;\n}\n\nfunction SearchParameterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  switch (props.searchParam.type) {\n    case 'date':\n      return <DateFilterSubMenu {...props} />;\n    case 'number':\n    case 'quantity':\n      return <NumericFilterSubMenu {...props} />;\n    case 'reference':\n      return <ReferenceFilterSubMenu {...props} />;\n    case 'string':\n    case 'token':\n    case 'uri':\n      return <TextFilterSubMenu {...props} />;\n    default:\n      return <>Unknown search param type: {props.searchParam.type}</>;\n  }\n}\n\nfunction DateFilterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  const code = searchParam.code as string;\n  return (\n    <Menu.Dropdown>\n      <Menu.Item icon={<IconSortAscending size={14} />} onClick={() => props.onSort(searchParam, false)}>\n        Sort Oldest to Newest\n      </Menu.Item>\n      <Menu.Item icon={<IconSortDescending size={14} />} onClick={() => props.onSort(searchParam, true)}>\n        Sort Newest to Oldest\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item icon={<IconEqual size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Equals...\n      </Menu.Item>\n      <Menu.Item icon={<IconEqualNot size={14} />} onClick={() => props.onPrompt(searchParam, Operator.NOT_EQUALS)}>\n        Does not equal...\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item icon={<IconMathLower size={14} />} onClick={() => props.onPrompt(searchParam, Operator.ENDS_BEFORE)}>\n        Before...\n      </Menu.Item>\n      <Menu.Item\n        icon={<IconMathGreater size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.STARTS_AFTER)}\n      >\n        After...\n      </Menu.Item>\n      <Menu.Item icon={<IconBracketsContain size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Between...\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        icon={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addTomorrowFilter(props.search, code))}\n      >\n        Tomorrow\n      </Menu.Item>\n      <Menu.Item icon={<IconCalendar size={14} />} onClick={() => props.onChange(addTodayFilter(props.search, code))}>\n        Today\n      </Menu.Item>\n      <Menu.Item\n        icon={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addYesterdayFilter(props.search, code))}\n      >\n        Yesterday\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        icon={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addNextMonthFilter(props.search, code))}\n      >\n        Next Month\n      </Menu.Item>\n      <Menu.Item\n        icon={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addThisMonthFilter(props.search, code))}\n      >\n        This Month\n      </Menu.Item>\n      <Menu.Item\n        icon={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addLastMonthFilter(props.search, code))}\n      >\n        Last Month\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        icon={<IconCalendar size={14} />}\n        onClick={() => props.onChange(addYearToDateFilter(props.search, code))}\n      >\n        Year to date\n      </Menu.Item>\n      <CommonMenuItems {...props} />\n    </Menu.Dropdown>\n  );\n}\n\nfunction NumericFilterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  return (\n    <Menu.Dropdown>\n      <Menu.Item icon={<IconSortAscending size={14} />} onClick={() => props.onSort(searchParam, false)}>\n        Sort Smallest to Largest\n      </Menu.Item>\n      <Menu.Item icon={<IconSortDescending size={14} />} onClick={() => props.onSort(searchParam, true)}>\n        Sort Largest to Smallest\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item icon={<IconEqual size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Equals...\n      </Menu.Item>\n      <Menu.Item icon={<IconEqualNot size={14} />} onClick={() => props.onPrompt(searchParam, Operator.NOT_EQUALS)}>\n        Does not equal...\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        icon={<IconMathGreater size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.GREATER_THAN)}\n      >\n        Greater than...\n      </Menu.Item>\n      <Menu.Item\n        icon={<IconSettings size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.GREATER_THAN_OR_EQUALS)}\n      >\n        Greater than or equal to...\n      </Menu.Item>\n      <Menu.Item icon={<IconMathLower size={14} />} onClick={() => props.onPrompt(searchParam, Operator.LESS_THAN)}>\n        Less than...\n      </Menu.Item>\n      <Menu.Item\n        icon={<IconSettings size={14} />}\n        onClick={() => props.onPrompt(searchParam, Operator.LESS_THAN_OR_EQUALS)}\n      >\n        Less than or equal to...\n      </Menu.Item>\n      <CommonMenuItems {...props} />\n    </Menu.Dropdown>\n  );\n}\n\nfunction ReferenceFilterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  return (\n    <Menu.Dropdown>\n      <Menu.Item icon={<IconEqual size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Equals...\n      </Menu.Item>\n      <Menu.Item icon={<IconEqualNot size={14} />} onClick={() => props.onPrompt(searchParam, Operator.NOT)}>\n        Does not equal...\n      </Menu.Item>\n      <CommonMenuItems {...props} />\n    </Menu.Dropdown>\n  );\n}\n\nfunction TextFilterSubMenu(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  return (\n    <Menu.Dropdown>\n      <Menu.Item icon={<IconSortAscending size={14} />} onClick={() => props.onSort(searchParam, false)}>\n        Sort A to Z\n      </Menu.Item>\n      <Menu.Item icon={<IconSortDescending size={14} />} onClick={() => props.onSort(searchParam, true)}>\n        Sort Z to A\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item icon={<IconEqual size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Equals...\n      </Menu.Item>\n      <Menu.Item icon={<IconEqualNot size={14} />} onClick={() => props.onPrompt(searchParam, Operator.NOT)}>\n        Does not equal...\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item icon={<IconBucket size={14} />} onClick={() => props.onPrompt(searchParam, Operator.CONTAINS)}>\n        Contains...\n      </Menu.Item>\n      <Menu.Item icon={<IconBucketOff size={14} />} onClick={() => props.onPrompt(searchParam, Operator.EQUALS)}>\n        Does not contain...\n      </Menu.Item>\n      <CommonMenuItems {...props} />\n    </Menu.Dropdown>\n  );\n}\n\nfunction CommonMenuItems(props: SearchPopupSubMenuProps): JSX.Element {\n  const { searchParam } = props;\n  const code = searchParam.code as string;\n  return (\n    <>\n      <Menu.Divider />\n      <Menu.Item icon={<IconBleach size={14} />} onClick={() => props.onChange(addMissingFilter(props.search, code))}>\n        Missing\n      </Menu.Item>\n      <Menu.Item\n        icon={<IconBleachOff size={14} />}\n        onClick={() => props.onChange(addMissingFilter(props.search, code, false))}\n      >\n        Not missing\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item icon={<IconX size={14} />} onClick={() => props.onClear(searchParam)}>\n        Clear filters\n      </Menu.Item>\n    </>\n  );\n}\n", "import {\n  getElementDefinition,\n  getSearchParameter,\n  getSearchParameterDetails,\n  getSearchParameters,\n  InternalSchemaElement,\n  SearchRequest,\n} from '@medplum/core';\nimport { ResourceType, SearchParameter } from '@medplum/fhirtypes';\n\n/**\n * The SearchControlField type describes a field in the search control.\n *\n * In a SearchRequest, a field is a simple string. Strings can be one of the following:\n * 1) Simple property names, which refer to InternalSchemaElement objects\n * 2) Search parameter names, which refer to SearchParameter resources\n *\n * Consider a few examples of how this becomes complicated.\n *\n * \"name\" (easy)\n *  - element definition path=\"Patient.name\"\n *  - search parameter code=\"name\"\n *\n * \"birthDate\" (medium)\n *  - refers to the element definition path=\"Patient.birthDate\"\n *  - refers to the search parameter code=\"birthdate\" (note the capitalization)\n *\n * \"email\" (hard)\n *  - refers to the search parameter code=\"email\"\n *  - refers to the element definition path=\"Patient.telecom\"\n *\n * In the last case, we start with the search parameter, and walk backwards to the\n * element definition in order to get type details for rendering.\n *\n * Overall, we want columns, fields, properties, and search parameters to feel seamless,\n * so we try our darndest to make this work.\n */\nexport interface SearchControlField {\n  readonly name: string;\n  readonly elementDefinition?: InternalSchemaElement;\n  readonly searchParams?: SearchParameter[];\n}\n\n/**\n * Returns the collection of field definitions for the search request.\n * @param search - The search request definition.\n * @returns An array of field definitions.\n */\nexport function getFieldDefinitions(search: SearchRequest): SearchControlField[] {\n  const resourceType = search.resourceType;\n  const fields = [] as SearchControlField[];\n\n  for (const name of search.fields || ['id', '_lastUpdated']) {\n    fields.push(getFieldDefinition(resourceType, name));\n  }\n  return fields;\n}\n\n/**\n * Return the field definition for a given field name.\n * Field names can be either property names or search parameter codes.\n * @param resourceType - The resource type.\n * @param name - The search field name (either property name or search parameter code).\n * @returns The field definition.\n */\nfunction getFieldDefinition(resourceType: string, name: string): SearchControlField {\n  if (name === '_lastUpdated') {\n    return {\n      name: '_lastUpdated',\n      searchParams: [\n        {\n          resourceType: 'SearchParameter',\n          base: ['Resource' as ResourceType],\n          code: '_lastUpdated',\n          name: '_lastUpdated',\n          type: 'date',\n          expression: 'Resource.meta.lastUpdated',\n        },\n      ],\n    };\n  }\n\n  if (name === 'meta.versionId') {\n    return {\n      name: 'meta.versionId',\n      searchParams: [\n        {\n          resourceType: 'SearchParameter',\n          base: ['Resource' as ResourceType],\n          code: '_versionId',\n          name: '_versionId',\n          type: 'token',\n          expression: 'Resource.meta.versionId',\n        },\n      ],\n    };\n  }\n\n  const exactElementDefinition = getElementDefinition(resourceType, name);\n  const exactSearchParam = getSearchParameter(resourceType, name.toLowerCase());\n\n  // Best case: Exact match of element definition or search parameter.\n  // Examples: ServiceRequest.subject, Patient.name, Patient.birthDate\n  // In this case, we only show the one search parameter.\n  if (exactElementDefinition && exactSearchParam) {\n    return { name, elementDefinition: exactElementDefinition, searchParams: [exactSearchParam] };\n  }\n\n  // Next best case: Exact match of element definition\n  // Examples: Observation.value\n  // In this case, there could be zero or more search parameters that are a function of the element definition.\n  // So search for those search parameters.\n  if (exactElementDefinition) {\n    const allSearchParams = getSearchParameters(resourceType);\n    let searchParams: SearchParameter[] | undefined = undefined;\n    if (allSearchParams) {\n      // To avoid matching names that happen to be prefixes of other names, e.g. id and identifier,\n      // match ${resourceType}.${name} followed by a non-name character OR the end of the string\n      // Name characters include letters, numbers, underscores, and hyphens\n      const pathRegex = new RegExp(`${resourceType}\\\\.${name.replaceAll('[x]', '')}([^\\\\w-]|$)`);\n\n      searchParams = Object.values(allSearchParams).filter((p) => !!p.expression && pathRegex.test(p?.expression));\n      if (searchParams.length === 0) {\n        searchParams = undefined;\n      }\n    }\n    return { name, elementDefinition: exactElementDefinition, searchParams };\n  }\n\n  // Search parameter case: Exact match of search parameter\n  // Examples: Observation.value-quantity, Patient.email\n  // Here we have a search parameter, but no element definition.\n  // Observation.value-quantity is a search parameter for the Observation.value element.\n  // Patient.email is a search parameter for the Patient.telecom element.\n  // So we need to walk backwards to find the element definition.\n  if (exactSearchParam) {\n    const details = getSearchParameterDetails(resourceType, exactSearchParam);\n    return { name, elementDefinition: details.elementDefinitions?.[0], searchParams: [exactSearchParam] };\n  }\n\n  // Worst case: no element definition and no search parameter.\n  // This is probably a malformed URL that includes an unknown field.\n  // We will render the column header, but all cells will be empty.\n  return { name };\n}\n", "import React from 'react';\n\nexport interface LogoProps {\n  size: number;\n  fill?: string;\n}\n\nexport function Logo(props: LogoProps): JSX.Element {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 491 491\" style={{ width: props.size, height: props.size }}>\n      <title>Medplum Logo</title>\n      <path fill={props.fill ?? '#ad7136'} d=\"M282 67c6-16 16-29 29-40L289 0c-22 17-37 41-43 68l17 23 19-24z\" />\n      <path\n        fill={props.fill ?? '#946af9'}\n        d=\"M311 63c-17 0-33 4-48 11-16-7-32-11-49-11-87 0-158 96-158 214s71 214 158 214c17 0 33-4 49-11 15 7 31 11 48 11 87 0 158-96 158-214S398 63 311 63z\"\n      />\n      <path\n        fill={props.fill ?? '#7857c5'}\n        d=\"M231 489l-17 2c-87 0-158-96-158-214S127 63 214 63l17 1c-39 12-70 102-70 213s31 201 70 212z\"\n      />\n      <path\n        fill={props.fill ?? '#40bc26'}\n        d=\"M207 220a176 176 0 01-177 43A176 176 0 01251 43l1 5c17 59 2 125-45 172z\"\n      />\n      <path fill={props.fill ?? '#33961e'} d=\"M252 48A421 421 0 0057 270l-27-7A176 176 0 01251 43l1 5z\" />\n    </svg>\n  );\n}\n", "import { Box, SimpleGrid } from '@mantine/core';\nimport { MeasureReport, MeasureReportGroup, Reference } from '@medplum/fhirtypes';\nimport { useResource, useSearchOne } from '@medplum/react-hooks';\nimport React from 'react';\nimport { MeasureReportGroupDisplay, MeasureTitle } from './MeasureReportGroupDisplay/MeasureReportGroupDisplay';\n\nexport interface MeasureReportDisplayProps {\n  readonly measureReport: MeasureReport | Reference<MeasureReport>;\n}\n\nexport function MeasureReportDisplay(props: MeasureReportDisplayProps): JSX.Element | null {\n  const report = useResource(props.measureReport);\n  const [measure] = useSearchOne('Measure', { url: report?.measure });\n\n  if (!report) {\n    return null;\n  }\n\n  return (\n    <Box>\n      {measure && <MeasureTitle measure={measure} />}\n      <SimpleGrid\n        cols={3}\n        breakpoints={[\n          { maxWidth: '48rem', cols: 2, spacing: 'md' },\n          { maxWidth: '36rem', cols: 1, spacing: 'sm' },\n        ]}\n        spacing={'md'}\n      >\n        {report.group?.map((group: MeasureReportGroup, idx: number) => (\n          <MeasureReportGroupDisplay key={group.id ?? idx} group={group} />\n        ))}\n      </SimpleGrid>\n    </Box>\n  );\n}\n", "import { Box, Flex, Group, Paper, RingProgress, Text, Title } from '@mantine/core';\nimport { formatCodeableConcept } from '@medplum/core';\nimport { Measure, MeasureReportGroup } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { QuantityDisplay } from '../../QuantityDisplay/QuantityDisplay';\n\ninterface MeasureReportGroupDisplayProps {\n  readonly group: MeasureReportGroup;\n}\n\ninterface MeasureProps {\n  readonly measure: Measure;\n}\n\nexport function MeasureReportGroupDisplay(props: MeasureReportGroupDisplayProps): JSX.Element | null {\n  const { group } = props;\n  return (\n    <Paper withBorder radius=\"md\" p=\"xs\" display=\"flex\" sx={{ alignItems: 'center', justifyContent: 'center' }}>\n      <Group>\n        {group.measureScore && <MeasureScore group={group} />}\n        {!group.measureScore && <MeasureReportPopulation group={group} />}\n      </Group>\n    </Paper>\n  );\n}\n\nexport function MeasureTitle(props: MeasureProps): JSX.Element {\n  const { measure } = props;\n  return (\n    <>\n      <Text fz=\"md\" fw={500} mb={8}>\n        {measure.title}\n      </Text>\n      <Text fz=\"xs\" c=\"dimmed\" mb={8}>\n        {measure.subtitle}\n      </Text>\n    </>\n  );\n}\n\nfunction MeasureReportPopulation(props: MeasureReportGroupDisplayProps): JSX.Element {\n  const { group } = props;\n  const populations = group.population;\n  const numerator = populations?.find((p: any) => formatCodeableConcept(p.code) === 'numerator');\n  const denominator = populations?.find((p: any) => formatCodeableConcept(p.code) === 'denominator');\n\n  const numeratorCount = numerator?.count;\n  const denominatorCount = denominator?.count;\n\n  if (denominatorCount === 0) {\n    return (\n      <Box>\n        <Title order={3}>Not Applicable</Title>\n        <Text>{`Denominator: ${denominatorCount}`}</Text>\n      </Box>\n    );\n  }\n\n  if (numeratorCount === undefined || denominatorCount === undefined) {\n    return (\n      <Box>\n        <Title order={3}>Insufficient Data</Title>\n        <Text>{`Numerator: ${numeratorCount}`}</Text>\n        <Text>{`Denominator: ${denominatorCount}`}</Text>\n      </Box>\n    );\n  }\n\n  const value = (numeratorCount / denominatorCount) * 100;\n  return (\n    <RingProgress\n      size={120}\n      thickness={12}\n      roundCaps\n      sections={[{ value: value, color: groupColor(value) }]}\n      label={\n        <Flex justify=\"center\">\n          <Text fw={700} fz={18}>\n            {numeratorCount} / {denominatorCount}\n          </Text>\n        </Flex>\n      }\n    />\n  );\n}\n\nfunction MeasureScore(props: MeasureReportGroupDisplayProps): JSX.Element {\n  const { group } = props;\n  const unit = group.measureScore?.unit ?? group.measureScore?.code;\n\n  return (\n    <>\n      {unit === '%' ? (\n        <RingProgress\n          size={120}\n          thickness={12}\n          roundCaps\n          sections={[{ value: groupValue(group), color: groupColor(group?.measureScore?.value ?? 0) }]}\n          label={\n            <Flex justify=\"center\">\n              <Text fw={700} fz={18}>\n                <QuantityDisplay value={group.measureScore} />\n              </Text>\n            </Flex>\n          }\n        />\n      ) : (\n        <Flex h={120} align=\"center\">\n          <Title order={3}>\n            <QuantityDisplay value={group.measureScore} />\n          </Title>\n        </Flex>\n      )}\n    </>\n  );\n}\n\nfunction groupValue(group: MeasureReportGroup): number {\n  const score = group.measureScore?.value;\n  const unit = group.measureScore?.unit;\n  if (!score) {\n    return 0;\n  }\n  if (score <= 1 && unit === '%') {\n    return score * 100;\n  }\n  return score;\n}\n\nfunction groupColor(score: number): string {\n  if (score <= 33) {\n    return 'red';\n  }\n  if (score <= 67) {\n    return 'yellow';\n  }\n  return 'green';\n}\n", "import { Alert } from '@mantine/core';\nimport { operationOutcomeIssueToString } from '@medplum/core';\nimport { OperationOutcome, OperationOutcomeIssue } from '@medplum/fhirtypes';\nimport { IconAlertCircle } from '@tabler/icons-react';\nimport React from 'react';\n\nexport interface OperationOutcomeAlertProps {\n  outcome?: OperationOutcome;\n  issues?: OperationOutcomeIssue[];\n}\n\nexport function OperationOutcomeAlert(props: OperationOutcomeAlertProps): JSX.Element | null {\n  const issues = props.outcome?.issue || props.issues;\n  if (!issues || issues.length === 0) {\n    return null;\n  }\n  return (\n    <Alert icon={<IconAlertCircle size={16} />} color=\"red\">\n      {issues.map((issue) => (\n        <div data-testid=\"text-field-error\" key={issue.details?.text}>\n          {operationOutcomeIssueToString(issue)}\n        </div>\n      ))}\n    </Alert>\n  );\n}\n", "import { createReference, MedplumClient, ProfileResource } from '@medplum/core';\nimport { Attachment, Patient, Reference, ResourceType } from '@medplum/fhirtypes';\nimport React, { useCallback } from 'react';\nimport { ResourceTimeline } from '../ResourceTimeline/ResourceTimeline';\n\nexport interface PatientTimelineProps {\n  patient: Patient | Reference<Patient>;\n}\n\nexport function PatientTimeline(props: PatientTimelineProps): JSX.Element {\n  const loadTimelineResources = useCallback((medplum: MedplumClient, resourceType: ResourceType, id: string) => {\n    const ref = `${resourceType}/${id}`;\n    const _count = 100;\n    return Promise.allSettled([\n      medplum.readHistory('Patient', id),\n      medplum.search('Communication', { subject: ref, _count }),\n      medplum.search('Device', { patient: ref, _count }),\n      medplum.search('DeviceRequest', { patient: ref, _count }),\n      medplum.search('DiagnosticReport', { subject: ref, _count }),\n      medplum.search('Media', { subject: ref, _count }),\n      medplum.search('ServiceRequest', { subject: ref, _count }),\n      medplum.search('Task', { subject: ref, _count }),\n    ]);\n  }, []);\n\n  return (\n    <ResourceTimeline\n      value={props.patient}\n      loadTimelineResources={loadTimelineResources}\n      createCommunication={(resource: Patient, sender: ProfileResource, text: string) => ({\n        resourceType: 'Communication',\n        status: 'completed',\n        subject: createReference(resource),\n        sender: createReference(sender),\n        sent: new Date().toISOString(),\n        payload: [{ contentString: text }],\n      })}\n      createMedia={(resource: Patient, operator: ProfileResource, content: Attachment) => ({\n        resourceType: 'Media',\n        status: 'completed',\n        subject: createReference(resource),\n        operator: createReference(operator),\n        issued: new Date().toISOString(),\n        content,\n      })}\n    />\n  );\n}\n", "import { Anchor, Button, createStyles, NativeSelect, Stack, TextInput } from '@mantine/core';\nimport { getReferenceString, InternalSchemaElement } from '@medplum/core';\nimport { PlanDefinition, PlanDefinitionAction, Reference, ResourceType } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { FormSection } from '../FormSection/FormSection';\nimport { ReferenceDisplay } from '../ReferenceDisplay/ReferenceDisplay';\nimport { setPropertyValue } from '../ResourceForm/ResourceForm.utils';\nimport { ResourceInput } from '../ResourceInput/ResourceInput';\nimport { ResourcePropertyDisplay } from '../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\nimport { ResourcePropertyInput } from '../ResourcePropertyInput/ResourcePropertyInput';\nimport { killEvent } from '../utils/dom';\n\nconst useStyles = createStyles((theme) => ({\n  section: {\n    position: 'relative',\n    margin: '4px 4px 8px 0',\n    padding: '6px 12px 16px 6px',\n    border: `1.5px solid ${theme.colors.gray[1]}`,\n    borderRadius: theme.radius.sm,\n    transition: 'all 0.1s',\n  },\n\n  hovering: {\n    border: `1.5px solid ${theme.colors.blue[5]}`,\n  },\n\n  editing: {\n    border: `1.5px solid ${theme.colors.gray[1]}`,\n    borderLeft: `4px solid ${theme.colors.blue[5]}`,\n  },\n\n  bottomActions: {\n    position: 'absolute',\n    right: 4,\n    bottom: 0,\n    fontSize: theme.fontSizes.xs,\n\n    '& a': {\n      marginLeft: 8,\n    },\n  },\n}));\n\nexport interface PlanDefinitionBuilderProps {\n  value: PlanDefinition | Reference<PlanDefinition>;\n  onSubmit: (result: PlanDefinition) => void;\n}\n\nexport function PlanDefinitionBuilder(props: PlanDefinitionBuilderProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const defaultValue = useResource(props.value);\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const [selectedKey, setSelectedKey] = useState<string>();\n  const [hoverKey, setHoverKey] = useState<string>();\n  const [value, setValue] = useState<PlanDefinition>();\n\n  function handleDocumentMouseOver(): void {\n    setHoverKey(undefined);\n  }\n\n  function handleDocumentClick(): void {\n    setSelectedKey(undefined);\n  }\n\n  const valueRef = useRef<PlanDefinition>();\n  valueRef.current = value;\n\n  useEffect(() => {\n    medplum\n      .requestSchema('PlanDefinition')\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum]);\n\n  useEffect(() => {\n    setValue(ensurePlanDefinitionKeys(defaultValue ?? { resourceType: 'PlanDefinition' }));\n    document.addEventListener('mouseover', handleDocumentMouseOver);\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('mouseover', handleDocumentMouseOver);\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, [defaultValue]);\n\n  if (!schemaLoaded || !value) {\n    return null;\n  }\n\n  function changeProperty(property: string, newValue: any): void {\n    setValue({\n      ...valueRef.current,\n      [property]: newValue,\n    } as PlanDefinition);\n  }\n\n  return (\n    <div>\n      <Form testid=\"questionnaire-form\" onSubmit={() => props.onSubmit(value)}>\n        <TextInput\n          label=\"Plan Title\"\n          defaultValue={value.title}\n          onChange={(e) => changeProperty('title', e.currentTarget.value)}\n        />\n        <ActionArrayBuilder\n          actions={value.action || []}\n          selectedKey={selectedKey}\n          setSelectedKey={setSelectedKey}\n          hoverKey={hoverKey}\n          setHoverKey={setHoverKey}\n          onChange={(x) => changeProperty('action', x)}\n        />\n        <Button type=\"submit\">Save</Button>\n      </Form>\n    </div>\n  );\n}\n\ninterface ActionArrayBuilderProps {\n  actions: PlanDefinitionAction[];\n  selectedKey: string | undefined;\n  setSelectedKey: (key: string | undefined) => void;\n  hoverKey: string | undefined;\n  setHoverKey: (key: string | undefined) => void;\n  onChange: (actions: PlanDefinitionAction[]) => void;\n}\n\nfunction ActionArrayBuilder(props: ActionArrayBuilderProps): JSX.Element {\n  const { classes } = useStyles();\n  const actionsRef = useRef<PlanDefinitionAction[]>();\n  actionsRef.current = props.actions;\n\n  function changeAction(changedAction: PlanDefinitionAction): void {\n    props.onChange(\n      (actionsRef.current as PlanDefinition[]).map((i) => (i.id === changedAction.id ? changedAction : i))\n    );\n  }\n\n  function addAction(addedAction: PlanDefinitionAction): void {\n    props.onChange([...(actionsRef.current as PlanDefinition[]), addedAction]);\n    props.setSelectedKey(addedAction.id);\n  }\n\n  function removeAction(removedAction: PlanDefinitionAction): void {\n    props.onChange((actionsRef.current as PlanDefinition[]).filter((i) => i !== removedAction));\n  }\n\n  return (\n    <div className={classes.section}>\n      {props.actions.map((action) => (\n        <div key={action.id}>\n          <ActionBuilder\n            action={action}\n            selectedKey={props.selectedKey}\n            setSelectedKey={props.setSelectedKey}\n            hoverKey={props.hoverKey}\n            setHoverKey={props.setHoverKey}\n            onChange={changeAction}\n            onRemove={() => removeAction(action)}\n          />\n        </div>\n      ))}\n      <div className={classes.bottomActions}>\n        <Anchor\n          href=\"#\"\n          onClick={(e: React.MouseEvent) => {\n            killEvent(e);\n            addAction({ id: generateId() });\n          }}\n        >\n          Add action\n        </Anchor>\n      </div>\n    </div>\n  );\n}\n\ninterface ActionBuilderProps {\n  action: PlanDefinitionAction;\n  selectedKey: string | undefined;\n  setSelectedKey: (key: string | undefined) => void;\n  hoverKey: string | undefined;\n  setHoverKey: (key: string | undefined) => void;\n  onChange: (action: PlanDefinitionAction) => void;\n  onRemove: () => void;\n}\n\nfunction ActionBuilder(props: ActionBuilderProps): JSX.Element {\n  const { classes, cx } = useStyles();\n  const { action } = props;\n  const actionType = getInitialActionType(action);\n  const editing = props.selectedKey === props.action.id;\n  const hovering = props.hoverKey === props.action.id;\n\n  function onClick(e: React.SyntheticEvent): void {\n    e.stopPropagation();\n    props.setSelectedKey(props.action.id);\n  }\n\n  function onHover(e: React.SyntheticEvent): void {\n    killEvent(e);\n    props.setHoverKey(props.action.id);\n  }\n\n  const className = cx(classes.section, {\n    [classes.editing]: editing,\n    [classes.hovering]: hovering && !editing,\n  });\n\n  return (\n    <div data-testid={action.id} className={className} onClick={onClick} onMouseOver={onHover}>\n      {editing ? (\n        <ActionEditor\n          action={action}\n          actionType={actionType}\n          onChange={props.onChange}\n          selectedKey={props.selectedKey}\n          setSelectedKey={props.setSelectedKey}\n          hoverKey={props.hoverKey}\n          setHoverKey={props.setHoverKey}\n          onRemove={props.onRemove}\n        />\n      ) : (\n        <ActionDisplay action={action} actionType={actionType} />\n      )}\n      <div className={classes.bottomActions}>\n        <Anchor\n          href=\"#\"\n          onClick={(e: React.MouseEvent) => {\n            e.preventDefault();\n            props.onRemove();\n          }}\n        >\n          Remove\n        </Anchor>\n      </div>\n    </div>\n  );\n}\n\nconst timingProperty: InternalSchemaElement = {\n  path: 'PlanDefinition.action.timing[x]',\n  min: 0,\n  max: 1,\n  description: '',\n  isArray: false,\n  constraints: [],\n  type: ['dateTime', 'Period', 'Range', 'Timing'].map((t) => ({ code: t })),\n};\n\ninterface ActionDisplayProps {\n  action: PlanDefinitionAction;\n  actionType: string | undefined;\n}\n\nfunction ActionDisplay(props: ActionDisplayProps): JSX.Element {\n  const { action, actionType } = props;\n  const [propertyValue, propertyType] = getActionTiming(action);\n  return (\n    <div>\n      <div>\n        {action.title || 'Untitled'} {actionType && `(${actionType})`}\n      </div>\n      {action.definitionCanonical && (\n        <div>\n          <ReferenceDisplay value={{ reference: action.definitionCanonical }} />\n        </div>\n      )}\n      {propertyValue && (\n        <div>\n          <ResourcePropertyDisplay property={timingProperty} propertyType={propertyType} value={propertyValue} />\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface ActionEditorProps {\n  action: PlanDefinitionAction;\n  actionType: string | undefined;\n  selectedKey: string | undefined;\n  setSelectedKey: (key: string | undefined) => void;\n  hoverKey: string | undefined;\n  setHoverKey: (key: string | undefined) => void;\n  onChange: (action: PlanDefinitionAction) => void;\n  onRemove: () => void;\n}\n\nfunction ActionEditor(props: ActionEditorProps): JSX.Element {\n  const { action } = props;\n  const [actionType, setActionType] = useState<string | undefined>(props.actionType);\n\n  function changeProperty(property: string, value: any): void {\n    props.onChange({\n      ...action,\n      [property]: value,\n    } as PlanDefinitionAction);\n  }\n\n  return (\n    <Stack spacing=\"xl\">\n      <TextInput\n        name={`actionTitle-${action.id}`}\n        label=\"Title\"\n        defaultValue={action.title}\n        onChange={(e) => changeProperty('title', e.currentTarget.value)}\n      />\n      <TextInput\n        name={`actionDescription-${action.id}`}\n        label=\"Description\"\n        defaultValue={action.description}\n        onChange={(e) => changeProperty('description', e.currentTarget.value)}\n      />\n      <NativeSelect\n        label=\"Type of Action\"\n        description=\"The type of the action to be performed.\"\n        name={`actionType-${action.id}`}\n        defaultValue={actionType}\n        onChange={(e) => setActionType(e.currentTarget.value)}\n        data={['', 'appointment', 'lab', 'questionnaire', 'task']}\n      />\n      {action.action && action.action.length > 0 && (\n        <ActionArrayBuilder\n          actions={action.action}\n          selectedKey={props.selectedKey}\n          setSelectedKey={props.setSelectedKey}\n          hoverKey={props.hoverKey}\n          setHoverKey={props.setHoverKey}\n          onChange={(x) => changeProperty('action', x)}\n        />\n      )}\n      {(() => {\n        switch (actionType) {\n          case 'appointment':\n            return (\n              <ActionResourceTypeBuilder\n                title=\"Appointment\"\n                description=\"The subject must schedule an appointment from the schedule.\"\n                resourceType=\"Schedule\"\n                action={action}\n                onChange={props.onChange}\n              />\n            );\n          case 'lab':\n            return (\n              <ActionResourceTypeBuilder\n                title=\"Lab\"\n                description=\"The subject must complete the following lab panel.\"\n                resourceType=\"ActivityDefinition\"\n                action={action}\n                onChange={props.onChange}\n              />\n            );\n          case 'questionnaire':\n            return (\n              <ActionResourceTypeBuilder\n                title=\"Questionnaire\"\n                description=\"The subject must complete the selected questionnaire.\"\n                resourceType=\"Questionnaire\"\n                action={action}\n                onChange={props.onChange}\n              />\n            );\n          case 'task':\n            return (\n              <ActionResourceTypeBuilder\n                title=\"Task\"\n                description=\"The subject must complete the following task.\"\n                resourceType=\"ActivityDefinition\"\n                action={action}\n                onChange={props.onChange}\n              />\n            );\n          default:\n            return null;\n        }\n      })()}\n      <FormSection title=\"Timing\" description=\"When the action should take place.\">\n        <ActionTimingInput name={'timing-' + action.id} action={action} onChange={props.onChange} />\n      </FormSection>\n    </Stack>\n  );\n}\n\ninterface ActionResourceTypeBuilderProps {\n  action: PlanDefinitionAction;\n  title: string;\n  description: string;\n  resourceType: ResourceType;\n  onChange: (action: PlanDefinitionAction) => void;\n}\n\nfunction ActionResourceTypeBuilder(props: ActionResourceTypeBuilderProps): JSX.Element {\n  const { id, definitionCanonical } = props.action;\n  const reference = definitionCanonical?.startsWith(props.resourceType + '/')\n    ? { reference: definitionCanonical }\n    : undefined;\n  return (\n    <ResourceInput\n      name={id as string}\n      resourceType={props.resourceType}\n      defaultValue={reference}\n      loadOnFocus={true}\n      onChange={(newValue) => {\n        if (newValue) {\n          props.onChange({ ...props.action, definitionCanonical: getReferenceString(newValue) });\n        } else {\n          props.onChange({ ...props.action, definitionCanonical: undefined });\n        }\n      }}\n    />\n  );\n}\n\ninterface ActionTimingInputProps {\n  name: string;\n  action: PlanDefinitionAction;\n  onChange: (action: PlanDefinitionAction) => void;\n}\n\nfunction ActionTimingInput(props: ActionTimingInputProps): JSX.Element {\n  const value = props.action;\n  const key = 'timing';\n  const [propertyValue, propertyType] = getActionTiming(value);\n  return (\n    <ResourcePropertyInput\n      property={timingProperty}\n      name=\"timing[x]\"\n      defaultValue={propertyValue}\n      defaultPropertyType={propertyType}\n      onChange={(newValue: any, propName?: string) => {\n        props.onChange(setPropertyValue(value, key, propName ?? key, timingProperty, newValue));\n      }}\n    />\n  );\n}\n\nfunction getInitialActionType(action: PlanDefinitionAction): string | undefined {\n  if (action.definitionCanonical?.startsWith('Schedule')) {\n    return 'appointment';\n  }\n\n  if (action.definitionCanonical?.startsWith('Questionnaire/')) {\n    return 'questionnaire';\n  }\n\n  if (action.definitionCanonical?.startsWith('ActivityDefinition/')) {\n    return 'task';\n  }\n\n  return undefined;\n}\n\nfunction getActionTiming(action: PlanDefinitionAction): [any, string] {\n  return getValueAndType({ type: 'PlanDefinitionAction', value: action }, 'timing');\n}\n\nlet nextId = 1;\n\n/**\n * Generates a unique ID.\n * React needs unique IDs for components for rendering performance.\n * All of the important components in the questionnaire builder have id properties for this:\n * Questionnaire, QuestionnaireItem, and QuestionnaireItemAnswerOption.\n * @param existing - Optional existing id which will update nextId.\n * @returns A unique key.\n */\nfunction generateId(existing?: string): string {\n  if (existing) {\n    if (existing.startsWith('id-')) {\n      const existingNum = parseInt(existing.substring(3), 10);\n      if (!isNaN(existingNum)) {\n        nextId = Math.max(nextId, existingNum + 1);\n      }\n    }\n    return existing;\n  }\n  return 'id-' + nextId++;\n}\n\nfunction ensurePlanDefinitionKeys(planDefinition: PlanDefinition): PlanDefinition {\n  return {\n    ...planDefinition,\n    action: ensurePlanDefinitionActionKeys(planDefinition.action),\n  } as PlanDefinition;\n}\n\nfunction ensurePlanDefinitionActionKeys(\n  actions: PlanDefinitionAction[] | undefined\n): PlanDefinitionAction[] | undefined {\n  if (!actions) {\n    return undefined;\n  }\n  return actions.map((action) => ({\n    ...action,\n    id: generateId(action.id),\n    action: ensurePlanDefinitionActionKeys(action.action),\n  }));\n}\n", "import {\n  Anchor,\n  Box,\n  Button,\n  createStyles,\n  Group,\n  NativeSelect,\n  Space,\n  Textarea,\n  TextInput,\n  Title,\n} from '@mantine/core';\nimport { getElementDefinition, isResource as isResourceType } from '@medplum/core';\nimport {\n  Extension,\n  Questionnaire,\n  QuestionnaireItem,\n  QuestionnaireItemAnswerOption,\n  Reference,\n  ResourceType,\n} from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport { IconArrowDown, IconArrowUp } from '@tabler/icons-react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { QuestionnaireFormItem } from '../QuestionnaireForm/QuestionnaireFormItem/QuestionnaireFormItem';\nimport { getValueAndType } from '../ResourcePropertyDisplay/ResourcePropertyDisplay.utils';\nimport { ResourcePropertyInput } from '../ResourcePropertyInput/ResourcePropertyInput';\nimport { ResourceTypeInput } from '../ResourceTypeInput/ResourceTypeInput';\nimport { killEvent } from '../utils/dom';\nimport {\n  getQuestionnaireItemReferenceTargetTypes,\n  isChoiceQuestion,\n  QuestionnaireItemType,\n  setQuestionnaireItemReferenceTargetTypes,\n} from '../utils/questionnaire';\n\nconst useStyles = createStyles((theme) => ({\n  section: {\n    position: 'relative',\n    margin: '4px 4px 8px 0',\n    padding: '6px 12px 16px 6px',\n    border: `1.5px solid ${theme.colors.gray[1]}`,\n    borderRadius: theme.radius.sm,\n    transition: 'all 0.1s',\n  },\n\n  hovering: {\n    border: `1.5px solid ${theme.colors.blue[5]}`,\n  },\n\n  editing: {\n    border: `1.5px solid ${theme.colors.gray[1]}`,\n    borderLeft: `4px solid ${theme.colors.blue[5]}`,\n  },\n\n  questionBody: {\n    maxWidth: 600,\n  },\n\n  topActions: {\n    position: 'absolute',\n    right: 32,\n    top: 1,\n    padding: 4,\n    color: theme.colors.gray[5],\n    fontSize: theme.fontSizes.xs,\n  },\n\n  bottomActions: {\n    position: 'absolute',\n    right: 4,\n    bottom: 0,\n    fontSize: theme.fontSizes.xs,\n\n    '& a': {\n      marginLeft: 8,\n    },\n  },\n\n  movementActions: {\n    position: 'absolute',\n    right: 8,\n    top: 0,\n    paddingTop: 8,\n    fontSize: theme.fontSizes.xs,\n\n    '& a': {\n      marginLeft: 8,\n    },\n  },\n\n  movementIcons: {\n    color: theme.colors.gray[5],\n  },\n\n  columnAlignment: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n\n  linkIdInput: {\n    width: 100,\n    marginBottom: 4,\n  },\n\n  typeSelect: {\n    width: 100,\n  },\n}));\n\nexport interface QuestionnaireBuilderProps {\n  questionnaire: Questionnaire | Reference<Questionnaire>;\n  onSubmit: (result: Questionnaire) => void;\n}\n\nexport function QuestionnaireBuilder(props: QuestionnaireBuilderProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const defaultValue = useResource(props.questionnaire);\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const [value, setValue] = useState<Questionnaire>();\n  const [selectedKey, setSelectedKey] = useState<string>();\n  const [hoverKey, setHoverKey] = useState<string>();\n\n  function handleDocumentMouseOver(): void {\n    setHoverKey(undefined);\n  }\n\n  function handleDocumentClick(): void {\n    setSelectedKey(undefined);\n  }\n\n  useEffect(() => {\n    medplum\n      .requestSchema('Questionnaire')\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum]);\n\n  useEffect(() => {\n    setValue(ensureQuestionnaireKeys(defaultValue ?? { resourceType: 'Questionnaire' }));\n    document.addEventListener('mouseover', handleDocumentMouseOver);\n    document.addEventListener('click', handleDocumentClick);\n    return () => {\n      document.removeEventListener('mouseover', handleDocumentMouseOver);\n      document.removeEventListener('click', handleDocumentClick);\n    };\n  }, [defaultValue]);\n\n  if (!schemaLoaded || !value) {\n    return null;\n  }\n\n  return (\n    <div>\n      <Form testid=\"questionnaire-form\" onSubmit={() => props.onSubmit(value)}>\n        <ItemBuilder\n          item={value}\n          selectedKey={selectedKey}\n          setSelectedKey={setSelectedKey}\n          hoverKey={hoverKey}\n          setHoverKey={setHoverKey}\n          onChange={setValue}\n        />\n        <Button type=\"submit\">Save</Button>\n      </Form>\n    </div>\n  );\n}\n\ninterface ItemBuilderProps<T extends Questionnaire | QuestionnaireItem> {\n  item: T;\n  selectedKey: string | undefined;\n  setSelectedKey: (key: string | undefined) => void;\n  hoverKey: string | undefined;\n  isFirst?: boolean;\n  isLast?: boolean;\n  setHoverKey: (key: string | undefined) => void;\n  onChange: (item: T) => void;\n  onRemove?: () => void;\n  onRepeatable?: (item: QuestionnaireItem) => void;\n  onMoveUp?(): void;\n  onMoveDown?(): void;\n}\n\nfunction ItemBuilder<T extends Questionnaire | QuestionnaireItem>(props: ItemBuilderProps<T>): JSX.Element {\n  const { classes, cx } = useStyles();\n  const resource = props.item as Questionnaire;\n  const item = props.item as QuestionnaireItem;\n  const isResource = isResourceType(props.item);\n  const isContainer = isResource || item.type === QuestionnaireItemType.group;\n  const linkId = item.linkId ?? '[untitled]';\n  const editing = props.selectedKey === props.item.id;\n  const hovering = props.hoverKey === props.item.id;\n\n  const itemRef = useRef<T>();\n  itemRef.current = props.item;\n\n  function onClick(e: React.SyntheticEvent): void {\n    killEvent(e);\n    props.setSelectedKey(props.item.id);\n  }\n\n  function onHover(e: React.SyntheticEvent): void {\n    killEvent(e);\n    props.setHoverKey(props.item.id);\n  }\n\n  function changeItem(changedItem: QuestionnaireItem): void {\n    const curr = itemRef.current as T;\n    props.onChange({\n      ...curr,\n      item: curr.item?.map((i) => (i.id === changedItem.id ? changedItem : i)),\n    } as T);\n  }\n\n  function addItem(addedItem: QuestionnaireItem): void {\n    props.onChange({\n      ...props.item,\n      item: [...(props.item.item ?? []), addedItem],\n    });\n  }\n\n  function removeItem(removedItem: QuestionnaireItem): void {\n    props.onChange({\n      ...props.item,\n      item: props.item.item?.filter((i) => i !== removedItem),\n    });\n  }\n\n  function changeProperty(property: string, value: any): void {\n    props.onChange({\n      ...itemRef.current,\n      [property]: value,\n    } as T);\n  }\n\n  function updateItem(updatedItem: QuestionnaireItem): void {\n    props.onChange({\n      ...props.item,\n      ...updatedItem,\n    });\n  }\n\n  function toggleRepeatable(item: QuestionnaireItem): void {\n    props.onChange({\n      ...props.item,\n      item: props.item.item?.map((i) => (i === item ? { ...i, repeats: !i.repeats } : i)),\n    });\n  }\n\n  function moveItem(itemIndex: number, delta: number): void {\n    const updatedItems = reorderItems(props.item.item, itemIndex, delta);\n\n    props.onChange({\n      ...props.item,\n      item: updatedItems,\n    });\n  }\n\n  const className = cx(classes.section, {\n    [classes.editing]: editing,\n    [classes.hovering]: hovering && !editing,\n  });\n\n  return (\n    <div data-testid={item.linkId} className={className} onClick={onClick} onMouseOver={onHover}>\n      <div className={classes.questionBody}>\n        {editing ? (\n          <>\n            {isResource && (\n              <TextInput\n                size=\"xl\"\n                defaultValue={resource.title}\n                onChange={(e) => changeProperty('title', e.currentTarget.value)}\n              />\n            )}\n            {!isResource && (\n              <Textarea\n                autosize\n                minRows={2}\n                defaultValue={item.text}\n                onChange={(e) => changeProperty('text', e.currentTarget.value)}\n              />\n            )}\n            {item.type === 'reference' && <ReferenceProfiles item={item} onChange={updateItem} />}\n            {isChoiceQuestion(item) && <AnswerBuilder item={item} onChange={(item) => updateItem(item)} />}\n          </>\n        ) : (\n          <>\n            {resource.title && <Title>{resource.title}</Title>}\n            {item.text && <div>{item.text}</div>}\n            {!isContainer && <QuestionnaireFormItem item={item} index={0} onChange={() => undefined} response={{}} />}\n          </>\n        )}\n      </div>\n      {item.item?.map((item, i) => (\n        <div key={item.id}>\n          <ItemBuilder\n            item={item}\n            selectedKey={props.selectedKey}\n            setSelectedKey={props.setSelectedKey}\n            hoverKey={props.hoverKey}\n            isFirst={i === 0}\n            isLast={i === (props.item.item ?? []).length - 1}\n            setHoverKey={props.setHoverKey}\n            onChange={changeItem}\n            onRemove={() => removeItem(item)}\n            onRepeatable={toggleRepeatable}\n            onMoveUp={() => moveItem(i, -1)}\n            onMoveDown={() => moveItem(i, 1)}\n          />\n        </div>\n      ))}\n      {!isContainer && (\n        <div className={classes.topActions}>\n          {editing ? (\n            <>\n              <TextInput\n                size=\"xs\"\n                className={classes.linkIdInput}\n                defaultValue={item.linkId}\n                onChange={(e) => changeProperty('linkId', e.currentTarget.value)}\n              />\n              {!isContainer && (\n                <NativeSelect\n                  size=\"xs\"\n                  className={classes.typeSelect}\n                  defaultValue={item.type}\n                  onChange={(e) => changeProperty('type', e.currentTarget.value)}\n                  data={[\n                    { value: 'display', label: 'Display' },\n                    { value: 'boolean', label: 'Boolean' },\n                    { value: 'decimal', label: 'Decimal' },\n                    { value: 'integer', label: 'Integer' },\n                    { value: 'date', label: 'Date' },\n                    { value: 'dateTime', label: 'Date/Time' },\n                    { value: 'time', label: 'Time' },\n                    { value: 'string', label: 'String' },\n                    { value: 'text', label: 'Text' },\n                    { value: 'url', label: 'URL' },\n                    { value: 'choice', label: 'Choice' },\n                    { value: 'open-choice', label: 'Open Choice' },\n                    { value: 'attachment', label: 'Attachment' },\n                    { value: 'reference', label: 'Reference' },\n                    { value: 'quantity', label: 'Quantity' },\n                  ]}\n                />\n              )}\n            </>\n          ) : (\n            <div>{linkId}</div>\n          )}\n        </div>\n      )}\n      {!isResource && (\n        <Box className={classes.movementActions}>\n          <Box className={classes.columnAlignment}>\n            {!props.isFirst && (\n              <Anchor\n                href=\"#\"\n                onClick={(e: React.MouseEvent) => {\n                  e.preventDefault();\n                  if (props.onMoveUp) {\n                    props.onMoveUp();\n                  }\n                }}\n              >\n                <IconArrowUp data-testid=\"up-button\" size={15} className={classes.movementIcons} />\n              </Anchor>\n            )}\n            {!props.isLast && (\n              <Anchor\n                href=\"#\"\n                onClick={(e: React.MouseEvent) => {\n                  e.preventDefault();\n                  if (props.onMoveDown) {\n                    props.onMoveDown();\n                  }\n                }}\n              >\n                <IconArrowDown data-testid=\"down-button\" size={15} className={classes.movementIcons} />\n              </Anchor>\n            )}\n          </Box>\n        </Box>\n      )}\n      <div className={classes.bottomActions}>\n        {isContainer && (\n          <>\n            <Anchor\n              href=\"#\"\n              onClick={(e: React.MouseEvent) => {\n                e.preventDefault();\n                addItem({\n                  id: generateId(),\n                  linkId: generateLinkId('q'),\n                  type: 'string',\n                  text: 'Question',\n                } as QuestionnaireItem);\n              }}\n            >\n              Add item\n            </Anchor>\n            <Anchor\n              href=\"#\"\n              onClick={(e: React.MouseEvent) => {\n                e.preventDefault();\n                addItem({\n                  id: generateId(),\n                  linkId: generateLinkId('g'),\n                  type: 'group',\n                  text: 'Group',\n                } as QuestionnaireItem);\n              }}\n            >\n              Add group\n            </Anchor>\n          </>\n        )}\n        {isResource && (\n          <Anchor\n            href=\"#\"\n            onClick={(e: React.MouseEvent) => {\n              e.preventDefault();\n              addItem(createPage());\n            }}\n          >\n            Add Page\n          </Anchor>\n        )}\n        {editing && !isResource && (\n          <>\n            <Anchor\n              href=\"#\"\n              onClick={(e: React.MouseEvent) => {\n                e.preventDefault();\n                if (props.onRepeatable) {\n                  props.onRepeatable(item);\n                }\n              }}\n            >\n              {item.repeats ? 'Remove Repeatable' : 'Make Repeatable'}\n            </Anchor>\n            <Anchor\n              href=\"#\"\n              onClick={(e: React.MouseEvent) => {\n                e.preventDefault();\n                if (props.onRemove) {\n                  props.onRemove();\n                }\n              }}\n            >\n              Remove\n            </Anchor>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\ninterface AnswerBuilderProps {\n  item: QuestionnaireItem;\n  onChange: (item: QuestionnaireItem) => void;\n}\n\nfunction AnswerBuilder(props: AnswerBuilderProps): JSX.Element {\n  const property = getElementDefinition('QuestionnaireItemAnswerOption', 'value[x]');\n  const options = props.item.answerOption ?? [];\n  return (\n    <div>\n      {props.item.answerValueSet !== undefined ? (\n        <TextInput\n          placeholder=\"Enter Value Set\"\n          defaultValue={props.item.answerValueSet}\n          onChange={(e) => props.onChange({ ...props.item, answerValueSet: e.target.value })}\n        />\n      ) : (\n        <AnswerOptionsInput options={options} property={property} item={props.item} onChange={props.onChange} />\n      )}\n      <Box display=\"flex\">\n        <Anchor\n          href=\"#\"\n          onClick={(e: React.SyntheticEvent) => {\n            killEvent(e);\n            props.onChange({\n              ...props.item,\n              answerValueSet: undefined,\n              answerOption: [\n                ...options,\n                {\n                  id: generateId(),\n                },\n              ],\n            });\n          }}\n        >\n          Add choice\n        </Anchor>\n        <Space w=\"lg\" />\n        <Anchor\n          href=\"#\"\n          onClick={(e: React.SyntheticEvent) => {\n            killEvent(e);\n            props.onChange({\n              ...props.item,\n              answerOption: [],\n              answerValueSet: '',\n            });\n          }}\n        >\n          Add value set\n        </Anchor>\n      </Box>\n    </div>\n  );\n}\n\ninterface AnswerOptionsInputProps {\n  options: QuestionnaireItemAnswerOption[];\n  property: any;\n  item: QuestionnaireItem;\n  onChange: (item: QuestionnaireItem) => void;\n}\n\nfunction AnswerOptionsInput(props: AnswerOptionsInputProps): JSX.Element {\n  return (\n    <div>\n      {props.options.map((option: QuestionnaireItemAnswerOption) => {\n        const [propertyValue, propertyType] = getValueAndType(\n          { type: 'QuestionnaireItemAnswerOption', value: option },\n          'value'\n        );\n        return (\n          <div\n            key={option.id}\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              width: '80%',\n            }}\n          >\n            <div>\n              <ResourcePropertyInput\n                key={option.id}\n                name=\"value[x]\"\n                property={props.property}\n                defaultPropertyType={propertyType}\n                defaultValue={propertyValue}\n                onChange={(newValue: any, propName?: string) => {\n                  const newOptions = [...props.options];\n                  const index = newOptions.findIndex((o) => o.id === option.id);\n                  newOptions[index] = { id: option.id, [propName as string]: newValue };\n                  props.onChange({\n                    ...props.item,\n                    answerOption: newOptions,\n                  });\n                }}\n              />\n            </div>\n\n            <div>\n              <Anchor\n                href=\"#\"\n                onClick={(e: React.SyntheticEvent) => {\n                  killEvent(e);\n                  props.onChange({\n                    ...props.item,\n                    answerOption: props.options.filter((o) => o.id !== option.id),\n                  });\n                }}\n              >\n                Remove\n              </Anchor>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\ninterface ReferenceTypeProps {\n  item: QuestionnaireItem;\n  onChange: (updatedItem: QuestionnaireItem) => void;\n}\n\nfunction ReferenceProfiles(props: ReferenceTypeProps): JSX.Element {\n  const targetTypes = getQuestionnaireItemReferenceTargetTypes(props.item) ?? [];\n  return (\n    <>\n      {targetTypes.map((targetType: ResourceType, index: number) => {\n        return (\n          <Group key={`${targetType}-${index}`}>\n            <ResourceTypeInput\n              name=\"resourceType\"\n              placeholder=\"Resource Type\"\n              defaultValue={targetType}\n              onChange={(newValue: ResourceType | undefined) => {\n                props.onChange(\n                  setQuestionnaireItemReferenceTargetTypes(\n                    props.item,\n                    targetTypes.map((t) => (t === targetType ? (newValue as ResourceType) : t))\n                  )\n                );\n              }}\n            />\n            <Anchor\n              href=\"#\"\n              onClick={(e: React.SyntheticEvent) => {\n                killEvent(e);\n                props.onChange(\n                  setQuestionnaireItemReferenceTargetTypes(\n                    props.item,\n                    targetTypes.filter((t) => t !== targetType)\n                  )\n                );\n              }}\n            >\n              Remove\n            </Anchor>\n          </Group>\n        );\n      })}\n      <Anchor\n        href=\"#\"\n        onClick={(e: React.SyntheticEvent) => {\n          killEvent(e);\n          props.onChange(setQuestionnaireItemReferenceTargetTypes(props.item, [...targetTypes, '' as ResourceType]));\n        }}\n      >\n        Add Resource Type\n      </Anchor>\n    </>\n  );\n}\n\nlet nextLinkId = 1;\nlet nextId = 1;\n\n/**\n * Generates a link ID for an item.\n * Link IDs are required properties on QuestionnaireItem objects.\n * @param prefix - The link ID prefix string.\n * @returns A unique link ID.\n */\nfunction generateLinkId(prefix: string): string {\n  return prefix + nextLinkId++;\n}\n\n/**\n * Generates a unique ID.\n * React needs unique IDs for components for rendering performance.\n * All of the important components in the questionnaire builder have id properties for this:\n * Questionnaire, QuestionnaireItem, and QuestionnaireItemAnswerOption.\n * @returns A unique key.\n */\nfunction generateId(): string {\n  return 'id-' + nextId++;\n}\n\nfunction ensureQuestionnaireKeys(questionnaire: Questionnaire): Questionnaire {\n  return {\n    ...questionnaire,\n    id: questionnaire.id || generateId(),\n    item: ensureQuestionnaireItemKeys(questionnaire.item),\n  } as Questionnaire;\n}\n\nfunction ensureQuestionnaireItemKeys(items: QuestionnaireItem[] | undefined): QuestionnaireItem[] | undefined {\n  if (!items) {\n    return undefined;\n  }\n  items.forEach((item) => {\n    if (item.id?.match(/^id-\\d+$/)) {\n      nextId = Math.max(nextId, parseInt(item.id.substring(3), 10) + 1);\n    }\n    if (item.linkId?.match(/^q\\d+$/)) {\n      nextLinkId = Math.max(nextLinkId, parseInt(item.linkId.substring(1), 10) + 1);\n    }\n  });\n  return items.map((item) => ({\n    ...item,\n    id: item.id || generateId(),\n    item: ensureQuestionnaireItemKeys(item.item),\n    answerOption: ensureQuestionnaireOptionKeys(item.answerOption),\n  }));\n}\n\nfunction ensureQuestionnaireOptionKeys(\n  options: QuestionnaireItemAnswerOption[] | undefined\n): QuestionnaireItemAnswerOption[] | undefined {\n  if (!options) {\n    return undefined;\n  }\n  return options.map((option) => ({\n    ...option,\n    id: option.id || generateId(),\n  }));\n}\n\nfunction createPage(): QuestionnaireItem {\n  return {\n    id: generateId(),\n    linkId: generateLinkId('s'),\n    type: 'group',\n    text: `New Page`,\n    extension: [\n      {\n        url: 'http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl',\n        valueCodeableConcept: {\n          coding: [\n            {\n              system: 'http://hl7.org/fhir/questionnaire-item-control',\n              code: 'page',\n            },\n          ],\n        },\n      } as Extension,\n    ],\n  } as QuestionnaireItem;\n}\n\nfunction reorderItems(items: QuestionnaireItem[] | undefined, itemIndex: number, delta: number): QuestionnaireItem[] {\n  const currentItems = items ?? [];\n  const newIndex = itemIndex + delta;\n  if (newIndex < 0 || newIndex >= currentItems.length) {\n    return currentItems;\n  }\n\n  const updatedItems = [...currentItems];\n  [updatedItems[itemIndex], updatedItems[newIndex]] = [updatedItems[newIndex], updatedItems[itemIndex]];\n\n  return updatedItems;\n}\n", "import { Checkbox, Group, MultiSelect, NativeSelect, Radio, Textarea, TextInput } from '@mantine/core';\nimport {\n  capitalize,\n  deepEquals,\n  formatCodeableConcept,\n  formatCoding,\n  getElementDefinition,\n  getTypedPropertyValue,\n  stringify,\n  TypedValue,\n} from '@medplum/core';\nimport {\n  QuestionnaireItem,\n  QuestionnaireItemAnswerOption,\n  QuestionnaireItemInitial,\n  QuestionnaireResponseItem,\n  QuestionnaireResponseItemAnswer,\n} from '@medplum/fhirtypes';\nimport React, { ChangeEvent } from 'react';\nimport { AttachmentInput } from '../../AttachmentInput/AttachmentInput';\nimport { CheckboxFormSection } from '../../CheckboxFormSection/CheckboxFormSection';\nimport { CodingInput } from '../../CodingInput/CodingInput';\nimport { DateTimeInput } from '../../DateTimeInput/DateTimeInput';\nimport { QuantityInput } from '../../QuantityInput/QuantityInput';\nimport { ReferenceInput } from '../../ReferenceInput/ReferenceInput';\nimport { ResourcePropertyDisplay } from '../../ResourcePropertyDisplay/ResourcePropertyDisplay';\nimport {\n  formatReferenceString,\n  getNewMultiSelectValues,\n  getQuestionnaireItemReferenceTargetTypes,\n  QuestionnaireItemType,\n} from '../../utils/questionnaire';\n\nexport interface QuestionnaireFormItemProps {\n  item: QuestionnaireItem;\n  index: number;\n  response: QuestionnaireResponseItem;\n  onChange: (newResponseItem: QuestionnaireResponseItem) => void;\n}\n\nexport function QuestionnaireFormItem(props: QuestionnaireFormItemProps): JSX.Element | null {\n  const item = props.item;\n  const response = props.response;\n\n  function onChangeAnswer(\n    newResponseAnswer: QuestionnaireResponseItemAnswer | QuestionnaireResponseItemAnswer[]\n  ): void {\n    let updatedAnswers: QuestionnaireResponseItemAnswer[];\n    if (Array.isArray(newResponseAnswer)) {\n      // It's a multi-select case, so use the array directly.\n      updatedAnswers = newResponseAnswer;\n    } else if (props.index >= (props.response?.answer?.length ?? 0)) {\n      // if adding a new answer\n      updatedAnswers = (props.response?.answer ?? []).concat([newResponseAnswer]);\n    } else {\n      // if updating an existing answer\n      const newAnswers = (props.response?.answer ?? []).map((a, idx) =>\n        idx === props.index ? newResponseAnswer : a\n      ) as QuestionnaireResponseItemAnswer[];\n      updatedAnswers = newAnswers ?? [];\n    }\n    props.onChange({\n      id: response?.id,\n      linkId: response?.linkId,\n      text: item.text,\n      answer: updatedAnswers,\n    });\n  }\n\n  const type = item.type;\n  if (!type) {\n    return null;\n  }\n\n  const name = item.linkId;\n  if (!name) {\n    return null;\n  }\n\n  const initial = item.initial && item.initial.length > 0 ? item.initial[0] : undefined;\n  const defaultValue =\n    getCurrentAnswer(response, props.index) ??\n    getTypedPropertyValue({ type: 'QuestionnaireItemInitial', value: initial }, 'value');\n\n  switch (type) {\n    case QuestionnaireItemType.display:\n      return <p key={props.item.linkId}>{props.item.text}</p>;\n    case QuestionnaireItemType.boolean:\n      return (\n        <CheckboxFormSection key={props.item.linkId} title={props.item.text} htmlFor={props.item.linkId}>\n          <Checkbox\n            id={props.item.linkId}\n            name={props.item.linkId}\n            defaultChecked={defaultValue?.value}\n            onChange={(e) => onChangeAnswer({ valueBoolean: e.currentTarget.checked })}\n          />\n        </CheckboxFormSection>\n      );\n    case QuestionnaireItemType.decimal:\n      return (\n        <TextInput\n          type=\"number\"\n          step=\"any\"\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueDecimal: e.currentTarget.valueAsNumber })}\n        />\n      );\n    case QuestionnaireItemType.integer:\n      return (\n        <TextInput\n          type=\"number\"\n          step={1}\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueInteger: e.currentTarget.valueAsNumber })}\n        />\n      );\n    case QuestionnaireItemType.date:\n      return (\n        <TextInput\n          type=\"date\"\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueDate: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.dateTime:\n      return (\n        <DateTimeInput\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(newValue: string) => onChangeAnswer({ valueDateTime: newValue })}\n        />\n      );\n    case QuestionnaireItemType.time:\n      return (\n        <TextInput\n          type=\"time\"\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueTime: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.string:\n    case QuestionnaireItemType.url:\n      return (\n        <TextInput\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueString: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.text:\n      return (\n        <Textarea\n          id={name}\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(e) => onChangeAnswer({ valueString: e.currentTarget.value })}\n        />\n      );\n    case QuestionnaireItemType.attachment:\n      return (\n        <Group py={4}>\n          <AttachmentInput\n            name={name}\n            defaultValue={defaultValue?.value}\n            onChange={(newValue) => onChangeAnswer({ valueAttachment: newValue })}\n          />\n        </Group>\n      );\n    case QuestionnaireItemType.reference:\n      return (\n        <ReferenceInput\n          name={name}\n          required={item.required}\n          targetTypes={getQuestionnaireItemReferenceTargetTypes(item)}\n          defaultValue={defaultValue?.value}\n          onChange={(newValue) => onChangeAnswer({ valueReference: newValue })}\n        />\n      );\n    case QuestionnaireItemType.quantity:\n      return (\n        <QuantityInput\n          name={name}\n          required={item.required}\n          defaultValue={defaultValue?.value}\n          onChange={(newValue) => onChangeAnswer({ valueQuantity: newValue })}\n          disableWheel\n        />\n      );\n    case QuestionnaireItemType.choice:\n    case QuestionnaireItemType.openChoice:\n      if (isDropDownChoice(item) && !item.answerValueSet) {\n        return (\n          <QuestionnaireChoiceDropDownInput\n            name={name}\n            item={item}\n            initial={initial}\n            response={response}\n            onChangeAnswer={(e) => onChangeAnswer(e)}\n          />\n        );\n      } else {\n        return (\n          <QuestionnaireChoiceSetInput\n            name={name}\n            item={item}\n            initial={initial}\n            response={response}\n            onChangeAnswer={(e) => onChangeAnswer(e)}\n          />\n        );\n      }\n    default:\n      return null;\n  }\n}\n\ninterface QuestionnaireChoiceInputProps {\n  name: string;\n  item: QuestionnaireItem;\n  initial: QuestionnaireItemInitial | undefined;\n  response: QuestionnaireResponseItem;\n  onChangeAnswer: (newResponseAnswer: QuestionnaireResponseItemAnswer | QuestionnaireResponseItemAnswer[]) => void;\n}\n\nfunction QuestionnaireChoiceDropDownInput(props: QuestionnaireChoiceInputProps): JSX.Element {\n  const { name, item, initial, response } = props;\n\n  if (!item.answerOption?.length) {\n    return <NoAnswerDisplay />;\n  }\n\n  const initialValue = getTypedPropertyValue({ type: 'QuestionnaireItemInitial', value: initial }, 'value') as\n    | TypedValue\n    | undefined;\n\n  const data = [''];\n\n  for (const option of item.answerOption) {\n    const optionValue = getTypedPropertyValue(\n      { type: 'QuestionnaireItemAnswerOption', value: option },\n      'value'\n    ) as TypedValue;\n    data.push(typedValueToString(optionValue) as string);\n  }\n\n  const defaultValue = getCurrentAnswer(response) ?? initialValue;\n\n  if (item.repeats) {\n    const { propertyName, data } = formatSelectData(props.item);\n    const currentAnswer = getCurrentMultiSelectAnswer(response);\n\n    return (\n      <MultiSelect\n        data={data}\n        placeholder=\"Select items\"\n        searchable\n        defaultValue={currentAnswer || [typedValueToString(initialValue)]}\n        onChange={(selected) => {\n          const values = getNewMultiSelectValues(selected, propertyName, item);\n          props.onChangeAnswer(values);\n        }}\n      />\n    );\n  }\n\n  return (\n    <NativeSelect\n      id={name}\n      name={name}\n      onChange={(e: ChangeEvent<HTMLSelectElement>) => {\n        const index = e.currentTarget.selectedIndex;\n        if (index === 0) {\n          props.onChangeAnswer({});\n          return;\n        }\n        const option = (item.answerOption as QuestionnaireItemAnswerOption[])[index - 1];\n        const optionValue = getTypedPropertyValue(\n          { type: 'QuestionnaireItemAnswerOption', value: option },\n          'value'\n        ) as TypedValue;\n        const propertyName = 'value' + capitalize(optionValue.type);\n        props.onChangeAnswer({ [propertyName]: optionValue.value });\n      }}\n      defaultValue={formatCoding(defaultValue?.value) || defaultValue?.value}\n      data={data}\n    />\n  );\n}\n\nfunction QuestionnaireChoiceSetInput(props: QuestionnaireChoiceInputProps): JSX.Element {\n  const { name, item, initial, onChangeAnswer, response } = props;\n\n  if (!item.answerOption?.length && !item.answerValueSet) {\n    return <NoAnswerDisplay />;\n  }\n\n  if (item.answerValueSet) {\n    return (\n      <CodingInput\n        name={name}\n        binding={item.answerValueSet}\n        onChange={(code) => onChangeAnswer({ valueCoding: code })}\n      />\n    );\n  }\n  return (\n    <QuestionnaireChoiceRadioInput\n      name={response?.id ?? name}\n      item={item}\n      initial={initial}\n      response={response}\n      onChangeAnswer={onChangeAnswer}\n    />\n  );\n}\n\nfunction QuestionnaireChoiceRadioInput(props: QuestionnaireChoiceInputProps): JSX.Element {\n  const { name, item, initial, onChangeAnswer, response } = props;\n  const valueElementDefinition = getElementDefinition('QuestionnaireItemAnswerOption', 'value[x]');\n  const initialValue = getTypedPropertyValue({ type: 'QuestionnaireItemInitial', value: initial }, 'value') as\n    | TypedValue\n    | undefined;\n\n  const options: [string, TypedValue][] = [];\n  let defaultValue = undefined;\n  if (item.answerOption) {\n    for (let i = 0; i < item.answerOption.length; i++) {\n      const option = item.answerOption[i];\n      const optionName = `${name}-option-${i}`;\n      const optionValue = getTypedPropertyValue(\n        { type: 'QuestionnaireItemAnswerOption', value: option },\n        'value'\n      ) as TypedValue;\n\n      if (initialValue && stringify(optionValue) === stringify(initialValue)) {\n        defaultValue = optionName;\n      }\n      options.push([optionName, optionValue]);\n    }\n  }\n\n  const defaultAnswer = getCurrentAnswer(response);\n  const answerLinkId = getCurrentRadioAnswer(options, defaultAnswer);\n\n  return (\n    <Radio.Group\n      name={name}\n      value={answerLinkId ?? defaultValue}\n      onChange={(newValue) => {\n        const option = options.find((option) => option[0] === newValue);\n        if (option) {\n          const optionValue = option[1];\n          const propertyName = 'value' + capitalize(optionValue.type);\n          onChangeAnswer({ [propertyName]: optionValue.value });\n        }\n      }}\n    >\n      {options.map(([optionName, optionValue]) => (\n        <Radio\n          key={optionName}\n          id={optionName}\n          value={optionName}\n          py={4}\n          label={\n            <ResourcePropertyDisplay\n              property={valueElementDefinition}\n              propertyType={optionValue.type}\n              value={optionValue.value}\n            />\n          }\n        />\n      ))}\n    </Radio.Group>\n  );\n}\n\nfunction NoAnswerDisplay(): JSX.Element {\n  return <TextInput disabled placeholder=\"No Answers Defined\" />;\n}\n\nfunction getItemValue(answer: QuestionnaireResponseItemAnswer): TypedValue {\n  const itemValue = getTypedPropertyValue({ type: 'QuestionnaireItemAnswer', value: answer }, 'value') as TypedValue;\n  return itemValue;\n}\n\nfunction getCurrentAnswer(response: QuestionnaireResponseItem, index: number = 0): TypedValue {\n  const results = response.answer;\n  return getItemValue(results?.[index] ?? {});\n}\n\nfunction getCurrentMultiSelectAnswer(response: QuestionnaireResponseItem): string[] {\n  const results = response.answer;\n  if (!results) {\n    return [];\n  }\n  const typedValues = results.map((a) => getItemValue(a));\n  return typedValues.map((type) => formatCoding(type?.value) || type?.value);\n}\n\nfunction getCurrentRadioAnswer(options: [string, TypedValue][], defaultAnswer: TypedValue): string | undefined {\n  return options.find((option) => deepEquals(option[1].value, defaultAnswer?.value))?.[0];\n}\n\nfunction typedValueToString(typedValue: TypedValue | undefined): string | undefined {\n  if (!typedValue) {\n    return undefined;\n  }\n  if (typedValue.type === 'CodeableConcept') {\n    return formatCodeableConcept(typedValue.value);\n  }\n  if (typedValue.type === 'Coding') {\n    return formatCoding(typedValue.value);\n  }\n  if (typedValue.type === 'Reference') {\n    return formatReferenceString(typedValue);\n  }\n  return typedValue.value.toString();\n}\n\nfunction isDropDownChoice(item: QuestionnaireItem): boolean {\n  return !!item.extension?.some(\n    (e) =>\n      e.url === 'http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl' &&\n      e.valueCodeableConcept?.coding?.[0]?.code === 'drop-down'\n  );\n}\n\ninterface MultiSelect {\n  value: any;\n  label: any;\n}\n\ninterface FormattedData {\n  propertyName: string;\n  data: MultiSelect[];\n}\n\nfunction formatSelectData(item: QuestionnaireItem): FormattedData {\n  if (item.answerOption?.length === 0) {\n    return { propertyName: '', data: [] };\n  }\n  const option = (item.answerOption as QuestionnaireItemAnswerOption[])[0];\n  const optionValue = getTypedPropertyValue(\n    { type: 'QuestionnaireItemAnswerOption', value: option },\n    'value'\n  ) as TypedValue;\n  const propertyName = 'value' + capitalize(optionValue.type);\n\n  const data = (item.answerOption ?? []).map((a) => ({\n    value: getValueAndLabel(a, propertyName),\n    label: getValueAndLabel(a, propertyName),\n  }));\n  return { propertyName, data };\n}\n\nfunction getValueAndLabel(option: QuestionnaireItemAnswerOption, propertyName: string): string | undefined {\n  return formatCoding(option.valueCoding) || option[propertyName as keyof QuestionnaireItemAnswerOption]?.toString();\n}\n", "import {\n  deepClone,\n  evalFhirPathTyped,\n  formatCoding,\n  getExtension,\n  getTypedPropertyValue,\n  TypedValue,\n  getReferenceString,\n  stringify,\n} from '@medplum/core';\nimport {\n  Questionnaire,\n  QuestionnaireItem,\n  QuestionnaireItemAnswerOption,\n  QuestionnaireItemEnableWhen,\n  QuestionnaireItemInitial,\n  QuestionnaireResponse,\n  QuestionnaireResponseItem,\n  QuestionnaireResponseItemAnswer,\n  ResourceType,\n} from '@medplum/fhirtypes';\n\nexport enum QuestionnaireItemType {\n  group = 'group',\n  display = 'display',\n  question = 'question',\n  boolean = 'boolean',\n  decimal = 'decimal',\n  integer = 'integer',\n  date = 'date',\n  dateTime = 'dateTime',\n  time = 'time',\n  string = 'string',\n  text = 'text',\n  url = 'url',\n  choice = 'choice',\n  openChoice = 'open-choice',\n  attachment = 'attachment',\n  reference = 'reference',\n  quantity = 'quantity',\n}\n\nexport function isChoiceQuestion(item: QuestionnaireItem): boolean {\n  return item.type === 'choice' || item.type === 'open-choice';\n}\n\nexport function isQuestionEnabled(item: QuestionnaireItem, responseItems: QuestionnaireResponseItem[]): boolean {\n  if (!item.enableWhen) {\n    return true;\n  }\n\n  const enableBehavior = item.enableBehavior ?? 'any';\n\n  for (const enableWhen of item.enableWhen) {\n    const actualAnswers = getByLinkId(responseItems, enableWhen.question as string);\n\n    if (enableWhen.operator === 'exists' && !enableWhen.answerBoolean && !actualAnswers?.length) {\n      if (enableBehavior === 'any') {\n        return true;\n      } else {\n        continue;\n      }\n    }\n    const { anyMatch, allMatch } = checkAnswers(enableWhen, actualAnswers, enableBehavior);\n\n    if (enableBehavior === 'any' && anyMatch) {\n      return true;\n    }\n    if (enableBehavior === 'all' && !allMatch) {\n      return false;\n    }\n  }\n\n  return enableBehavior !== 'any';\n}\n\nexport function getNewMultiSelectValues(\n  selected: string[],\n  propertyName: string,\n  item: QuestionnaireItem\n): QuestionnaireResponseItemAnswer[] {\n  return selected.map((o) => {\n    const option = item.answerOption?.find(\n      (option) =>\n        formatCoding(option.valueCoding) === o || option[propertyName as keyof QuestionnaireItemAnswerOption] === o\n    );\n    const optionValue = getTypedPropertyValue(\n      { type: 'QuestionnaireItemAnswerOption', value: option },\n      'value'\n    ) as TypedValue;\n    return { [propertyName]: optionValue?.value };\n  });\n}\n\nfunction getByLinkId(\n  responseItems: QuestionnaireResponseItem[] | undefined,\n  linkId: string\n): QuestionnaireResponseItemAnswer[] | undefined {\n  if (!responseItems) {\n    return undefined;\n  }\n\n  for (const response of responseItems) {\n    if (response.linkId === linkId) {\n      return response.answer;\n    }\n    if (response.item) {\n      const nestedAnswer = getByLinkId(response.item, linkId);\n      if (nestedAnswer) {\n        return nestedAnswer;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nfunction evaluateMatch(actualAnswer: TypedValue | undefined, expectedAnswer: TypedValue, operator?: string): boolean {\n  // We handle exists separately since its so different in terms of comparisons than the other mathematical operators\n  if (operator === 'exists') {\n    // if actualAnswer is not undefined, then exists: true passes\n    // if actualAnswer is undefined, then exists: false passes\n    return !!actualAnswer === expectedAnswer.value;\n  } else if (!actualAnswer) {\n    return false;\n  } else {\n    // `=` and `!=` should be treated as the FHIRPath `~` and `!~`\n    // All other operators should be unmodified\n    const fhirPathOperator = operator === '=' || operator === '!=' ? operator?.replace('=', '~') : operator;\n    const [{ value }] = evalFhirPathTyped(`%actualAnswer ${fhirPathOperator} %expectedAnswer`, [actualAnswer], {\n      actualAnswer,\n      expectedAnswer,\n    });\n    return value;\n  }\n}\n\nfunction checkAnswers(\n  enableWhen: QuestionnaireItemEnableWhen,\n  answers: QuestionnaireResponseItemAnswer[] | undefined,\n  enableBehavior: 'any' | 'all'\n): { anyMatch: boolean; allMatch: boolean } {\n  const actualAnswers = answers || [];\n  const expectedAnswer = getTypedPropertyValue(\n    {\n      type: 'QuestionnaireItemEnableWhen',\n      value: enableWhen,\n    },\n    'answer[x]'\n  ) as TypedValue;\n\n  let anyMatch = false;\n  let allMatch = true;\n\n  for (const actualAnswerValue of actualAnswers) {\n    const actualAnswer = getTypedPropertyValue(\n      {\n        type: 'QuestionnaireResponseItemAnswer',\n        value: actualAnswerValue,\n      },\n      'value[x]'\n    ) as TypedValue | undefined; // possibly undefined when question unanswered\n    const { operator } = enableWhen;\n    const match = evaluateMatch(actualAnswer, expectedAnswer, operator);\n    if (match) {\n      anyMatch = true;\n    } else {\n      allMatch = false;\n    }\n\n    if (enableBehavior === 'any' && anyMatch) {\n      break;\n    }\n  }\n\n  return { anyMatch, allMatch };\n}\n\nexport function getQuestionnaireItemReferenceTargetTypes(item: QuestionnaireItem): ResourceType[] | undefined {\n  const extension = getExtension(item, 'http://hl7.org/fhir/StructureDefinition/questionnaire-referenceResource');\n  if (!extension) {\n    return undefined;\n  }\n  if (extension.valueCode !== undefined) {\n    return [extension.valueCode] as ResourceType[];\n  }\n  if (extension.valueCodeableConcept) {\n    return extension.valueCodeableConcept?.coding?.map((c) => c.code) as ResourceType[];\n  }\n  return undefined;\n}\n\nexport function setQuestionnaireItemReferenceTargetTypes(\n  item: QuestionnaireItem,\n  targetTypes: ResourceType[] | undefined\n): QuestionnaireItem {\n  const result = deepClone(item);\n  let extension = getExtension(result, 'http://hl7.org/fhir/StructureDefinition/questionnaire-referenceResource');\n\n  if (!targetTypes || targetTypes.length === 0) {\n    if (extension) {\n      result.extension = result.extension?.filter((e) => e !== extension);\n    }\n    return result;\n  }\n\n  if (!extension) {\n    if (!result.extension) {\n      result.extension = [];\n    }\n    extension = { url: 'http://hl7.org/fhir/StructureDefinition/questionnaire-referenceResource' };\n    result.extension.push(extension);\n  }\n\n  if (targetTypes.length === 1) {\n    extension.valueCode = targetTypes[0];\n    delete extension.valueCodeableConcept;\n  } else {\n    extension.valueCodeableConcept = { coding: targetTypes.map((t) => ({ code: t })) };\n    delete extension.valueCode;\n  }\n\n  return result;\n}\n\nexport function buildInitialResponse(questionnaire: Questionnaire): QuestionnaireResponse {\n  const response: QuestionnaireResponse = {\n    resourceType: 'QuestionnaireResponse',\n    questionnaire: getReferenceString(questionnaire),\n    item: buildInitialResponseItems(questionnaire.item),\n  };\n\n  return response;\n}\n\nfunction buildInitialResponseItems(items: QuestionnaireItem[] | undefined): QuestionnaireResponseItem[] {\n  return items?.map(buildInitialResponseItem) ?? [];\n}\n\nexport function buildInitialResponseItem(item: QuestionnaireItem): QuestionnaireResponseItem {\n  return {\n    id: generateId(),\n    linkId: item.linkId,\n    text: item.text,\n    item: buildInitialResponseItems(item.item),\n    answer: item.initial?.map(buildInitialResponseAnswer) ?? [],\n  };\n}\n\nlet nextId = 1;\nfunction generateId(): string {\n  return 'id-' + nextId++;\n}\n\nfunction buildInitialResponseAnswer(answer: QuestionnaireItemInitial): QuestionnaireResponseItemAnswer {\n  // This works because QuestionnaireItemInitial and QuestionnaireResponseItemAnswer\n  // have the same properties.\n  return { ...answer };\n}\n\nexport function formatReferenceString(typedValue: TypedValue): string {\n  return typedValue.value.display || typedValue.value.reference || stringify(typedValue.value);\n}\n\n/**\n * Returns the number of pages in the questionnaire.\n *\n * By default, a questionnaire is represented as a simple single page questionnaire,\n * so the default return value is 1.\n *\n * If the questionnaire has a page extension on the first item, then the number of pages\n * is the number of top level items in the questionnaire.\n *\n * @param questionnaire - The questionnaire to get the number of pages for.\n * @returns The number of pages in the questionnaire. Default is 1.\n */\nexport function getNumberOfPages(questionnaire: Questionnaire): number {\n  const firstItem = questionnaire?.item?.[0];\n  if (firstItem) {\n    const extension = getExtension(firstItem, 'http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl');\n    if (extension?.valueCodeableConcept?.coding?.[0]?.code === 'page') {\n      return (questionnaire.item as QuestionnaireItem[]).length;\n    }\n  }\n  return 1;\n}\n", "import { Title } from '@mantine/core';\nimport { ProfileResource, createReference, getReferenceString } from '@medplum/core';\nimport {\n  Questionnaire,\n  QuestionnaireItem,\n  QuestionnaireResponse,\n  QuestionnaireResponseItem,\n  Reference,\n} from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport React, { useEffect, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { buildInitialResponse, getNumberOfPages, isQuestionEnabled } from '../utils/questionnaire';\nimport { QuestionnairePageSequence } from './QuestionnaireFormComponents/QuestionnaireFormPageSequence';\n\nexport interface QuestionnaireFormProps {\n  questionnaire: Questionnaire | Reference<Questionnaire>;\n  subject?: Reference;\n  submitButtonText?: string;\n  onSubmit: (response: QuestionnaireResponse) => void;\n}\n\nexport function QuestionnaireForm(props: QuestionnaireFormProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const source = medplum.getProfile();\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const questionnaire = useResource(props.questionnaire);\n  const [response, setResponse] = useState<QuestionnaireResponse | undefined>();\n  const [activePage, setActivePage] = useState(0);\n\n  useEffect(() => {\n    medplum\n      .requestSchema('Questionnaire')\n      .then(() => medplum.requestSchema('QuestionnaireResponse'))\n      .then(() => setSchemaLoaded(true))\n      .catch(console.log);\n  }, [medplum]);\n\n  useEffect(() => {\n    setResponse(questionnaire ? buildInitialResponse(questionnaire) : undefined);\n  }, [questionnaire]);\n\n  function setItems(newResponseItems: QuestionnaireResponseItem | QuestionnaireResponseItem[]): void {\n    const currentItems = response?.item ?? [];\n    const mergedItems = mergeItems(\n      currentItems,\n      Array.isArray(newResponseItems) ? newResponseItems : [newResponseItems]\n    );\n\n    const newResponse: QuestionnaireResponse = {\n      resourceType: 'QuestionnaireResponse',\n      item: mergedItems,\n    };\n\n    setResponse(newResponse);\n  }\n\n  function checkForQuestionEnabled(item: QuestionnaireItem): boolean {\n    return isQuestionEnabled(item, response?.item ?? []);\n  }\n\n  if (!schemaLoaded || !questionnaire) {\n    return null;\n  }\n\n  const numberOfPages = getNumberOfPages(questionnaire);\n  const nextStep = (): void => setActivePage((current) => current + 1);\n  const prevStep = (): void => setActivePage((current) => current - 1);\n\n  return (\n    <Form\n      testid=\"questionnaire-form\"\n      onSubmit={() => {\n        if (props.onSubmit && response) {\n          props.onSubmit({\n            ...response,\n            questionnaire: getReferenceString(questionnaire),\n            subject: props.subject,\n            source: createReference(source as ProfileResource),\n            authored: new Date().toISOString(),\n            status: 'completed',\n          });\n        }\n      }}\n    >\n      {questionnaire.title && <Title>{questionnaire.title}</Title>}\n      <QuestionnairePageSequence\n        items={questionnaire.item ?? []}\n        response={response}\n        onChange={setItems}\n        renderPages={numberOfPages > 1}\n        activePage={activePage}\n        numberOfPages={numberOfPages}\n        submitButtonText={props.submitButtonText}\n        checkForQuestionEnabled={checkForQuestionEnabled}\n        nextStep={nextStep}\n        prevStep={prevStep}\n      />\n    </Form>\n  );\n}\n\nfunction mergeIndividualItems(\n  prevItem: QuestionnaireResponseItem,\n  newItem: QuestionnaireResponseItem\n): QuestionnaireResponseItem {\n  // Recursively merge the nested items based on their ids.\n  const mergedNestedItems = mergeItems(prevItem.item ?? [], newItem.item ?? []);\n\n  return {\n    ...newItem,\n    item: mergedNestedItems.length > 0 ? mergedNestedItems : undefined,\n    answer: newItem.answer && newItem.answer.length > 0 ? newItem.answer : prevItem.answer,\n  };\n}\n\nfunction mergeItems(\n  prevItems: QuestionnaireResponseItem[],\n  newItems: QuestionnaireResponseItem[]\n): QuestionnaireResponseItem[] {\n  const result: QuestionnaireResponseItem[] = [];\n  const usedIds = new Set<string>();\n\n  for (const prevItem of prevItems) {\n    const itemId = prevItem.id;\n    const newItem = newItems.find((item) => item.id === itemId);\n\n    if (newItem) {\n      result.push(mergeIndividualItems(prevItem, newItem));\n      usedIds.add(newItem.id as string);\n    } else {\n      result.push(prevItem);\n    }\n  }\n\n  // Add items from newItems that were not in prevItems.\n  for (const newItem of newItems) {\n    if (!usedIds.has(newItem.id as string)) {\n      result.push(newItem);\n    }\n  }\n\n  return result;\n}\n", "import { Button, Group, Stack, Stepper } from '@mantine/core';\nimport { QuestionnaireItem, QuestionnaireResponse, QuestionnaireResponseItem } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { QuestionnaireItemType } from '../../utils/questionnaire';\nimport { QuestionnaireRepeatableItem } from '../QuestionnaireFormItem/QuestionnaireRepeatableItem';\nimport { QuestionnaireRepeatedGroup } from './QuestionnaireFormGroup';\n\ninterface QuestionnairePageSequenceProps {\n  readonly items: QuestionnaireItem[];\n  readonly response?: QuestionnaireResponse;\n  readonly renderPages: boolean;\n  readonly activePage?: number;\n  readonly numberOfPages: number;\n  readonly submitButtonText?: string;\n  readonly checkForQuestionEnabled: (item: QuestionnaireItem) => boolean;\n  readonly onChange: (items: QuestionnaireResponseItem | QuestionnaireResponseItem[]) => void;\n  readonly nextStep: () => void;\n  readonly prevStep: () => void;\n}\n\nexport function QuestionnairePageSequence(props: QuestionnairePageSequenceProps): JSX.Element {\n  const {\n    items,\n    response,\n    activePage,\n    onChange,\n    nextStep,\n    prevStep,\n    numberOfPages,\n    renderPages,\n    submitButtonText,\n    checkForQuestionEnabled,\n  } = props;\n\n  const form = items.map((item) => {\n    const itemResponse = response?.item?.filter((i) => i.linkId === item.linkId) ?? [];\n\n    const repeatedItem =\n      item.type === QuestionnaireItemType.group ? (\n        <QuestionnaireRepeatedGroup\n          key={item.linkId}\n          item={item}\n          response={itemResponse}\n          onChange={onChange}\n          checkForQuestionEnabled={checkForQuestionEnabled}\n        />\n      ) : (\n        <QuestionnaireRepeatableItem\n          key={item.linkId}\n          item={item}\n          response={itemResponse?.[0]}\n          onChange={onChange}\n          checkForQuestionEnabled={checkForQuestionEnabled}\n        />\n      );\n\n    if (renderPages) {\n      return (\n        <Stepper.Step key={item.linkId} label={item.text}>\n          {repeatedItem}\n        </Stepper.Step>\n      );\n    }\n    return repeatedItem;\n  });\n\n  return (\n    <>\n      {renderPages && (\n        <Stepper active={activePage ?? 0} allowNextStepsSelect={false} p={6}>\n          {form}\n        </Stepper>\n      )}\n      {!renderPages && <Stack>{form}</Stack>}\n      <ButtonGroup\n        activePage={activePage ?? 0}\n        numberOfPages={numberOfPages}\n        nextStep={nextStep}\n        prevStep={prevStep}\n        submitButtonText={submitButtonText}\n      />\n    </>\n  );\n}\n\ninterface ButtonGroupProps {\n  readonly activePage: number;\n  readonly numberOfPages: number;\n  readonly submitButtonText?: string;\n  readonly nextStep: () => void;\n  readonly prevStep: () => void;\n}\n\nfunction ButtonGroup(props: ButtonGroupProps): JSX.Element {\n  const showBackButton = props.activePage > 0;\n  const showNextButton = props.activePage < props.numberOfPages - 1;\n  const showSubmitButton = props.activePage === props.numberOfPages - 1;\n\n  return (\n    <Group position=\"right\" mt=\"xl\" spacing=\"xs\">\n      {showBackButton && <Button onClick={props.prevStep}>Back</Button>}\n      {showNextButton && (\n        <Button\n          onClick={(e) => {\n            const form = e.currentTarget.closest('form') as HTMLFormElement;\n            if (form.reportValidity()) {\n              props.nextStep();\n            }\n          }}\n        >\n          Next\n        </Button>\n      )}\n      {showSubmitButton && <Button type=\"submit\">{props.submitButtonText ?? 'Submit'}</Button>}\n    </Group>\n  );\n}\n", "import { Anchor } from '@mantine/core';\nimport { QuestionnaireItem, QuestionnaireResponseItem } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { FormSection } from '../../FormSection/FormSection';\nimport { QuestionnaireItemType } from '../../utils/questionnaire';\nimport { QuestionnaireFormItem } from './QuestionnaireFormItem';\n\ninterface QuestionnaireRepeatableItemProps {\n  readonly item: QuestionnaireItem;\n  readonly response?: QuestionnaireResponseItem;\n  readonly checkForQuestionEnabled: (item: QuestionnaireItem) => boolean;\n  readonly onChange: (items: QuestionnaireResponseItem[]) => void;\n}\n\nexport function QuestionnaireRepeatableItem(props: QuestionnaireRepeatableItemProps): JSX.Element | null {\n  const { item, response, onChange } = props;\n  const [number, setNumber] = useState(getNumberOfRepeats(item, response ?? {}));\n  if (!props.checkForQuestionEnabled(item)) {\n    return null;\n  }\n\n  if (!response) {\n    return null;\n  }\n\n  if (item.type === QuestionnaireItemType.display) {\n    return <p key={item.linkId}>{item.text}</p>;\n  }\n\n  const showAddButton =\n    item?.repeats && item.type !== QuestionnaireItemType.choice && item.type !== QuestionnaireItemType.openChoice;\n\n  // Styling reason to avoid duplicate text\n  if (item.type === QuestionnaireItemType.boolean) {\n    return (\n      <QuestionnaireFormItem\n        key={item.linkId}\n        item={item}\n        response={response}\n        onChange={(r) => onChange([r])}\n        index={0}\n      />\n    );\n  }\n\n  return (\n    <FormSection\n      key={props.item.linkId}\n      htmlFor={props.item.linkId}\n      title={props.item.text}\n      withAsterisk={props.item.required}\n    >\n      {[...Array(number)].map((_, index) => (\n        <QuestionnaireFormItem\n          key={`${item.linkId}-${index}`}\n          item={item}\n          response={response}\n          onChange={(r) => onChange([r])}\n          index={index}\n        />\n      ))}\n      {showAddButton && <Anchor onClick={() => setNumber((n) => n + 1)}>Add Item</Anchor>}\n    </FormSection>\n  );\n}\n\nfunction getNumberOfRepeats(item: QuestionnaireItem, response: QuestionnaireResponseItem): number {\n  if (item.type === QuestionnaireItemType.choice || item.type === QuestionnaireItemType.openChoice) {\n    return 1;\n  }\n  const answers = response.answer;\n  return answers?.length ? answers.length : 1;\n}\n", "import { Anchor, Stack, Title } from '@mantine/core';\nimport { QuestionnaireItem, QuestionnaireResponseItem } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { QuestionnaireItemType, buildInitialResponseItem } from '../../utils/questionnaire';\nimport { QuestionnaireRepeatableItem } from '../QuestionnaireFormItem/QuestionnaireRepeatableItem';\n\ninterface QuestionnaireRepeatableGroupProps {\n  readonly item: QuestionnaireItem;\n  readonly response: QuestionnaireResponseItem[];\n  readonly checkForQuestionEnabled: (item: QuestionnaireItem) => boolean;\n  readonly onChange: (responses: QuestionnaireResponseItem[]) => void;\n}\n\nexport function QuestionnaireRepeatedGroup(props: QuestionnaireRepeatableGroupProps): JSX.Element | null {\n  const [responses, setResponses] = useState(props.response);\n\n  if (responses.length === 0) {\n    return null;\n  }\n\n  function handleRepeatableGroup(newResponseItems: QuestionnaireResponseItem[], index: number): void {\n    const newResponses = responses.map((responses, idx) => (idx === index ? newResponseItems[0] : responses));\n    setResponses(newResponses);\n    props.onChange(newResponses);\n  }\n\n  function insertNewGroup(): void {\n    const newResponse = buildInitialResponseItem(props.item);\n    setResponses([...responses, newResponse]);\n  }\n\n  return (\n    <>\n      {responses.map((response, idx) => (\n        <QuestionnaireGroup\n          key={response.id}\n          item={props.item}\n          response={response}\n          checkForQuestionEnabled={props.checkForQuestionEnabled}\n          onChange={(r) => handleRepeatableGroup(r, idx)}\n        />\n      ))}\n      {props.item.repeats && <Anchor onClick={insertNewGroup}>{`Add Group: ${props.item.text}`}</Anchor>}\n    </>\n  );\n}\n\ninterface QuestionnaireGroupProps {\n  readonly item: QuestionnaireItem;\n  readonly response: QuestionnaireResponseItem;\n  readonly checkForQuestionEnabled: (item: QuestionnaireItem) => boolean;\n  readonly onChange: (response: QuestionnaireResponseItem[]) => void;\n}\n\nexport function QuestionnaireGroup(props: QuestionnaireGroupProps): JSX.Element | null {\n  const { response, checkForQuestionEnabled, onChange } = props;\n  function onSetGroup(newResponseItem: QuestionnaireResponseItem[]): void {\n    const newResponse = response.item?.map((current) => {\n      const matchingItem = newResponseItem.find((newResponse) => newResponse.id === current.id);\n      return matchingItem ?? current;\n    }) as QuestionnaireResponseItem[];\n    // This checks to see if there were any nested repeated groups that we need to add\n    const mergedResponse = newResponse?.concat(newResponseItem.slice(1)) as QuestionnaireResponseItem;\n    const groupResponse = { ...response, item: mergedResponse } as QuestionnaireResponseItem;\n    onChange([groupResponse]);\n  }\n\n  if (!props.checkForQuestionEnabled(props.item)) {\n    return null;\n  }\n\n  return (\n    <div key={props.item.linkId}>\n      {props.item.text && (\n        <Title order={3} mb=\"md\">\n          {props.item.text}\n        </Title>\n      )}\n      <Stack>\n        {props.item.item?.map((item) => {\n          if (item.type === QuestionnaireItemType.group) {\n            return item.repeats ? (\n              <QuestionnaireRepeatedGroup\n                key={item.linkId}\n                item={item}\n                response={response.item?.filter((i) => i.linkId === item.linkId) ?? []}\n                checkForQuestionEnabled={checkForQuestionEnabled}\n                onChange={onSetGroup}\n              />\n            ) : (\n              <QuestionnaireGroup\n                key={item.linkId}\n                item={item}\n                checkForQuestionEnabled={checkForQuestionEnabled}\n                response={response.item?.find((i) => i.linkId === item.linkId) ?? {}}\n                onChange={onSetGroup}\n              />\n            );\n          }\n          return (\n            <QuestionnaireRepeatableItem\n              key={item.linkId}\n              item={item}\n              response={response.item?.find((i) => i.linkId === item.linkId)}\n              onChange={onSetGroup}\n              checkForQuestionEnabled={checkForQuestionEnabled}\n            />\n          );\n        })}\n      </Stack>\n    </div>\n  );\n}\n", "import { ActionIcon, Button, createStyles, Divider, Group, NativeSelect, Stack, Text, TextInput } from '@mantine/core';\nimport { formatRange, getCodeBySystem } from '@medplum/core';\nimport { CodeableConcept, ObservationDefinition, ObservationDefinitionQualifiedInterval } from '@medplum/fhirtypes';\nimport { IconCircleMinus, IconCirclePlus } from '@tabler/icons-react';\nimport React, { useEffect, useState } from 'react';\nimport { Container } from '../Container/Container';\nimport { Form } from '../Form/Form';\nimport { RangeInput } from '../RangeInput/RangeInput';\nimport { killEvent } from '../utils/dom';\n\nconst useStyles = createStyles((theme) => ({\n  section: {\n    position: 'relative',\n    margin: '4px 4px 8px 0',\n    padding: '6px 12px 16px 6px',\n    border: `1.5px solid ${theme.colors.gray[3]}`,\n    borderRadius: theme.radius.sm,\n    transition: 'all 0.1s',\n  },\n}));\n\n// Properties of qualified intervals used for grouping\nconst intervalFilters = ['gender', 'age', 'gestationalAge', 'context', 'appliesTo', 'category'] as const;\n\nexport interface ReferenceRangeEditorProps {\n  definition: ObservationDefinition;\n  onSubmit: (result: ObservationDefinition) => void;\n}\n\n// Helper type that groups of qualified intervals by equal filter criteria\nexport type IntervalGroup = {\n  id: string;\n  filters: Record<string, any>;\n  intervals: ObservationDefinitionQualifiedInterval[];\n};\n\nconst defaultProps: ReferenceRangeEditorProps = {\n  definition: { resourceType: 'ObservationDefinition' },\n  onSubmit: () => {\n    return undefined;\n  },\n};\n\nexport function ReferenceRangeEditor(props: ReferenceRangeEditorProps): JSX.Element {\n  props = Object.assign(defaultProps, props);\n  const defaultDefinition = props.definition;\n\n  const [intervalGroups, setIntervalGroups] = useState<IntervalGroup[]>([]);\n  const [groupId, setGroupId] = useState(1);\n  const [intervalId, setIntervalId] = useState(1);\n\n  useEffect(() => {\n    const definition = ensureQualifiedIntervalKeys(defaultDefinition, setIntervalId);\n    setIntervalGroups(groupQualifiedIntervals(definition.qualifiedInterval || [], setGroupId));\n  }, [defaultDefinition]);\n\n  return (\n    <Form testid=\"reference-range-editor\" onSubmit={submitDefinition}>\n      <Stack>\n        {intervalGroups.map((intervalGroup) => (\n          <ReferenceRangeGroupEditor\n            unit={getUnitString(defaultDefinition.quantitativeDetails?.unit)}\n            onChange={changeInterval}\n            onAdd={addInterval}\n            onRemove={removeInterval}\n            onRemoveGroup={removeGroup}\n            key={`group-${intervalGroup.id}`}\n            intervalGroup={intervalGroup}\n          />\n        ))}\n      </Stack>\n      <ActionIcon\n        title=\"Add Group\"\n        size=\"sm\"\n        onClick={(e: React.MouseEvent) => {\n          killEvent(e);\n          addGroup({ id: `group-id-${groupId}`, filters: {} as IntervalGroup['filters'], intervals: [] });\n          setGroupId((id) => id + 1);\n        }}\n      >\n        <IconCirclePlus />\n      </ActionIcon>\n\n      <Group position=\"right\">\n        <Button type=\"submit\">Save</Button>\n      </Group>\n    </Form>\n  );\n\n  /**\n   * Submit qualified intervals\n   */\n\n  function submitDefinition(): void {\n    const qualifiedInterval = intervalGroups\n      .flatMap((group) => group.intervals)\n      .filter((interval) => !isEmptyInterval(interval));\n    props.onSubmit({ ...defaultDefinition, qualifiedInterval });\n  }\n\n  /**\n   * Add Remove Interval Groups\n   */\n\n  function addGroup(addedGroup: IntervalGroup): void {\n    setIntervalGroups((currentGroups) => [...currentGroups, addedGroup]);\n  }\n\n  function removeGroup(removedGroup: IntervalGroup): void {\n    setIntervalGroups((currentGroups) => currentGroups.filter((group) => group.id !== removedGroup.id));\n  }\n\n  /**\n   * Add/Remove/Update specific Qualified Intervals\n   * @param groupId - The reference range group ID.\n   * @param changedInterval - The updated reference range interval.\n   */\n  function changeInterval(groupId: string, changedInterval: ObservationDefinitionQualifiedInterval): void {\n    setIntervalGroups((groups) => {\n      groups = [...groups];\n      const currentGroup = groups.find((g) => g.id === groupId);\n\n      const index = currentGroup?.intervals.findIndex((interval) => interval.id === changedInterval.id);\n      if (index !== undefined && currentGroup?.intervals[index]) {\n        currentGroup.intervals[index] = changedInterval;\n      }\n      return groups;\n    });\n  }\n\n  function addInterval(groupId: string, addedInterval: ObservationDefinitionQualifiedInterval): void {\n    if (addedInterval.id === undefined) {\n      addedInterval.id = `id-${intervalId}`;\n      setIntervalId((id) => id + 1);\n    }\n    setIntervalGroups((groups) => {\n      groups = [...groups];\n      const currentGroupIndex = groups.findIndex((g) => g.id === groupId);\n\n      if (currentGroupIndex !== -1) {\n        const currentGroup = { ...groups[currentGroupIndex] };\n        addedInterval = { ...addedInterval, ...currentGroup.filters };\n        currentGroup.intervals = [...currentGroup.intervals, addedInterval];\n        groups[currentGroupIndex] = currentGroup;\n      }\n\n      return groups;\n    });\n  }\n\n  function removeInterval(groupId: string, removedInterval: ObservationDefinitionQualifiedInterval): void {\n    setIntervalGroups((groups) => {\n      groups = [...groups];\n      const currentGroup = groups.find((g) => g.id === groupId);\n      if (currentGroup) {\n        currentGroup.intervals = currentGroup.intervals.filter((interval) => interval.id !== removedInterval.id);\n      }\n      return groups;\n    });\n  }\n}\n\n/**\n * Helper component that renders an \"interval group\", which is a set of ObservationDefinitionQualifiedIntervals\n * that have the same filter values\n */\nexport interface ReferenceRangeGroupEditorProps {\n  intervalGroup: IntervalGroup;\n  unit: string | undefined;\n  onChange: (groupId: string, changed: ObservationDefinitionQualifiedInterval) => void;\n  onAdd: (groupId: string, added: ObservationDefinitionQualifiedInterval) => void;\n  onRemove: (groupId: string, removed: ObservationDefinitionQualifiedInterval) => void;\n  onRemoveGroup: (removedGroup: IntervalGroup) => void;\n}\n\nexport function ReferenceRangeGroupEditor(props: ReferenceRangeGroupEditorProps): JSX.Element {\n  const { intervalGroup, unit } = props;\n  const { classes } = useStyles();\n  return (\n    <Container data-testid={intervalGroup.id} className={classes.section}>\n      <Stack spacing={'lg'}>\n        <Group position=\"right\">\n          <ActionIcon\n            title=\"Remove Group\"\n            data-testid={`remove-group-button-${intervalGroup.id}`}\n            key={`remove-group-button-${intervalGroup.id}`}\n            size=\"sm\"\n            onClick={(e: React.MouseEvent) => {\n              killEvent(e);\n              props.onRemoveGroup(intervalGroup);\n            }}\n          >\n            <IconCircleMinus />\n          </ActionIcon>\n        </Group>\n        <ReferenceRangeGroupFilters intervalGroup={intervalGroup} onChange={props.onChange} />\n        <Divider />\n        {intervalGroup.intervals.map((interval) => (\n          <Stack key={`interval-${interval.id}`} spacing={'xs'}>\n            <Group>\n              <TextInput\n                key={`condition-${interval.id}`}\n                data-testid={`condition-${interval.id}`}\n                defaultValue={interval.condition}\n                label={'Condition: '}\n                size={'sm'}\n                onChange={(e) => {\n                  killEvent(e);\n                  props.onChange(intervalGroup.id, { ...interval, condition: e.currentTarget.value.trim() });\n                }}\n              />\n              <ActionIcon\n                title=\"Remove Interval\"\n                size=\"sm\"\n                key={`remove-interval-${interval.id}`}\n                data-testid={`remove-interval-${interval.id}`}\n                onClick={(e: React.MouseEvent) => {\n                  killEvent(e);\n                  props.onRemove(intervalGroup.id, interval);\n                }}\n              >\n                <IconCircleMinus />\n              </ActionIcon>\n            </Group>\n\n            <RangeInput\n              onChange={(range) => {\n                props.onChange(intervalGroup.id, { ...interval, range });\n              }}\n              key={`range-${interval.id}`}\n              name={`range-${interval.id}`}\n              defaultValue={interval.range}\n            />\n          </Stack>\n        ))}\n        <ActionIcon\n          title=\"Add Interval\"\n          size=\"sm\"\n          onClick={(e: React.MouseEvent) => {\n            killEvent(e);\n            props.onAdd(intervalGroup.id, {\n              range: {\n                low: { unit },\n                high: { unit },\n              },\n            });\n          }}\n        >\n          <IconCirclePlus />\n        </ActionIcon>\n      </Stack>\n    </Container>\n  );\n}\n\ninterface ReferenceRangeGroupFiltersProps {\n  intervalGroup: IntervalGroup;\n  onChange: ReferenceRangeGroupEditorProps['onChange'];\n}\n\n/**\n * Render the \"filters\" section of the IntervalGroup.\n * @param props - The ReferenceRangeGroupFilter React props.\n * @returns The ReferenceRangeGroupFilter React node.\n */\nfunction ReferenceRangeGroupFilters(props: ReferenceRangeGroupFiltersProps): JSX.Element {\n  const { intervalGroup, onChange } = props;\n\n  // Pre-populate the units of the age filter\n  if (!intervalGroup.filters.age) {\n    intervalGroup.filters.age = {};\n  }\n  for (const key of ['low', 'high']) {\n    if (!intervalGroup.filters.age[key]?.unit) {\n      intervalGroup.filters.age[key] = {\n        ...intervalGroup.filters.age[key],\n        unit: 'years',\n        system: 'http://unitsofmeasure.org',\n      };\n    }\n  }\n\n  return (\n    <Stack style={{ maxWidth: '50%' }}>\n      <Group>\n        <NativeSelect\n          data={['', 'male', 'female']}\n          label=\"Gender:\"\n          defaultValue={intervalGroup.filters.gender || ''}\n          onChange={(e) => {\n            for (const interval of intervalGroup.intervals) {\n              let newGender: string | undefined = e.currentTarget.value;\n              if (newGender === '') {\n                newGender = undefined;\n              }\n              onChange(intervalGroup.id, {\n                ...interval,\n                gender: newGender as ObservationDefinitionQualifiedInterval['gender'],\n              });\n            }\n          }}\n        />\n      </Group>\n      <Group spacing={'xs'}>\n        <Text component=\"label\" htmlFor={`div-age-${intervalGroup.id}`}>\n          Age:\n        </Text>\n        <div id={`div-age-${intervalGroup.id}`}>\n          <RangeInput\n            key={`age-${intervalGroup.id}`}\n            name={`age-${intervalGroup.id}`}\n            defaultValue={intervalGroup.filters['age']}\n            onChange={(ageRange) => {\n              for (const interval of intervalGroup.intervals) {\n                onChange(intervalGroup.id, { ...interval, age: ageRange });\n              }\n            }}\n          />\n        </div>\n      </Group>\n      <NativeSelect\n        data={['', 'pre-puberty', 'follicular', 'midcycle', 'luteal', 'postmenopausal']}\n        label=\"Endocrine:\"\n        defaultValue={intervalGroup.filters.context?.text || ''}\n        onChange={(e) => {\n          for (const interval of intervalGroup.intervals) {\n            let newEndocrine: string | undefined = e.currentTarget.value;\n            if (newEndocrine === '') {\n              newEndocrine = undefined;\n              onChange(intervalGroup.id, { ...interval, context: undefined });\n            } else {\n              onChange(intervalGroup.id, {\n                ...interval,\n                context: {\n                  text: newEndocrine,\n                  coding: [\n                    { code: newEndocrine, system: 'http://terminology.hl7.org/CodeSystem/referencerange-meaning' },\n                  ],\n                },\n              });\n            }\n          }\n        }}\n      />\n      <NativeSelect\n        data={['', 'reference', 'critical', 'absolute']}\n        label=\"Category: \"\n        defaultValue={intervalGroup.filters.category}\n        onChange={(e) => {\n          for (const interval of intervalGroup.intervals) {\n            const newCategory: string | undefined = e.currentTarget.value;\n            if (newCategory === '') {\n              onChange(intervalGroup.id, { ...interval, category: undefined });\n            } else {\n              onChange(intervalGroup.id, {\n                ...interval,\n                category: newCategory as 'reference' | 'critical' | 'absolute',\n              });\n            }\n          }\n        }}\n      />\n    </Stack>\n  );\n}\n\n/**\n * Helper function that assigns ids to each qualifiedInterval of an ObservationDefinition\n * @param definition - An ObservationDefinition\n * @param setIntervalId - React setState function for the intervalId\n * @returns The updated observation definition.\n */\nfunction ensureQualifiedIntervalKeys(\n  definition: ObservationDefinition,\n  setIntervalId: (id: number) => void\n): ObservationDefinition {\n  const intervals = definition.qualifiedInterval || [];\n  // Set the nextId to the max of any existing numeric id\n  let nextId =\n    Math.max(\n      ...intervals.map((interval) => {\n        const existingNum = parseInt(interval.id?.substring(3) || '', 10);\n        return !isNaN(existingNum) ? existingNum : Number.NEGATIVE_INFINITY;\n      })\n    ) + 1;\n\n  if (!Number.isFinite(nextId)) {\n    nextId = 1;\n  }\n\n  // If an interval doesn't have an id, set it to the nextId\n  definition = {\n    ...definition,\n    qualifiedInterval: intervals.map((interval) => ({\n      ...interval,\n      id: interval.id || `id-${nextId++}`,\n    })),\n  };\n  setIntervalId(nextId);\n  return definition;\n}\n\n/**\n * Group all ObservationDefinitionQualifiedIntervals based on the values of their \"filter\" properties,\n * so that similar ranges can be grouped together.\n * @param intervals - Array of reference range intervals.\n * @param setGroupId - Callback to set the group ID.\n * @returns The grouped intervals.\n */\nfunction groupQualifiedIntervals(\n  intervals: ObservationDefinitionQualifiedInterval[],\n  setGroupId: (id: number) => void\n): IntervalGroup[] {\n  let groupId = 1;\n  const groups: Record<string, IntervalGroup> = {};\n  for (const interval of intervals) {\n    const groupKey = generateGroupKey(interval);\n    if (!(groupKey in groups)) {\n      groups[groupKey] = {\n        id: `group-id-${groupId++}`,\n        filters: Object.fromEntries(intervalFilters.map((f) => [f, interval[f]])) as Record<string, any>,\n        intervals: [],\n      };\n    }\n    groups[groupKey].intervals.push(interval);\n  }\n  setGroupId(groupId);\n  return Object.values(groups);\n}\n\n/**\n * Generates a unique string for each set of filter values, so that similarly filtered intervals can be grouped together.\n * @param interval - The reference range interval.\n * @returns A \"group key\" that corresponds to the value of the interval filter properties.\n */\nfunction generateGroupKey(interval: ObservationDefinitionQualifiedInterval): string {\n  const results = [\n    `gender=${interval.gender}`,\n    `age=${formatRange(interval.age)}`,\n    `gestationalAge=${formatRange(interval.gestationalAge)}`,\n    `context=${interval.context?.text}`,\n    `appliesTo=${interval.appliesTo?.map((c) => c.text).join('+')}`,\n    `category=${interval.category}`,\n  ];\n\n  return results.join(':');\n}\n\nfunction getUnitString(unit: CodeableConcept | undefined): string | undefined {\n  return unit && (getCodeBySystem(unit, 'http://unitsofmeasure.org') || unit.text);\n}\n\nfunction isEmptyInterval(interval: ObservationDefinitionQualifiedInterval): boolean {\n  return interval.range?.low?.value === undefined && interval.range?.high?.value === undefined;\n}\n", "import { Button, Grid, Text } from '@mantine/core';\nimport { formatDateTime, getReferenceString } from '@medplum/core';\nimport { Bundle, BundleEntry, Reference, RequestGroup, Resource, Task } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport { IconCheckbox, IconSquare } from '@tabler/icons-react';\nimport React, { useEffect, useState } from 'react';\nimport { ResourceName } from '../ResourceName/ResourceName';\nimport { StatusBadge } from '../StatusBadge/StatusBadge';\n\nexport interface RequestGroupDisplayProps {\n  value?: RequestGroup | Reference<RequestGroup>;\n  onStart: (task: Task, input: Reference) => void;\n  onEdit: (task: Task, input: Reference, output: Reference) => void;\n}\n\nexport function RequestGroupDisplay(props: RequestGroupDisplayProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const requestGroup = useResource(props.value);\n  const [startedLoading, setStartedLoading] = useState(false);\n  const [responseBundle, setResponseBundle] = useState<Bundle>();\n\n  useEffect(() => {\n    if (requestGroup && !startedLoading) {\n      medplum.executeBatch(buildBatchRequest(requestGroup)).then(setResponseBundle).catch(console.log);\n      setStartedLoading(true);\n    }\n  }, [medplum, requestGroup, startedLoading]);\n\n  if (!requestGroup || !responseBundle) {\n    return null;\n  }\n\n  return (\n    <Grid>\n      {requestGroup.action?.map((action, index) => {\n        const task = action.resource && findBundleEntry(action.resource as Reference<Task>);\n        const taskInput = task?.input?.[0]?.valueReference;\n        const taskOutput = task?.output?.[0]?.valueReference;\n        return (\n          <React.Fragment key={`action-${index}`}>\n            <Grid.Col span={1} p=\"md\">\n              {task?.status === 'completed' ? <IconCheckbox /> : <IconSquare color=\"gray\" />}\n            </Grid.Col>\n            <Grid.Col span={9} p=\"xs\">\n              <Text weight={500}>{action.title}</Text>\n              {action.description && <div>{action.description}</div>}\n              <div>\n                Last edited by&nbsp;\n                <ResourceName value={task?.meta?.author as Reference} />\n                &nbsp;on&nbsp;\n                {formatDateTime(task?.meta?.lastUpdated)}\n              </div>\n              <div>\n                Status: <StatusBadge status={task?.status || 'unknown'} />\n              </div>\n            </Grid.Col>\n            <Grid.Col span={2} p=\"md\">\n              {taskInput && !taskOutput && <Button onClick={() => props.onStart(task, taskInput)}>Start</Button>}\n              {taskInput && taskOutput && (\n                <Button onClick={() => props.onEdit(task, taskInput, taskOutput)}>Edit</Button>\n              )}\n            </Grid.Col>\n          </React.Fragment>\n        );\n      })}\n    </Grid>\n  );\n\n  function buildBatchRequest(request: RequestGroup): Bundle {\n    const batchEntries = [] as BundleEntry[];\n    if (request.action) {\n      for (const action of request.action) {\n        if (action.resource?.reference) {\n          batchEntries.push({ request: { method: 'GET', url: action.resource.reference } });\n        }\n      }\n    }\n\n    return {\n      resourceType: 'Bundle',\n      type: 'batch',\n      entry: batchEntries,\n    };\n  }\n\n  function findBundleEntry<T extends Resource>(reference: Reference<T>): T | undefined {\n    for (const entry of responseBundle?.entry as BundleEntry[]) {\n      if (entry.resource && reference.reference === getReferenceString(entry.resource)) {\n        return entry.resource as T;\n      }\n    }\n    return undefined;\n  }\n}\n", "import { createStyles } from '@mantine/core';\nimport { Bundle, Resource, ResourceType } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport React, { useEffect, useState } from 'react';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { ResourceBadge } from '../ResourceBadge/ResourceBadge';\nimport { blame } from '../utils/blame';\nimport { getTimeString, getVersionUrl } from './ResourceBlame.utils';\n\nconst useStyles = createStyles((theme) => ({\n  container: {\n    overflowX: 'auto',\n  },\n\n  root: {\n    border: `0.1px solid ${theme.colors.gray[3]}`,\n    borderCollapse: 'collapse',\n    borderRadius: theme.radius.sm,\n    borderSpacing: 0,\n    fontSize: theme.fontSizes.xs,\n    width: '100%',\n\n    '& td': {\n      padding: '2px 4px 0 4px',\n      verticalAlign: 'top',\n      whiteSpace: 'nowrap',\n    },\n  },\n\n  startRow: {\n    borderTop: `0.1px solid ${theme.colors.gray[3]}`,\n  },\n\n  normalRow: {\n    borderTop: 0,\n  },\n\n  author: {\n    lineHeight: '10px',\n  },\n\n  dateTime: {\n    borderRight: `0.1px solid ${theme.colors.gray[3]}`,\n    lineHeight: '20px',\n  },\n\n  lineNumber: {\n    backgroundColor: theme.colors.gray[1],\n    border: 0,\n    color: theme.colors.gray[5],\n    fontFamily: theme.fontFamilyMonospace,\n    padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n    textAlign: 'right',\n  },\n\n  line: {\n    fontFamily: theme.fontFamilyMonospace,\n    fontSize: theme.fontSizes.sm,\n    padding: `${theme.spacing.xs} ${theme.spacing.sm}`,\n  },\n\n  pre: {\n    margin: 0,\n  },\n}));\n\nexport interface ResourceBlameProps {\n  history?: Bundle;\n  resourceType?: ResourceType;\n  id?: string;\n}\n\nexport function ResourceBlame(props: ResourceBlameProps): JSX.Element | null {\n  const { classes } = useStyles();\n  const medplum = useMedplum();\n  const [value, setValue] = useState<Bundle | undefined>(props.history);\n\n  useEffect(() => {\n    if (!props.history && props.resourceType && props.id) {\n      medplum.readHistory(props.resourceType, props.id).then(setValue).catch(console.log);\n    }\n  }, [medplum, props.history, props.resourceType, props.id]);\n\n  if (!value) {\n    return <div>Loading...</div>;\n  }\n\n  const resource = value.entry?.[0]?.resource as Resource;\n\n  if (!resource) {\n    return null;\n  }\n\n  const table = blame(value);\n\n  return (\n    <div className={classes.container}>\n      <table className={classes.root}>\n        <tbody>\n          {table.map((row, index) => (\n            <tr key={'row-' + index} className={row.span > 0 ? classes.startRow : classes.normalRow}>\n              {row.span > 0 && (\n                <>\n                  <td className={classes.author} rowSpan={row.span}>\n                    <ResourceBadge value={row.meta.author} link={true} />\n                  </td>\n                  <td className={classes.dateTime} rowSpan={row.span}>\n                    <MedplumLink to={getVersionUrl(resource, row.meta.versionId as string)}>\n                      {getTimeString(row.meta.lastUpdated as string)}\n                    </MedplumLink>\n                  </td>\n                </>\n              )}\n              <td className={classes.lineNumber}>{index + 1}</td>\n              <td className={classes.line}>\n                <pre className={classes.pre}>{row.value}</pre>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n", "import { stringify } from '@medplum/core';\nimport { Bundle, BundleEntry, Meta } from '@medplum/fhirtypes';\nimport { diff } from './diff';\n\nexport interface BlameRow {\n  id: string;\n  meta: Meta;\n  value: string;\n  span: number;\n}\n\nexport function blame(history: Bundle): BlameRow[] {\n  // Convert to array of array of lines\n  const versions = (history.entry as BundleEntry[])\n    .filter((entry) => !!entry.resource)\n    .map((entry) => ({\n      meta: entry.resource?.meta as Meta,\n      lines: stringify(entry.resource, true).match(/[^\\r\\n]+/g) as string[],\n    }))\n    .sort((a, b) => (a.meta.lastUpdated as string).localeCompare(b.meta.lastUpdated as string));\n\n  // Start with array of lines from the first version\n  const table: BlameRow[] = versions[0].lines.map((line) => ({\n    id: versions[0].meta.versionId as string,\n    meta: versions[0].meta,\n    value: line,\n    span: 1,\n  }));\n\n  compareVersions(table, versions);\n  combineSpans(table);\n  return table;\n}\n\n/**\n * For each version, update the blame table with revisions.\n * @param table - The output blame table.\n * @param versions - The array of versions.\n */\nfunction compareVersions(table: BlameRow[], versions: { meta: Meta; lines: string[] }[]): void {\n  for (let i = 1; i < versions.length; i++) {\n    const revisions = diff(versions[i - 1].lines, versions[i].lines);\n\n    for (const revision of revisions) {\n      const position = revision.original.position;\n      const oldLines = revision.original.lines;\n      const newLines = revision.revised.lines;\n\n      if (revision.type === 'delete' || revision.type === 'change') {\n        // Remove the old rows\n        table.splice(position, oldLines.length);\n      }\n\n      if (revision.type === 'insert' || revision.type === 'change') {\n        // Add the new lines\n        for (let k = 0; k < revision.revised.lines.length; k++) {\n          table.splice(position + k, 0, {\n            id: versions[i].meta.versionId as string,\n            meta: versions[i].meta,\n            value: newLines[k],\n            span: 1,\n          });\n        }\n      }\n    }\n  }\n}\n\n/**\n * Combine adjacent rows into spans.\n * @param table - The output blame table.\n */\nfunction combineSpans(table: BlameRow[]): void {\n  let start = 0;\n  while (start < table.length) {\n    let curr = start;\n    while (curr < table.length && table[curr].id === table[start].id) {\n      table[curr].span = -1;\n      curr++;\n    }\n    table[start].span = curr - start;\n    start = curr;\n  }\n}\n", "/*\n * Myers Diff algorithm\n * Based on: https://github.com/KengoTODA/java-diff-utils/blob/master/src/main/java/difflib/myers/MyersDiff.java\n * Apache Software License, Version 1.1\n */\n\nexport function diff(original: string[], revised: string[]): Delta[] {\n  const path = buildPath(original, revised) as PathNode;\n  return buildRevisions(path, original, revised);\n}\n\nexport interface PathNode {\n  readonly i: number;\n  readonly j: number;\n  readonly prev: PathNode | undefined;\n  readonly snake: boolean;\n}\n\nexport interface Delta {\n  readonly original: Chunk;\n  readonly revised: Chunk;\n  readonly type: 'change' | 'delete' | 'insert';\n}\n\nexport interface Chunk {\n  readonly position: number;\n  readonly lines: string[];\n}\n\nfunction buildPath(orig: string[], rev: string[]): PathNode | undefined {\n  const N = orig.length;\n  const M = rev.length;\n  const MAX = N + M + 1;\n  const size = 1 + 2 * MAX;\n  const middle = (size / 2) | 0;\n  const diagonal: (PathNode | undefined)[] = new Array(size);\n\n  diagonal[middle + 1] = {\n    i: 0,\n    j: -1,\n    prev: undefined,\n    snake: true,\n  };\n\n  for (let d = 0; d < MAX; d++) {\n    for (let k = -d; k <= d; k += 2) {\n      const kmiddle = middle + k;\n      const kplus = kmiddle + 1;\n      const kminus = kmiddle - 1;\n      const kplusNode = diagonal[kplus] as PathNode;\n      const kminusNode = diagonal[kminus] as PathNode;\n      let prev: PathNode | undefined = undefined;\n      let i = 0;\n\n      if (k === -d || (k !== d && kminusNode.i < kplusNode.i)) {\n        i = kplusNode.i;\n        prev = kplusNode;\n      } else {\n        i = kminusNode.i + 1;\n        prev = kminusNode;\n      }\n\n      diagonal[kminus] = undefined; // no longer used\n\n      let j = i - k;\n      let node = {\n        i,\n        j,\n        prev: previousSnake(prev),\n        snake: false,\n      };\n\n      // orig and rev are zero-based\n      // but the algorithm is one-based\n      // that's why there's no +1 when indexing the sequences\n      while (i < N && j < M && orig[i] === rev[j]) {\n        i++;\n        j++;\n      }\n\n      if (i > node.i) {\n        node = {\n          i,\n          j,\n          prev: node,\n          snake: true,\n        };\n      }\n\n      diagonal[kmiddle] = node;\n\n      if (i >= N && j >= M) {\n        return diagonal[kmiddle] as PathNode;\n      }\n    }\n    diagonal[middle + d - 1] = undefined;\n  }\n\n  // According to Myers, this cannot happen\n  return undefined;\n}\n\nfunction buildRevisions(startNode: PathNode, orig: string[], rev: string[]): Delta[] {\n  const deltas: Delta[] = [];\n  let path: PathNode | undefined = startNode;\n\n  if (path.snake) {\n    path = path.prev;\n  }\n\n  while (path?.prev && path.prev.j >= 0) {\n    const i = path.i;\n    const j = path.j;\n\n    path = path.prev;\n    const ianchor = path.i;\n    const janchor = path.j;\n\n    const original = {\n      position: ianchor,\n      lines: orig.slice(ianchor, i),\n    };\n\n    const revised = {\n      position: janchor,\n      lines: rev.slice(janchor, j),\n    };\n\n    let type: 'insert' | 'delete' | 'change';\n\n    if (original.lines.length === 0 && revised.lines.length > 0) {\n      type = 'insert';\n    } else if (original.lines.length > 0 && revised.lines.length === 0) {\n      type = 'delete';\n    } else {\n      type = 'change';\n    }\n\n    deltas.push({ original, revised, type });\n\n    if (path.snake) {\n      path = path.prev;\n    }\n  }\n\n  return deltas;\n}\n\nfunction previousSnake(node: PathNode): PathNode {\n  if (node && !node.snake && node.prev) {\n    return node.prev;\n  }\n  return node;\n}\n", "import { Resource } from '@medplum/fhirtypes';\n\nexport function getVersionUrl(resource: Resource, versionId: string): string {\n  return `/${resource.resourceType}/${resource.id}/_history/${versionId}`;\n}\n\nexport function getTimeString(lastUpdated: string): string {\n  const seconds = Math.floor((Date.now() - Date.parse(lastUpdated)) / 1000);\n\n  const years = Math.floor(seconds / 31536000);\n  if (years > 0) {\n    return pluralizeTime(years, 'year');\n  }\n\n  const months = Math.floor(seconds / 2592000);\n  if (months > 0) {\n    return pluralizeTime(months, 'month');\n  }\n\n  const days = Math.floor(seconds / 86400);\n  if (days > 0) {\n    return pluralizeTime(days, 'day');\n  }\n\n  const hours = Math.floor(seconds / 3600);\n  if (hours > 0) {\n    return pluralizeTime(hours, 'hour');\n  }\n\n  const minutes = Math.floor(seconds / 60);\n  if (minutes > 0) {\n    return pluralizeTime(minutes, 'minute');\n  }\n\n  return pluralizeTime(seconds, 'second');\n}\n\nfunction pluralizeTime(count: number, noun: string): string {\n  return `${count} ${count === 1 ? noun : noun + 's'} ago`;\n}\n", "import { createStyles } from '@mantine/core';\nimport { stringify } from '@medplum/core';\nimport { Resource } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { Delta, diff } from '../utils/diff';\n\nconst useStyles = createStyles((theme) => ({\n  removed: {\n    color: theme.colors.red[7],\n    textDecoration: 'line-through',\n  },\n\n  added: {\n    color: theme.colors.green[7],\n  },\n}));\n\nexport interface ResourceDiffProps {\n  original: Resource;\n  revised: Resource;\n  ignoreMeta?: boolean;\n}\n\nexport function ResourceDiff(props: ResourceDiffProps): JSX.Element {\n  let originalResource = props.original;\n  let revisedResource = props.revised;\n\n  if (props.ignoreMeta) {\n    originalResource = { ...originalResource, meta: undefined };\n    revisedResource = { ...revisedResource, meta: undefined };\n  }\n\n  const original = stringify(originalResource, true).match(/[^\\r\\n]+/g) as string[];\n  const revised = stringify(revisedResource, true).match(/[^\\r\\n]+/g) as string[];\n  const deltas = diff(original, revised);\n  return (\n    <pre style={{ color: 'gray' }}>\n      {deltas.map((delta, index) => (\n        <ChangeDiff key={'delta' + index} delta={delta} />\n      ))}\n    </pre>\n  );\n}\n\nfunction ChangeDiff(props: { delta: Delta }): JSX.Element {\n  const { classes } = useStyles();\n  return (\n    <>\n      ...\n      <br />\n      {props.delta.original.lines.length > 0 && (\n        <div className={classes.removed}>{props.delta.original.lines.join('\\n')}</div>\n      )}\n      {props.delta.revised.lines.length > 0 && (\n        <div className={classes.added}>{props.delta.revised.lines.join('\\n')}</div>\n      )}\n      ...\n      <br />\n    </>\n  );\n}\n", "import { Button, Group, Stack, TextInput } from '@mantine/core';\nimport { deepClone } from '@medplum/core';\nimport { OperationOutcome, Reference, Resource } from '@medplum/fhirtypes';\nimport { useMedplum, useResource } from '@medplum/react-hooks';\nimport React, { useEffect, useState } from 'react';\nimport { BackboneElementInput } from '../BackboneElementInput/BackboneElementInput';\nimport { FormSection } from '../FormSection/FormSection';\n\nexport interface ResourceFormProps {\n  defaultValue: Resource | Reference;\n  outcome?: OperationOutcome;\n  onSubmit: (resource: Resource) => void;\n  onDelete?: (resource: Resource) => void;\n}\n\nexport function ResourceForm(props: ResourceFormProps): JSX.Element {\n  const medplum = useMedplum();\n  const defaultValue = useResource(props.defaultValue);\n  const [schemaLoaded, setSchemaLoaded] = useState(false);\n  const [value, setValue] = useState<Resource | undefined>();\n\n  useEffect(() => {\n    if (defaultValue) {\n      setValue(deepClone(defaultValue));\n      medplum\n        .requestSchema(defaultValue.resourceType)\n        .then(() => setSchemaLoaded(true))\n        .catch(console.log);\n    }\n  }, [medplum, defaultValue]);\n\n  if (!schemaLoaded || !value) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <form\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={(e: React.FormEvent) => {\n        e.preventDefault();\n        if (props.onSubmit) {\n          props.onSubmit(value);\n        }\n      }}\n    >\n      <Stack mb=\"xl\">\n        <FormSection title=\"Resource Type\" htmlFor=\"resourceType\" outcome={props.outcome}>\n          <TextInput name=\"resourceType\" defaultValue={value.resourceType} disabled={true} />\n        </FormSection>\n        <FormSection title=\"ID\" htmlFor=\"id\" outcome={props.outcome}>\n          <TextInput name=\"id\" defaultValue={value.id} disabled={true} />\n        </FormSection>\n      </Stack>\n      <BackboneElementInput\n        typeName={value.resourceType}\n        defaultValue={value}\n        outcome={props.outcome}\n        onChange={setValue}\n      />\n      <Group position=\"right\" mt=\"xl\">\n        <Button type=\"submit\">OK</Button>\n        {props.onDelete && (\n          <Button\n            variant=\"outline\"\n            color=\"red\"\n            type=\"button\"\n            onClick={() => {\n              (props.onDelete as (resource: Resource) => void)(value);\n            }}\n          >\n            Delete\n          </Button>\n        )}\n      </Group>\n    </form>\n  );\n}\n", "import { Table } from '@mantine/core';\nimport { formatDateTime, normalizeErrorString } from '@medplum/core';\nimport { Bundle, BundleEntry, Resource, ResourceType } from '@medplum/fhirtypes';\nimport { useMedplum } from '@medplum/react-hooks';\nimport React, { useEffect, useState } from 'react';\nimport { MedplumLink } from '../MedplumLink/MedplumLink';\nimport { ResourceBadge } from '../ResourceBadge/ResourceBadge';\n\nexport interface ResourceHistoryTableProps {\n  history?: Bundle;\n  resourceType?: string;\n  id?: string;\n}\n\nexport function ResourceHistoryTable(props: ResourceHistoryTableProps): JSX.Element {\n  const medplum = useMedplum();\n  const [value, setValue] = useState<Bundle | undefined>(props.history);\n\n  useEffect(() => {\n    if (!props.history && props.resourceType && props.id) {\n      medplum\n        .readHistory(props.resourceType as ResourceType, props.id)\n        .then(setValue)\n        .catch(console.log);\n    }\n  }, [medplum, props.history, props.resourceType, props.id]);\n\n  if (!value) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Table withBorder withColumnBorders>\n      <thead>\n        <tr>\n          <th>Author</th>\n          <th>Date</th>\n          <th>Version</th>\n        </tr>\n      </thead>\n      <tbody>{value.entry?.map((entry, index) => <HistoryRow key={'entry-' + index} entry={entry} />)}</tbody>\n    </Table>\n  );\n}\n\ninterface HistoryRowProps {\n  entry: BundleEntry;\n}\n\nfunction HistoryRow(props: HistoryRowProps): JSX.Element {\n  const { response, resource } = props.entry;\n  if (resource) {\n    return (\n      <tr>\n        <td>\n          <ResourceBadge value={resource.meta?.author} link={true} />\n        </td>\n        <td>{formatDateTime(resource.meta?.lastUpdated)}</td>\n        <td>\n          <MedplumLink to={getVersionUrl(resource)}>{resource.meta?.versionId}</MedplumLink>\n        </td>\n      </tr>\n    );\n  } else {\n    return (\n      <tr>\n        <td colSpan={3}>{normalizeErrorString(response?.outcome)}</td>\n      </tr>\n    );\n  }\n}\n\nfunction getVersionUrl(resource: Resource): string {\n  return `/${resource.resourceType}/${resource.id}/_history/${resource.meta?.versionId}`;\n}\n", "import { Button, createStyles, Stack, Text } from '@mantine/core';\nimport { getReferenceString, isReference } from '@medplum/core';\nimport { Questionnaire, QuestionnaireResponse, Reference, Schedule, Slot } from '@medplum/fhirtypes';\nimport { useResource, useSearchResources } from '@medplum/react-hooks';\nimport React, { useState } from 'react';\nimport { CalendarInput } from '../CalendarInput/CalendarInput';\nimport { getStartMonth } from '../CalendarInput/CalendarInput.utils';\nimport { QuestionnaireForm } from '../QuestionnaireForm/QuestionnaireForm';\nimport { ResourceAvatar } from '../ResourceAvatar/ResourceAvatar';\nimport { ResourceName } from '../ResourceName/ResourceName';\n\nconst useStyles = createStyles((theme) => ({\n  container: {\n    display: 'flex',\n    minHeight: 400,\n  },\n\n  info: {\n    minWidth: 300,\n    padding: 20,\n    borderRight: `1px solid ${theme.colors.gray[3]}`,\n  },\n\n  selection: {\n    minWidth: 300,\n    padding: 20,\n  },\n}));\n\nexport interface SchedulerProps {\n  schedule: Schedule | Reference<Schedule>;\n  questionnaire: Questionnaire | Reference<Questionnaire>;\n}\n\nexport function Scheduler(props: SchedulerProps): JSX.Element | null {\n  const { classes } = useStyles();\n  const schedule = useResource(props.schedule);\n  const questionnaire = useResource(props.questionnaire);\n\n  const [month, setMonth] = useState<Date>(getStartMonth());\n  const [date, setDate] = useState<Date>();\n  const [slot, setSlot] = useState<Slot>();\n  const [response, setResponse] = useState<QuestionnaireResponse>();\n\n  const [slots] = useSearchResources(\n    'Slot',\n    new URLSearchParams([\n      ['_count', (30 * 24).toString()],\n      [\n        'schedule',\n        isReference(props.schedule)\n          ? (props.schedule.reference as string)\n          : getReferenceString(props.schedule as Schedule),\n      ],\n      ['start', 'gt' + getStart(month)],\n      ['start', 'lt' + getEnd(month)],\n    ])\n  );\n\n  if (!schedule || !slots || !questionnaire) {\n    return null;\n  }\n\n  const actor = schedule.actor?.[0];\n\n  return (\n    <div className={classes.container} data-testid=\"scheduler\">\n      <div className={classes.info}>\n        {actor && <ResourceAvatar value={actor} size=\"xl\" />}\n        {actor && (\n          <Text size=\"xl\" weight={500}>\n            <ResourceName value={actor} />\n          </Text>\n        )}\n        <p>1 hour</p>\n        {date && <p>{date.toLocaleDateString()}</p>}\n        {slot && <p>{formatTime(new Date(slot.start as string))}</p>}\n      </div>\n      <div className={classes.selection}>\n        {!date && (\n          <div>\n            <h3>Select date</h3>\n            <CalendarInput slots={slots} onChangeMonth={setMonth} onClick={setDate} />\n          </div>\n        )}\n        {date && !slot && (\n          <div>\n            <h3>Select time</h3>\n            <Stack>\n              {slots.map((s) => {\n                const slotStart = new Date(s.start as string);\n                return (\n                  slotStart.getTime() > date.getTime() &&\n                  slotStart.getTime() < date.getTime() + 24 * 3600 * 1000 && (\n                    <div key={s.id}>\n                      <Button variant=\"outline\" style={{ width: 150 }} onClick={() => setSlot(s)}>\n                        {formatTime(slotStart)}\n                      </Button>\n                    </div>\n                  )\n                );\n              })}\n            </Stack>\n          </div>\n        )}\n        {date && slot && !response && (\n          <QuestionnaireForm questionnaire={questionnaire} submitButtonText={'Next'} onSubmit={setResponse} />\n        )}\n        {date && slot && response && (\n          <div>\n            <h3>You're all set!</h3>\n            <p>Check your email for a calendar invite.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction getStart(month: Date): string {\n  return formatSlotInstant(month.getTime());\n}\n\nfunction getEnd(month: Date): string {\n  return formatSlotInstant(month.getTime() + 31 * 24 * 60 * 60 * 1000);\n}\n\nfunction formatSlotInstant(time: number): string {\n  const date = new Date(Math.max(Date.now(), time));\n  date.setHours(0, 0, 0, 0);\n  return date.toISOString();\n}\n\nfunction formatTime(date: Date): string {\n  return date.toLocaleTimeString([], { hour: 'numeric', minute: '2-digit' });\n}\n", "import { createReference, MedplumClient, ProfileResource } from '@medplum/core';\nimport { Attachment, Group, Patient, Reference, ResourceType, ServiceRequest } from '@medplum/fhirtypes';\nimport React from 'react';\nimport { ResourceTimeline } from '../ResourceTimeline/ResourceTimeline';\n\nexport interface ServiceRequestTimelineProps {\n  serviceRequest: ServiceRequest | Reference<ServiceRequest>;\n}\n\nexport function ServiceRequestTimeline(props: ServiceRequestTimelineProps): JSX.Element {\n  return (\n    <ResourceTimeline\n      value={props.serviceRequest}\n      loadTimelineResources={async (medplum: MedplumClient, resourceType: ResourceType, id: string) => {\n        const ref = `${resourceType}/${id}`;\n        const _count = 100;\n        return Promise.allSettled([\n          medplum.readHistory('ServiceRequest', id),\n          medplum.search('Communication', { 'based-on': ref, _count }),\n          medplum.search('DiagnosticReport', { 'based-on': ref, _count }),\n          medplum.search('Media', { 'based-on': ref, _count }),\n          medplum.search('DocumentReference', { related: ref, _count }),\n          medplum.search('Task', { _filter: `based-on eq ${ref} or focus eq ${ref} or subject eq ${ref}`, _count }),\n        ]);\n      }}\n      createCommunication={(resource: ServiceRequest, sender: ProfileResource, text: string) => ({\n        resourceType: 'Communication',\n        status: 'completed',\n        basedOn: [createReference(resource)],\n        subject: resource.subject as Reference<Group | Patient>,\n        sender: createReference(sender),\n        sent: new Date().toISOString(),\n        payload: [{ contentString: text }],\n      })}\n      createMedia={(resource: ServiceRequest, operator: ProfileResource, content: Attachment) => ({\n        resourceType: 'Media',\n        status: 'completed',\n        basedOn: [createReference(resource)],\n        subject: resource.subject,\n        operator: createReference(operator),\n        issued: new Date().toISOString(),\n        content,\n      })}\n    />\n  );\n}\n", "import { LoginAuthenticationResponse, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport React, { useEffect, useState } from 'react';\nimport { Document } from '../Document/Document';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { NewProjectForm } from './NewProjectForm';\nimport { NewUserForm } from './NewUserForm';\n\nexport interface RegisterFormProps {\n  readonly type: 'patient' | 'project';\n  readonly projectId?: string;\n  readonly clientId?: string;\n  readonly googleClientId?: string;\n  readonly recaptchaSiteKey?: string;\n  readonly children?: React.ReactNode;\n  readonly onSuccess: () => void;\n}\n\nexport function RegisterForm(props: RegisterFormProps): JSX.Element {\n  const { type, projectId, clientId, googleClientId, recaptchaSiteKey, onSuccess } = props;\n  const medplum = useMedplum();\n  const [login, setLogin] = useState<string>();\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n\n  useEffect(() => {\n    if (type === 'patient' && login) {\n      medplum\n        .startNewPatient({ login, projectId: projectId as string })\n        .then((response) => medplum.processCode(response.code as string))\n        .then(() => onSuccess())\n        .catch((err) => setOutcome(normalizeOperationOutcome(err)));\n    }\n  }, [medplum, type, projectId, login, onSuccess]);\n\n  function handleAuthResponse(response: LoginAuthenticationResponse): void {\n    if (response.code) {\n      medplum\n        .processCode(response.code)\n        .then(() => onSuccess())\n        .catch(console.log);\n    } else if (response.login) {\n      setLogin(response.login);\n    }\n  }\n\n  return (\n    <Document width={450}>\n      {outcome && <pre>{JSON.stringify(outcome, null, 2)}</pre>}\n      {!login && (\n        <NewUserForm\n          projectId={projectId as string}\n          clientId={clientId}\n          googleClientId={googleClientId}\n          recaptchaSiteKey={recaptchaSiteKey}\n          handleAuthResponse={handleAuthResponse}\n        >\n          {props.children}\n        </NewUserForm>\n      )}\n      {login && type === 'project' && <NewProjectForm login={login} handleAuthResponse={handleAuthResponse} />}\n    </Document>\n  );\n}\n", "import { Anchor, Button, Center, Group, Stack, Text, TextInput, Title } from '@mantine/core';\nimport { LoginAuthenticationResponse, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { Logo } from '../Logo/Logo';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { getErrorsForInput } from '../utils/outcomes';\n\nexport interface NewProjectFormProps {\n  login: string;\n  handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function NewProjectForm(props: NewProjectFormProps): JSX.Element {\n  const medplum = useMedplum();\n  const [outcome, setOutcome] = useState<OperationOutcome | undefined>();\n  return (\n    <Form\n      style={{ maxWidth: 400 }}\n      onSubmit={async (formData: Record<string, string>) => {\n        try {\n          props.handleAuthResponse(\n            await medplum.startNewProject({\n              login: props.login,\n              projectName: formData.projectName,\n            })\n          );\n        } catch (err) {\n          setOutcome(normalizeOperationOutcome(err));\n        }\n      }}\n    >\n      <Center sx={{ flexDirection: 'column' }}>\n        <Logo size={32} />\n        <Title>Create project</Title>\n      </Center>\n      <Stack spacing=\"xl\">\n        <TextInput\n          name=\"projectName\"\n          label=\"Project Name\"\n          placeholder=\"My Project\"\n          required={true}\n          autoFocus={true}\n          error={getErrorsForInput(outcome, 'firstName')}\n        />\n        <Text color=\"dimmed\" size=\"xs\">\n          By clicking submit you agree to the Medplum{' '}\n          <Anchor href=\"https://www.medplum.com/privacy\">Privacy&nbsp;Policy</Anchor>\n          {' and '}\n          <Anchor href=\"https://www.medplum.com/terms\">Terms&nbsp;of&nbsp;Service</Anchor>.\n        </Text>\n      </Stack>\n      <Group position=\"right\" mt=\"xl\" noWrap>\n        <Button type=\"submit\">Create project</Button>\n      </Group>\n    </Form>\n  );\n}\n", "import { Anchor, Button, Center, Checkbox, Divider, Group, PasswordInput, Stack, Text, TextInput } from '@mantine/core';\nimport { GoogleCredentialResponse, LoginAuthenticationResponse, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport React, { useEffect, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { GoogleButton } from '../GoogleButton/GoogleButton';\nimport { getGoogleClientId } from '../GoogleButton/GoogleButton.utils';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { OperationOutcomeAlert } from '../OperationOutcomeAlert/OperationOutcomeAlert';\nimport { getErrorsForInput, getIssuesForExpression } from '../utils/outcomes';\nimport { getRecaptcha, initRecaptcha } from '../utils/recaptcha';\n\nexport interface NewUserFormProps {\n  readonly projectId: string;\n  readonly clientId?: string;\n  readonly googleClientId?: string;\n  readonly recaptchaSiteKey?: string;\n  readonly children?: React.ReactNode;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function NewUserForm(props: NewUserFormProps): JSX.Element {\n  const googleClientId = getGoogleClientId(props.googleClientId);\n  const recaptchaSiteKey = props.recaptchaSiteKey;\n  const medplum = useMedplum();\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n  const issues = getIssuesForExpression(outcome, undefined);\n\n  useEffect(() => {\n    if (recaptchaSiteKey) {\n      initRecaptcha(recaptchaSiteKey);\n    }\n  }, [recaptchaSiteKey]);\n\n  return (\n    <Form\n      style={{ maxWidth: 400 }}\n      onSubmit={async (formData: Record<string, string>) => {\n        try {\n          let recaptchaToken = '';\n          if (recaptchaSiteKey) {\n            recaptchaToken = await getRecaptcha(recaptchaSiteKey);\n          }\n          props.handleAuthResponse(\n            await medplum.startNewUser({\n              projectId: props.projectId,\n              clientId: props.clientId,\n              firstName: formData.firstName,\n              lastName: formData.lastName,\n              email: formData.email,\n              password: formData.password,\n              remember: formData.remember === 'true',\n              recaptchaSiteKey,\n              recaptchaToken,\n            })\n          );\n        } catch (err) {\n          setOutcome(normalizeOperationOutcome(err));\n        }\n      }}\n    >\n      <Center sx={{ flexDirection: 'column' }}>{props.children}</Center>\n      <OperationOutcomeAlert issues={issues} />\n      {googleClientId && (\n        <>\n          <Group position=\"center\" p=\"xl\" style={{ height: 70 }}>\n            <GoogleButton\n              googleClientId={googleClientId}\n              handleGoogleCredential={async (response: GoogleCredentialResponse) => {\n                try {\n                  props.handleAuthResponse(\n                    await medplum.startGoogleLogin({\n                      googleClientId: response.clientId,\n                      googleCredential: response.credential,\n                      createUser: true,\n                    })\n                  );\n                } catch (err) {\n                  setOutcome(normalizeOperationOutcome(err));\n                }\n              }}\n            />\n          </Group>\n          <Divider label=\"or\" labelPosition=\"center\" my=\"lg\" />\n        </>\n      )}\n      <Stack spacing=\"xl\">\n        <TextInput\n          name=\"firstName\"\n          type=\"text\"\n          label=\"First name\"\n          placeholder=\"First name\"\n          required={true}\n          autoFocus={true}\n          error={getErrorsForInput(outcome, 'firstName')}\n        />\n        <TextInput\n          name=\"lastName\"\n          type=\"text\"\n          label=\"Last name\"\n          placeholder=\"Last name\"\n          required={true}\n          error={getErrorsForInput(outcome, 'lastName')}\n        />\n        <TextInput\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          placeholder=\"name@domain.com\"\n          required={true}\n          error={getErrorsForInput(outcome, 'email')}\n        />\n        <PasswordInput\n          name=\"password\"\n          label=\"Password\"\n          autoComplete=\"off\"\n          required={true}\n          error={getErrorsForInput(outcome, 'password')}\n        />\n        <Text color=\"dimmed\" size=\"xs\">\n          By clicking submit you agree to the Medplum{' '}\n          <Anchor href=\"https://www.medplum.com/privacy\">Privacy&nbsp;Policy</Anchor>\n          {' and '}\n          <Anchor href=\"https://www.medplum.com/terms\">Terms&nbsp;of&nbsp;Service</Anchor>.\n        </Text>\n        <Text color=\"dimmed\" size=\"xs\">\n          This site is protected by reCAPTCHA and the Google{' '}\n          <Anchor href=\"https://policies.google.com/privacy\">Privacy&nbsp;Policy</Anchor>\n          {' and '}\n          <Anchor href=\"https://policies.google.com/terms\">Terms&nbsp;of&nbsp;Service</Anchor> apply.\n        </Text>\n      </Stack>\n      <Group position=\"apart\" mt=\"xl\" noWrap>\n        <Checkbox name=\"remember\" label=\"Remember me\" size=\"xs\" />\n        <Button type=\"submit\">Create account</Button>\n      </Group>\n    </Form>\n  );\n}\n", "import { GoogleCredentialResponse } from '@medplum/core';\nimport { useMedplum } from '@medplum/react-hooks';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { createScriptTag } from '../utils/script';\n\ninterface GoogleApi {\n  accounts: {\n    id: {\n      initialize: (args: any) => void;\n      renderButton: (parent: HTMLElement, args: any) => void;\n    };\n  };\n}\n\ndeclare const google: GoogleApi;\n\nexport interface GoogleButtonProps {\n  readonly googleClientId?: string;\n  readonly handleGoogleCredential: (response: GoogleCredentialResponse) => void;\n}\n\nexport function GoogleButton(props: GoogleButtonProps): JSX.Element | null {\n  const medplum = useMedplum();\n  const { googleClientId, handleGoogleCredential } = props;\n  const parentRef = useRef<HTMLDivElement>(null);\n  const [scriptLoaded, setScriptLoaded] = useState<boolean>(typeof google !== 'undefined');\n  const [initialized, setInitialized] = useState(false);\n  const [buttonRendered, setButtonRendered] = useState(false);\n\n  useEffect(() => {\n    if (typeof google === 'undefined') {\n      createScriptTag('https://accounts.google.com/gsi/client', () => setScriptLoaded(true));\n      return;\n    }\n\n    if (!initialized) {\n      google.accounts.id.initialize({\n        client_id: googleClientId,\n        callback: handleGoogleCredential,\n      });\n      setInitialized(true);\n    }\n\n    if (parentRef.current && !buttonRendered) {\n      google.accounts.id.renderButton(parentRef.current, {});\n      setButtonRendered(true);\n    }\n  }, [medplum, googleClientId, initialized, scriptLoaded, parentRef, buttonRendered, handleGoogleCredential]);\n\n  if (!googleClientId) {\n    return null;\n  }\n\n  return <div ref={parentRef} />;\n}\n", "/**\n * Dynamically creates a script tag for the specified JavaScript file.\n * @param src - The JavaScript file URL.\n * @param onload - Optional callback for the onload event.\n */\nexport function createScriptTag(src: string, onload?: () => void): void {\n  const head = document.getElementsByTagName('head')[0];\n  const script = document.createElement('script');\n  script.async = true;\n  script.src = src;\n  script.onload = onload ?? null;\n  head.appendChild(script);\n}\n", "export function getGoogleClientId(clientId: string | undefined): string | undefined {\n  if (clientId) {\n    return clientId;\n  }\n\n  if (typeof window !== 'undefined') {\n    const origin = window.location.protocol + '//' + window.location.host;\n    const authorizedOrigins = import.meta.env.GOOGLE_AUTH_ORIGINS?.split(',') ?? [];\n    if (authorizedOrigins.includes(origin)) {\n      return import.meta.env.GOOGLE_CLIENT_ID;\n    }\n  }\n\n  return undefined;\n}\n", "import { createScriptTag } from './script';\n\n// reCAPTCHA type definitions do not work with Vite project aliasing.\n// Project aliasing is more valuable than type definitions,\n// so cheating and using `any` here.\ndeclare let grecaptcha: any;\n\n/**\n * Dynamically loads the recaptcha script.\n * We do not want to load the script on page load unless the user needs it.\n * @param siteKey - The reCAPTCHA site key, available from the reCAPTCHA admin page.\n */\nexport function initRecaptcha(siteKey: string): void {\n  if (typeof grecaptcha === 'undefined') {\n    createScriptTag('https://www.google.com/recaptcha/api.js?render=' + siteKey);\n  }\n}\n\n/**\n * Starts a request to generate a recapcha token.\n * @param siteKey - The reCAPTCHA site key, available from the reCAPTCHA admin page.\n * @returns Promise to a recaptcha token for the current user.\n */\nexport function getRecaptcha(siteKey: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    grecaptcha.ready(async () => {\n      try {\n        resolve(await grecaptcha.execute(siteKey, { action: 'submit' }));\n      } catch (err) {\n        reject(err);\n      }\n    });\n  });\n}\n", "import { showNotification } from '@mantine/notifications';\nimport { BaseLoginRequest, LoginAuthenticationResponse, normalizeErrorString } from '@medplum/core';\nimport { ProjectMembership } from '@medplum/fhirtypes';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Document } from '../Document/Document';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { AuthenticationForm } from './AuthenticationForm';\nimport { ChooseProfileForm } from './ChooseProfileForm';\nimport { ChooseScopeForm } from './ChooseScopeForm';\nimport { MfaForm } from './MfaForm';\nimport { NewProjectForm } from './NewProjectForm';\n\nexport interface SignInFormProps extends BaseLoginRequest {\n  readonly login?: string;\n  readonly chooseScopes?: boolean;\n  readonly disableEmailAuth?: boolean;\n  readonly disableGoogleAuth?: boolean;\n  readonly onSuccess?: () => void;\n  readonly onForgotPassword?: () => void;\n  readonly onRegister?: () => void;\n  readonly onCode?: (code: string) => void;\n  readonly children?: React.ReactNode;\n}\n\n/**\n * The SignInForm component allows users to sign in to Medplum.\n *\n * \"Signing in\" is a multi-step process:\n * 1) Authentication - identify the user\n * 2) MFA - If MFA is enabled, prompt for MFA code\n * 3) Choose profile - If the user has multiple profiles, prompt to choose one\n * 4) Choose scope - If the user has multiple scopes, prompt to choose one\n * 5) Success - Return to the caller with either a code or a redirect\n * @param props - The SignInForm React props.\n * @returns The SignInForm React node.\n */\nexport function SignInForm(props: SignInFormProps): JSX.Element {\n  const {\n    login: loginCode,\n    chooseScopes,\n    onSuccess,\n    onForgotPassword,\n    onRegister,\n    onCode,\n    ...baseLoginRequest\n  } = props;\n  const medplum = useMedplum();\n  const [login, setLogin] = useState<string>();\n  const [mfaRequired, setAuthenticatorRequired] = useState(false);\n  const [memberships, setMemberships] = useState<ProjectMembership[]>();\n\n  const handleCode = useCallback(\n    (code: string): void => {\n      if (onCode) {\n        onCode(code);\n      } else {\n        medplum\n          .processCode(code)\n          .then(() => {\n            if (onSuccess) {\n              onSuccess();\n            }\n          })\n          .catch((err) => showNotification({ color: 'red', message: normalizeErrorString(err) }));\n      }\n    },\n    [medplum, onCode, onSuccess]\n  );\n\n  const handleAuthResponse = useCallback(\n    (response: LoginAuthenticationResponse): void => {\n      setAuthenticatorRequired(!!response.mfaRequired);\n\n      if (response.login) {\n        setLogin(response.login);\n      }\n\n      if (response.memberships) {\n        setMemberships(response.memberships);\n      }\n\n      if (response.code) {\n        if (chooseScopes) {\n          setMemberships(undefined);\n        } else {\n          handleCode(response.code as string);\n        }\n      }\n    },\n    [chooseScopes, handleCode]\n  );\n\n  const handleScopeResponse = useCallback(\n    (response: LoginAuthenticationResponse): void => {\n      handleCode(response.code as string);\n    },\n    [handleCode]\n  );\n\n  useEffect(() => {\n    // Beware the race condition here\n    // The `useMedplum` hook will return a new instance of the MedplumClient on login\n    // We do not want to request the login status again in that case\n    // Only request login status once\n    if (loginCode && !login) {\n      medplum\n        .get('auth/login/' + loginCode)\n        .then(handleAuthResponse)\n        .catch((err) => showNotification({ color: 'red', message: normalizeErrorString(err) }));\n    }\n  }, [medplum, loginCode, login, handleAuthResponse]);\n\n  return (\n    <Document width={450}>\n      {(() => {\n        if (!login) {\n          return (\n            <AuthenticationForm\n              onForgotPassword={onForgotPassword}\n              onRegister={onRegister}\n              handleAuthResponse={handleAuthResponse}\n              disableGoogleAuth={props.disableGoogleAuth}\n              disableEmailAuth={props.disableEmailAuth}\n              {...baseLoginRequest}\n            >\n              {props.children}\n            </AuthenticationForm>\n          );\n        } else if (mfaRequired) {\n          return <MfaForm login={login} handleAuthResponse={handleAuthResponse} />;\n        } else if (memberships) {\n          return <ChooseProfileForm login={login} memberships={memberships} handleAuthResponse={handleAuthResponse} />;\n        } else if (props.projectId === 'new') {\n          return <NewProjectForm login={login} handleAuthResponse={handleAuthResponse} />;\n        } else if (props.chooseScopes) {\n          return <ChooseScopeForm login={login} scope={props.scope} handleAuthResponse={handleScopeResponse} />;\n        } else {\n          return <div>Success</div>;\n        }\n      })()}\n    </Document>\n  );\n}\n", "import { Anchor, Button, Center, Checkbox, Divider, Group, PasswordInput, Stack, TextInput } from '@mantine/core';\nimport {\n  BaseLoginRequest,\n  GoogleCredentialResponse,\n  GoogleLoginRequest,\n  LoginAuthenticationResponse,\n  normalizeOperationOutcome,\n} from '@medplum/core';\nimport { OperationOutcome } from '@medplum/fhirtypes';\nimport React, { useCallback, useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { GoogleButton } from '../GoogleButton/GoogleButton';\nimport { getGoogleClientId } from '../GoogleButton/GoogleButton.utils';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { OperationOutcomeAlert } from '../OperationOutcomeAlert/OperationOutcomeAlert';\nimport { getErrorsForInput, getIssuesForExpression } from '../utils/outcomes';\n\nexport interface AuthenticationFormProps extends BaseLoginRequest {\n  readonly disableEmailAuth?: boolean;\n  readonly disableGoogleAuth?: boolean;\n  readonly onForgotPassword?: () => void;\n  readonly onRegister?: () => void;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n  readonly children?: React.ReactNode;\n}\n\nexport function AuthenticationForm(props: AuthenticationFormProps): JSX.Element {\n  const [email, setEmail] = useState<string>();\n\n  if (!email) {\n    return <EmailForm setEmail={setEmail} {...props} />;\n  } else {\n    return <PasswordForm email={email} {...props} />;\n  }\n}\n\nexport interface EmailFormProps extends BaseLoginRequest {\n  readonly disableEmailAuth?: boolean;\n  readonly disableGoogleAuth?: boolean;\n  readonly onRegister?: () => void;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n  readonly setEmail: (email: string) => void;\n  readonly children?: React.ReactNode;\n}\n\nexport function EmailForm(props: EmailFormProps): JSX.Element {\n  const { setEmail, onRegister, handleAuthResponse, children, disableEmailAuth, ...baseLoginRequest } = props;\n  const medplum = useMedplum();\n  const googleClientId = !props.disableGoogleAuth && getGoogleClientId(props.googleClientId);\n\n  const isExternalAuth = useCallback(\n    async (authMethod: any): Promise<boolean> => {\n      if (!authMethod.authorizeUrl) {\n        return false;\n      }\n\n      const state = JSON.stringify({\n        ...(await medplum.ensureCodeChallenge(baseLoginRequest)),\n        domain: authMethod.domain,\n      });\n      const url = new URL(authMethod.authorizeUrl);\n      url.searchParams.set('state', state);\n      window.location.assign(url.toString());\n      return true;\n    },\n    [medplum, baseLoginRequest]\n  );\n\n  const handleSubmit = useCallback(\n    async (formData: Record<string, string>) => {\n      const authMethod = await medplum.post('auth/method', { email: formData.email });\n      if (!(await isExternalAuth(authMethod))) {\n        setEmail(formData.email);\n      }\n    },\n    [medplum, isExternalAuth, setEmail]\n  );\n\n  const handleGoogleCredential = useCallback(\n    async (response: GoogleCredentialResponse) => {\n      const authResponse = await medplum.startGoogleLogin({\n        ...baseLoginRequest,\n        googleCredential: response.credential,\n      } as GoogleLoginRequest);\n      if (!(await isExternalAuth(authResponse))) {\n        handleAuthResponse(authResponse);\n      }\n    },\n    [medplum, baseLoginRequest, isExternalAuth, handleAuthResponse]\n  );\n\n  return (\n    <Form style={{ maxWidth: 400 }} onSubmit={handleSubmit}>\n      <Center sx={{ flexDirection: 'column' }}>{children}</Center>\n      {googleClientId && (\n        <>\n          <Group position=\"center\" p=\"xl\" style={{ height: 70 }}>\n            <GoogleButton googleClientId={googleClientId} handleGoogleCredential={handleGoogleCredential} />\n          </Group>\n          {!disableEmailAuth && <Divider label=\"or\" labelPosition=\"center\" my=\"lg\" />}\n        </>\n      )}\n      {!disableEmailAuth && (\n        <TextInput\n          name=\"email\"\n          type=\"email\"\n          label=\"Email\"\n          placeholder=\"name@domain.com\"\n          required={true}\n          autoFocus={true}\n        />\n      )}\n      <Group position=\"apart\" mt=\"xl\" spacing={0} noWrap>\n        <div>\n          {onRegister && (\n            <Anchor component=\"button\" type=\"button\" color=\"dimmed\" onClick={onRegister} size=\"xs\">\n              Register\n            </Anchor>\n          )}\n        </div>\n        {!disableEmailAuth && <Button type=\"submit\">Next</Button>}\n      </Group>\n    </Form>\n  );\n}\n\nexport interface PasswordFormProps extends BaseLoginRequest {\n  readonly email: string;\n  readonly onForgotPassword?: () => void;\n  readonly handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n  readonly children?: React.ReactNode;\n}\n\nexport function PasswordForm(props: PasswordFormProps): JSX.Element {\n  const { onForgotPassword, handleAuthResponse, children, ...baseLoginRequest } = props;\n  const medplum = useMedplum();\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n  const issues = getIssuesForExpression(outcome, undefined);\n\n  const handleSubmit = useCallback(\n    (formData: Record<string, string>) => {\n      medplum\n        .startLogin({\n          ...baseLoginRequest,\n          password: formData.password,\n          remember: formData.remember === 'on',\n        })\n        .then(handleAuthResponse)\n        .catch((err) => setOutcome(normalizeOperationOutcome(err)));\n    },\n    [medplum, baseLoginRequest, handleAuthResponse]\n  );\n\n  return (\n    <Form style={{ maxWidth: 400 }} onSubmit={handleSubmit}>\n      <Center sx={{ flexDirection: 'column' }}>{children}</Center>\n      <OperationOutcomeAlert issues={issues} />\n      <Stack spacing=\"xl\">\n        <PasswordInput\n          name=\"password\"\n          label=\"Password\"\n          autoComplete=\"off\"\n          required={true}\n          autoFocus={true}\n          error={getErrorsForInput(outcome, 'password')}\n        />\n      </Stack>\n      <Group position=\"apart\" mt=\"xl\" spacing={0} noWrap>\n        {onForgotPassword && (\n          <Anchor component=\"button\" type=\"button\" color=\"dimmed\" onClick={onForgotPassword} size=\"xs\">\n            Forgot password\n          </Anchor>\n        )}\n        <Checkbox id=\"remember\" name=\"remember\" label=\"Remember me\" size=\"xs\" sx={{ lineHeight: 1 }} />\n        <Button type=\"submit\">Sign in</Button>\n      </Group>\n    </Form>\n  );\n}\n", "import { Avatar, Center, Group, Stack, Text, Title, UnstyledButton } from '@mantine/core';\nimport { LoginAuthenticationResponse, normalizeOperationOutcome } from '@medplum/core';\nimport { OperationOutcome, ProjectMembership } from '@medplum/fhirtypes';\nimport React, { useState } from 'react';\nimport { Logo } from '../Logo/Logo';\nimport { useMedplum } from '@medplum/react-hooks';\nimport { OperationOutcomeAlert } from '../OperationOutcomeAlert/OperationOutcomeAlert';\n\nexport interface ChooseProfileFormProps {\n  login: string;\n  memberships: ProjectMembership[];\n  handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function ChooseProfileForm(props: ChooseProfileFormProps): JSX.Element {\n  const medplum = useMedplum();\n  const [outcome, setOutcome] = useState<OperationOutcome>();\n  return (\n    <Stack>\n      <Center sx={{ flexDirection: 'column' }}>\n        <Logo size={32} />\n        <Title order={3}>Choose profile</Title>\n      </Center>\n      <OperationOutcomeAlert outcome={outcome} />\n      {props.memberships.map((membership: ProjectMembership) => (\n        <UnstyledButton\n          key={membership.id}\n          onClick={() => {\n            medplum\n              .post('auth/profile', {\n                login: props.login,\n                profile: membership.id,\n              })\n              .then(props.handleAuthResponse)\n              .catch((err) => setOutcome(normalizeOperationOutcome(err)));\n          }}\n        >\n          <Group>\n            <Avatar radius=\"xl\" />\n            <div style={{ flex: 1 }}>\n              <Text size=\"sm\" weight={500}>\n                {membership.profile?.display}\n              </Text>\n              <Text color=\"dimmed\" size=\"xs\">\n                {membership.project?.display}\n              </Text>\n            </div>\n          </Group>\n        </UnstyledButton>\n      ))}\n    </Stack>\n  );\n}\n", "import { Button, Center, Checkbox, Group, Stack, Title } from '@mantine/core';\nimport { LoginAuthenticationResponse } from '@medplum/core';\nimport React from 'react';\nimport { Form } from '../Form/Form';\nimport { Logo } from '../Logo/Logo';\nimport { useMedplum } from '@medplum/react-hooks';\n\nexport interface ChooseScopeFormProps {\n  login: string;\n  scope: string | undefined;\n  handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function ChooseScopeForm(props: ChooseScopeFormProps): JSX.Element {\n  const medplum = useMedplum();\n  return (\n    <Form\n      style={{ maxWidth: 400 }}\n      onSubmit={(formData: Record<string, string>) => {\n        medplum\n          .post('auth/scope', {\n            login: props.login,\n            scope: Object.keys(formData).join(' '),\n          })\n          .then(props.handleAuthResponse)\n          .catch(console.log);\n      }}\n    >\n      <Stack>\n        <Center sx={{ flexDirection: 'column' }}>\n          <Logo size={32} />\n          <Title>Choose scope</Title>\n        </Center>\n        <Stack>\n          {(props.scope ?? 'openid').split(' ').map((scopeName: string) => (\n            <Checkbox key={scopeName} id={scopeName} name={scopeName} label={scopeName} defaultChecked />\n          ))}\n        </Stack>\n        <Group position=\"right\" mt=\"xl\">\n          <Button type=\"submit\">Set scope</Button>\n        </Group>\n      </Stack>\n    </Form>\n  );\n}\n", "import { Alert, Button, Center, Group, Stack, TextInput, Title } from '@mantine/core';\nimport { LoginAuthenticationResponse, normalizeErrorString } from '@medplum/core';\nimport { IconAlertCircle } from '@tabler/icons-react';\nimport React, { useState } from 'react';\nimport { Form } from '../Form/Form';\nimport { Logo } from '../Logo/Logo';\nimport { useMedplum } from '@medplum/react-hooks';\n\nexport interface MfaFormProps {\n  login: string;\n  handleAuthResponse: (response: LoginAuthenticationResponse) => void;\n}\n\nexport function MfaForm(props: MfaFormProps): JSX.Element {\n  const medplum = useMedplum();\n  const [errorMessage, setErrorMessage] = useState<string>();\n  return (\n    <Form\n      style={{ maxWidth: 400 }}\n      onSubmit={(formData: Record<string, string>) => {\n        setErrorMessage(undefined);\n        medplum\n          .post('auth/mfa/verify', {\n            login: props.login,\n            token: formData.token,\n          })\n          .then(props.handleAuthResponse)\n          .catch((err) => setErrorMessage(normalizeErrorString(err)));\n      }}\n    >\n      <Stack>\n        <Center sx={{ flexDirection: 'column' }}>\n          <Logo size={32} />\n          <Title>Enter MFA code</Title>\n        </Center>\n        {errorMessage && (\n          <Alert icon={<IconAlertCircle size={16} />} title=\"Error\" color=\"red\">\n            {errorMessage}\n          </Alert>\n        )}\n        <Stack>\n          <TextInput name=\"token\" label=\"MFA code\" required />\n        </Stack>\n        <Group position=\"right\" mt=\"xl\">\n          <Button type=\"submit\">Submit code</Button>\n        </Group>\n      </Stack>\n    </Form>\n  );\n}\n", "export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}", "import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;", "/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}", "import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}", "function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;", "export default {\n  disabled: false\n};", "import PropTypes from 'prop-types';\nexport var timeoutsShape = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n  enter: PropTypes.number,\n  exit: PropTypes.number,\n  appear: PropTypes.number\n}).isRequired]) : null;\nexport var classNamesShape = process.env.NODE_ENV !== 'production' ? PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  enter: PropTypes.string,\n  exit: PropTypes.string,\n  active: PropTypes.string\n}), PropTypes.shape({\n  enter: PropTypes.string,\n  enterDone: PropTypes.string,\n  enterActive: PropTypes.string,\n  exit: PropTypes.string,\n  exitDone: PropTypes.string,\n  exitActive: PropTypes.string\n})]) : null;", "import React from 'react';\nexport default React.createContext(null);", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport TransitionGroup from './TransitionGroup';\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\n\nvar ReplaceTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n\n    _this.handleEnter = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this.handleLifecycle('onEnter', 0, args);\n    };\n\n    _this.handleEntering = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this.handleLifecycle('onEntering', 0, args);\n    };\n\n    _this.handleEntered = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _this.handleLifecycle('onEntered', 0, args);\n    };\n\n    _this.handleExit = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return _this.handleLifecycle('onExit', 1, args);\n    };\n\n    _this.handleExiting = function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return _this.handleLifecycle('onExiting', 1, args);\n    };\n\n    _this.handleExited = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return _this.handleLifecycle('onExited', 1, args);\n    };\n\n    return _this;\n  }\n\n  var _proto = ReplaceTransition.prototype;\n\n  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n    var child = React.Children.toArray(children)[idx];\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n\n    if (this.props[handler]) {\n      var maybeNode = child.props.nodeRef ? undefined : ReactDOM.findDOMNode(this);\n      this.props[handler](maybeNode);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        inProp = _this$props.in,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\"]);\n\n    var _React$Children$toArr = React.Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n    return /*#__PURE__*/React.createElement(TransitionGroup, props, inProp ? React.cloneElement(first, {\n      key: 'first',\n      onEnter: this.handleEnter,\n      onEntering: this.handleEntering,\n      onEntered: this.handleEntered\n    }) : React.cloneElement(second, {\n      key: 'second',\n      onEnter: this.handleExit,\n      onEntering: this.handleExiting,\n      onEntered: this.handleExited\n    }));\n  };\n\n  return ReplaceTransition;\n}(React.Component);\n\nReplaceTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  in: PropTypes.bool.isRequired,\n  children: function children(props, propName) {\n    if (React.Children.count(props[propName]) !== 2) return new Error(\"\\\"\" + propName + \"\\\" must be exactly two transition components.\");\n    return null;\n  }\n} : {};\nexport default ReplaceTransition;", "export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}", "import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n};\n/**\n * The `<TransitionGroup>` component manages a set of transition components\n * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n * components, `<TransitionGroup>` is a state machine for managing the mounting\n * and unmounting of components over time.\n *\n * Consider the example below. As items are removed or added to the TodoList the\n * `in` prop is toggled automatically by the `<TransitionGroup>`.\n *\n * Note that `<TransitionGroup>`  does not define any animation behavior!\n * Exactly _how_ a list item animates is up to the individual transition\n * component. This means you can mix and match animations across different list\n * items.\n */\n\nvar TransitionGroup = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  } // node is `undefined` when user provided `nodeRef` prop\n  ;\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, /*#__PURE__*/React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;", "import { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      in: true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = (key in prevChildMapping);\n    var hasNext = (key in nextChildMapping);\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props.in; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        in: false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        in: prevChild.props.in,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}", "import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _leaveRenders, _enterRenders;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ENTERED, ENTERING, EXITING } from './Transition';\nimport TransitionGroupContext from './TransitionGroupContext';\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (React.isValidElement(oldChildren) && React.isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nexport var modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return React.cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [React.cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(ENTERED, React.cloneElement(children, {\n        in: true\n      }));\n    })\n  }), React.cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === ENTERING && props.mode === modes.in) {\n      return {\n        status: ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: EXITING\n      };\n    }\n\n    return {\n      current: React.cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/React.createElement(TransitionGroupContext.Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}(React.Component);\n\nSwitchTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: PropTypes.oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: PropTypes.oneOfType([PropTypes.element.isRequired])\n} : {};\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\nexport default SwitchTransition;", "import { createUseExternalEvents } from '@mantine/utils';\nimport type { NotificationProps } from './types';\n\nexport type NotificationsEvents = {\n  show(notification: NotificationProps): void;\n  hide(id: string): void;\n  update(notification: NotificationProps & { id: string }): void;\n  clean(): void;\n  cleanQueue(): void;\n};\n\nexport const [useNotificationsEvents, createEvent] =\n  createUseExternalEvents<NotificationsEvents>('mantine-notifications');\n\nexport const showNotification = createEvent('show');\nexport const hideNotification = createEvent('hide');\nexport const cleanNotifications = createEvent('clean');\nexport const cleanNotificationsQueue = createEvent('cleanQueue');\nexport const updateNotification = createEvent('update');\n\nexport const notifications: NotificationsEvents = {\n  show: showNotification,\n  hide: hideNotification,\n  clean: cleanNotifications,\n  cleanQueue: cleanNotificationsQueue,\n  update: updateNotification,\n};\n", "import { CSSObject } from '@mantine/core';\nimport { NotificationsPositioning } from '../../types';\n\nexport default function getPositionStyles(\n  [vertical, horizontal]: NotificationsPositioning,\n  spacing: number | string\n) {\n  const styles: CSSObject = {};\n\n  vertical === 'top' && (styles.top = spacing);\n  vertical === 'bottom' && (styles.bottom = spacing);\n\n  horizontal === 'left' && (styles.left = spacing);\n  horizontal === 'right' && (styles.right = spacing);\n  horizontal === 'center' && ((styles.left = '50%'), (styles.transform = 'translateX(-50%)'));\n\n  return styles;\n}\n", "import { TransitionStatus } from 'react-transition-group';\nimport { CSSObject } from '@mantine/core';\nimport { NotificationsPositioning } from '../../types';\n\ninterface NotificationStateStylesProps {\n  state: TransitionStatus;\n  maxHeight: number | string;\n  positioning: NotificationsPositioning;\n  transitionDuration: number;\n}\n\nconst transforms = {\n  left: 'translateX(-100%)',\n  right: 'translateX(100%)',\n  'top-center': 'translateY(-100%)',\n  'bottom-center': 'translateY(100%)',\n};\n\nconst noTransform = {\n  left: 'translateX(0)',\n  right: 'translateX(0)',\n  'top-center': 'translateY(0)',\n  'bottom-center': 'translateY(0)',\n};\n\nexport default function getNotificationStateStyles({\n  state,\n  maxHeight,\n  positioning,\n  transitionDuration,\n}: NotificationStateStylesProps): CSSObject {\n  const [vertical, horizontal] = positioning;\n  const property = horizontal === 'center' ? `${vertical}-center` : horizontal;\n\n  const commonStyles: CSSObject = {\n    opacity: 0,\n    maxHeight,\n    transform: transforms[property],\n    transitionDuration: `${transitionDuration}ms, ${transitionDuration}ms, ${transitionDuration}ms`,\n    transitionTimingFunction: 'cubic-bezier(.51,.3,0,1.21), cubic-bezier(.51,.3,0,1.21), linear',\n    transitionProperty: 'opacity, transform, max-height',\n  };\n\n  const inState: CSSObject = {\n    opacity: 1,\n    transform: noTransform[property],\n  };\n\n  const outState: CSSObject = {\n    opacity: 0,\n    maxHeight: 0,\n    transform: transforms[property],\n  };\n\n  const transitionStyles = {\n    entering: inState,\n    entered: inState,\n    exiting: outState,\n    exited: outState,\n  };\n\n  return { ...commonStyles, ...transitionStyles[state] };\n}\n", "export default function getAutoClose(\n  autoClose: boolean | number,\n  notificationAutoClose: boolean | number\n) {\n  if (typeof notificationAutoClose === 'number') {\n    return notificationAutoClose;\n  }\n\n  if (notificationAutoClose === false || autoClose === false) {\n    return false;\n  }\n\n  return autoClose;\n}\n", "import React, { useEffect, useRef } from 'react';\nimport { Notification, DefaultProps } from '@mantine/core';\nimport getAutoClose from './get-auto-close/get-auto-close';\nimport { NotificationProps } from '../types';\n\nexport interface NotificationContainerProps extends DefaultProps {\n  notification: NotificationProps;\n  onHide(id: string): void;\n  autoClose: false | number;\n  innerRef: React.ForwardedRef<HTMLDivElement>;\n}\n\nexport default function NotificationContainer({\n  notification,\n  autoClose,\n  onHide,\n  innerRef,\n  ...others\n}: NotificationContainerProps) {\n  const { autoClose: notificationAutoClose, message, ...notificationProps } = notification;\n  const autoCloseTimeout = getAutoClose(autoClose, notificationAutoClose);\n  const hideTimeout = useRef<number>();\n\n  const handleHide = () => {\n    onHide(notification.id);\n    window.clearTimeout(hideTimeout.current);\n  };\n\n  const cancelDelayedHide = () => {\n    clearTimeout(hideTimeout.current);\n  };\n\n  const handleDelayedHide = () => {\n    if (typeof autoCloseTimeout === 'number') {\n      hideTimeout.current = window.setTimeout(handleHide, autoCloseTimeout);\n    }\n  };\n\n  useEffect(() => {\n    if (typeof notification.onOpen === 'function') {\n      notification.onOpen(notification);\n    }\n  }, []);\n\n  useEffect(() => {\n    handleDelayedHide();\n    return cancelDelayedHide;\n  }, [autoClose, notification.autoClose]);\n\n  return (\n    <Notification\n      {...notificationProps}\n      {...others}\n      onClose={handleHide}\n      onMouseEnter={cancelDelayedHide}\n      onMouseLeave={handleDelayedHide}\n      ref={innerRef}\n    >\n      {message}\n    </Notification>\n  );\n}\n\nNotificationContainer.displayName = '@mantine/notifications/NotificationContainer';\n", "import { createStyles } from '@mantine/core';\n\ninterface NotificationsStylesParams {\n  zIndex: React.CSSProperties['zIndex'];\n}\n\nexport default createStyles((theme, { zIndex }: NotificationsStylesParams) => ({\n  notifications: {\n    width: `calc(100% - ${theme.spacing.md} * 2)`,\n    boxSizing: 'border-box',\n    position: 'fixed',\n    zIndex,\n  },\n\n  notification: {\n    '&:not(:first-of-type)': {\n      marginTop: theme.spacing.sm,\n    },\n  },\n}));\n", "import { useQueue, randomId } from '@mantine/hooks';\nimport { NotificationProps } from '../../types';\n\nexport default function useNotificationsState({ limit }: { limit: number }) {\n  const { state, queue, update, cleanQueue } = useQueue<NotificationProps>({\n    initialValues: [],\n    limit,\n  });\n\n  const showNotification = (notification: NotificationProps) => {\n    const id = notification.id || randomId();\n\n    update((notifications) => {\n      if (notification.id && notifications.some((n) => n.id === notification.id)) {\n        return notifications;\n      }\n\n      return [...notifications, { ...notification, id }];\n    });\n\n    return id;\n  };\n\n  const updateNotification = (notification: NotificationProps) =>\n    update((notifications) => {\n      const index = notifications.findIndex((n) => n.id === notification.id);\n\n      if (index === -1) {\n        return notifications;\n      }\n\n      const newNotifications = [...notifications];\n      newNotifications[index] = notification;\n\n      return newNotifications;\n    });\n\n  const hideNotification = (id: string) =>\n    update((notifications) =>\n      notifications.filter((notification) => {\n        if (notification.id === id) {\n          typeof notification.onClose === 'function' && notification.onClose(notification);\n          return false;\n        }\n\n        return true;\n      })\n    );\n\n  const clean = () => update(() => []);\n\n  return {\n    notifications: state,\n    queue,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    cleanQueue,\n    clean,\n  };\n}\n", "import React, { useRef } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport { DefaultProps, Portal, getDefaultZIndex, Box, PortalProps, rem } from '@mantine/core';\nimport { useReducedMotion, useForceUpdate, useDidUpdate } from '@mantine/hooks';\nimport { NotificationsPositioning } from '../types';\nimport {\n  notifications as GlobalNotifications,\n  NotificationsEvents,\n  useNotificationsEvents,\n} from '../events';\nimport getPositionStyles from './get-position-styles/get-position-styles';\nimport getNotificationStateStyles from './get-notification-state-styles/get-notification-state-styles';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer';\nimport useStyles from './Notifications.styles';\nimport useNotificationsState from './use-notifications-state/use-notifications-state';\n\nconst POSITIONS = [\n  'top-left',\n  'top-right',\n  'top-center',\n  'bottom-left',\n  'bottom-right',\n  'bottom-center',\n] as const;\n\ntype NotificationsStaticMethods = NotificationsEvents;\n\nexport interface NotificationsProps\n  extends Omit<DefaultProps, 'style'>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Notifications position */\n  position?:\n    | 'top-left'\n    | 'top-right'\n    | 'top-center'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'bottom-center';\n\n  /** Auto close timeout for all notifications, false to disable auto close, can be overwritten for individual notifications by notifications.show function */\n  autoClose?: number | false;\n\n  /** Notification transitions duration, 0 to turn transitions off */\n  transitionDuration?: number;\n\n  /** Notification width, cannot exceed 100% */\n  containerWidth?: number | string;\n\n  /** Notification max-height, used for transitions */\n  notificationMaxHeight?: number | string;\n\n  /** Maximum amount of notifications displayed at a time, other new notifications will be added to queue */\n  limit?: number;\n\n  /** Notifications container z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n\n  /** Target element of Portal component */\n  target?: PortalProps['target'];\n}\n\nexport const Notifications: React.FC<NotificationsProps> & NotificationsStaticMethods = ({\n  className,\n  position = 'bottom-right',\n  autoClose = 4000,\n  transitionDuration = 250,\n  containerWidth = rem(440),\n  notificationMaxHeight = rem(200),\n  limit = 5,\n  zIndex = getDefaultZIndex('overlay'),\n  style,\n  children,\n  target,\n  ...others\n}) => {\n  const forceUpdate = useForceUpdate();\n  const refs = useRef<Record<string, HTMLDivElement>>({});\n  const previousLength = useRef<number>(0);\n  const {\n    notifications,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    clean,\n    cleanQueue,\n  } = useNotificationsState({ limit });\n\n  const { classes, cx, theme } = useStyles({ zIndex });\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 1 : transitionDuration;\n  const positioning = (POSITIONS.includes(position) ? position : 'bottom-right').split(\n    '-'\n  ) as NotificationsPositioning;\n\n  useDidUpdate(() => {\n    if (notifications.length > previousLength.current) {\n      setTimeout(() => forceUpdate(), 0);\n    }\n    previousLength.current = notifications.length;\n  }, [notifications]);\n\n  useNotificationsEvents({\n    show: showNotification,\n    hide: hideNotification,\n    update: updateNotification,\n    clean,\n    cleanQueue,\n  });\n\n  const items = notifications.map((notification) => (\n    <Transition\n      key={notification.id}\n      timeout={duration}\n      onEnter={() => refs.current[notification.id].offsetHeight}\n      nodeRef={{ current: refs.current[notification.id] }}\n    >\n      {(state) => (\n        <NotificationContainer\n          innerRef={(node) => {\n            refs.current[notification.id] = node;\n          }}\n          notification={notification}\n          onHide={hideNotification}\n          className={classes.notification}\n          autoClose={autoClose}\n          sx={[\n            {\n              ...getNotificationStateStyles({\n                state,\n                positioning,\n                transitionDuration: duration,\n                maxHeight: notificationMaxHeight,\n              }),\n            },\n            ...(Array.isArray(notification.sx) ? notification.sx : [notification.sx]),\n          ]}\n        />\n      )}\n    </Transition>\n  ));\n\n  return (\n    <Portal target={target}>\n      <Box\n        className={cx(classes.notifications, className)}\n        style={style}\n        sx={{\n          maxWidth: containerWidth,\n          ...getPositionStyles(positioning, theme.spacing.md),\n        }}\n        {...others}\n      >\n        <TransitionGroup>{items}</TransitionGroup>\n      </Box>\n    </Portal>\n  );\n};\n\nNotifications.displayName = '@mantine/notifications/Notifications';\nNotifications.show = GlobalNotifications.show;\nNotifications.hide = GlobalNotifications.hide;\nNotifications.update = GlobalNotifications.update;\nNotifications.clean = GlobalNotifications.clean;\nNotifications.cleanQueue = GlobalNotifications.cleanQueue;\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "p", "_setPrototypeOf", "o", "import_prop_types", "import_react", "import_prop_types", "import_react", "PropTypes", "React", "Transition", "timeout", "ReactDOM", "children", "React", "PropTypes", "addClass", "removeClass", "CSSTransition", "_", "React", "PropTypes", "import_prop_types", "import_react", "import_react_dom", "import_prop_types", "import_react", "import_react", "children", "mapper", "k", "TransitionGroup", "children", "childFactory", "React", "PropTypes", "ReplaceTransition", "children", "React", "ReactDOM", "PropTypes", "import_react", "import_prop_types", "React", "callHook", "children", "SwitchTransition", "PropTypes", "b", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "b", "_a", "_a2", "React", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "b", "__spreadProps", "showNotification", "id", "notifications", "updateNotification", "hideNotification", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "b", "__objRest", "_a", "children", "notifications", "showNotification", "updateNotification", "hideNotification", "React", "GlobalNotifications", "import_react", "import_react", "import_prop_types", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "reactContext", "createContext", "useMedplumContext", "useContext", "useMedplum", "useMedplumNavigate", "useMedplumProfile", "MedplumProvider", "props", "medplum", "navigate", "defaultNavigate", "state", "setState", "useState", "useEffect", "eventListener", "medplumContext", "useMemo", "React", "path", "useResource", "value", "setOutcome", "resource", "setResource", "getInitialResource", "setResourceIfChanged", "useCallback", "r", "deepEquals", "subscribed", "isReference", "err", "normalizeOperationOutcome", "isResource", "useSearch", "resourceType", "query", "useSearchImpl", "useSearchOne", "useSearchResources", "searchFn", "searchKey", "setSearchKey", "loading", "setLoading", "result", "setResult", "outcome", "key", "res", "allOk", "AddressDisplay", "address", "formatAddress", "getLine", "index", "setLine", "str", "line", "AddressInput", "setValue", "valueRef", "useRef", "setValueWrapper", "newValue", "setUse", "use", "setType", "type", "setLine1", "line1", "setLine2", "line2", "setCity", "city", "setPostalCode", "postalCode", "Group", "NativeSelect", "e", "TextInput", "AnnotationInput", "author", "z", "setText", "text", "createReference", "defaultAttributes", "Fn", "createReactComponent", "iconName", "iconNamePascal", "iconNode", "Component", "forwardRef", "_a", "ref", "_b", "color", "size", "stroke", "children", "rest", "__objRest", "createElement", "__spreadValues", "__spreadProps", "tag", "attrs", "PropTypes", "IconAdjustmentsHorizontal", "IconAlertCircle", "IconArrowDown", "IconArrowUp", "IconBleachOff", "IconBleach", "IconBoxMultiple", "IconBracketsContain", "IconBucketOff", "IconBucket", "IconCalendar", "IconCheck", "IconCheckbox", "IconChevronDown", "IconCircleMinus", "IconCirclePlus", "IconCloudUpload", "IconColumns", "IconCopy", "IconCurrencyDollar", "IconDots", "IconEdit", "IconEqualNot", "IconEqual", "IconFileAlert", "IconFilePlus", "IconFilter", "IconListDetails", "IconLogout", "IconMathGreater", "IconMathLower", "IconMessage", "IconPin", "IconPinnedOff", "IconPlus", "IconRefresh", "IconSearch", "IconSettings", "IconSortAscending", "IconSortDescending", "IconSquare", "IconSwitchHorizontal", "IconTableExport", "IconTrash", "IconX", "ErrorBoundary", "error", "errorInfo", "Alert", "normalizeErrorString", "Loading", "Center", "Loader", "HumanNameDisplay", "name", "formatHumanName", "killEvent", "isCheckboxCell", "el", "isCheckboxElement", "MedplumLink", "w", "to", "suffix", "label", "onClick", "href", "getHref", "Anchor", "getStringHref", "getResourceHref", "getReferenceHref", "ResourceAvatar", "Z", "getDisplayString", "imageUrl", "getImageSrc", "radius", "avatarProps", "Avatar", "AsyncAutocomplete", "defaultValue", "toKey", "toOption", "loadOptions", "onChange", "onCreate", "creatable", "defaultItems", "toDefaultItems", "inputRef", "lastValue", "setLastValue", "timer", "setTimer", "abortController", "setAbortController", "autoSubmit", "setAutoSubmit", "selected", "setSelected", "options", "setOptions", "lastValueRef", "timerRef", "abortControllerRef", "autoSubmitRef", "optionsRef", "handleTimer", "newAbortController", "newValues", "showNotification", "handleSearchChange", "newTimer", "handleChange", "values", "newSelected", "option", "item", "handleKeyDown", "handleCreate", "input", "handleFilter", "_value", "MultiSelect", "useStyles", "createStyles", "HeaderSearchInput", "classes", "s", "loadData", "signal", "buildGraphQLQuery", "response", "getResourcesFromResponse", "handleSelect", "getReferenceString", "ItemComponent", "others", "helpText", "Text", "escaped", "isUUID", "resources", "sortByRelevance", "dedupeResources", "ids", "a", "b", "getResourceScore", "bestScore", "identifier", "getStringScore", "theme", "Header", "_c", "_d", "context", "m", "profile", "logins", "cx", "userMenuOpened", "setUserMenuOpened", "MantineHeader", "UnstyledButton", "Menu", "o", "Stack", "login", "parseForm", "form", "element", "parseInputElement", "parseSelectElement", "Form", "formData", "BookmarkDialog", "config", "submitHandler", "menuname", "target", "newConfig", "deepClone", "title", "Modal", "SelectMenu", "Button", "userConfigToMenu", "menu", "menus", "getDisplay", "createValue", "ValueSetAutocomplete", "binding", "clearable", "loadValues", "valueSetElements", "newData", "valueSetElement", "CodeInput", "newCode", "valueSetElementToCode", "codeToValueSetElement", "code", "ResourceTypeInput", "setResourceType", "setResourceTypeWrapper", "newResourceType", "Navbar", "activeLink", "getActiveLink", "bookmarkDialogVisible", "setBookmarkDialogVisible", "onLinkClick", "navigateResourceType", "MantineNavbar", "ScrollArea", "link", "NavbarLink", "NavLinkIcon", "Space", "currentPathname", "currentSearchParams", "bestLink", "score", "getLinkScore", "linkHref", "linkUrl", "ignoredParams", "count", "AppShell", "useMantineTheme", "navbarOpen", "setNavbarOpen", "setNavbarOpenWrapper", "open", "closeNavbar", "toggleNavbar", "MantineAppShell", "Suspense", "AttachmentDisplay", "contentType", "url", "getDownloadName", "AttachmentArrayDisplay", "v", "AttachmentButton", "fileInputRef", "onFileChange", "files", "processFile", "file", "filename", "binary", "AttachmentArrayInput", "setValues", "valuesRef", "setValuesWrapper", "ActionIcon", "copy", "attachment", "AttachmentInput", "DEFAULT_IGNORED_PROPERTIES", "DescriptionList", "compact", "DescriptionListEntry", "CodeableConceptDisplay", "formatCodeableConcept", "CodingDisplay", "formatCoding", "ContactPointDisplay", "contactPoint", "builder", "ContactDetailDisplay", "contactDetail", "telecom", "IdentifierDisplay", "MoneyDisplay", "formatMoney", "QuantityDisplay", "formatQuantity", "RangeDisplay", "formatRange", "RatioDisplay", "ReferenceDisplay", "displayString", "stringify", "ResourceArrayDisplay", "property", "propertyType", "ResourcePropertyDisplay", "Box", "CopyButton", "copied", "Tooltip", "PropertyType", "formatDateTime", "formatPeriod", "formatTiming", "BackboneElementDisplay", "getValueAndType", "typedResult", "getTypedPropertyValue", "typedValue", "typeName", "typeSchema", "tryGetDataType", "entry", "propertyValue", "getPropertyDisplayName", "CheckboxFormSection", "Input", "getErrorsForInput", "expression", "issue", "isExpressionMatch", "getIssuesForExpression", "expr1", "expr2", "dot1", "dot2", "FormSection", "setPropertyValue", "obj", "propName", "elementDefinition", "types", "compoundKey", "capitalize", "CodeableConceptInput", "newConcept", "valueSetElementToCodeableConcept", "codeableConceptToValueSetElement", "concept", "c", "elements", "CodingInput", "valueSetElementToCoding", "codingToValueSetElement", "coding", "ContactPointInput", "setContactPoint", "setContactPointWrapper", "setSystem", "system", "ContactDetailInput", "setContactDetail", "setContactDetailWrapper", "setName", "setTelecom", "convertIsoToLocal", "isoString", "date", "isValidDate", "convertLocalToIso", "localString", "DateTimeInput", "getInputType", "ExtensionInput", "JsonInput", "HumanNameInput", "setPrefix", "prefix", "setGiven", "given", "setFamily", "family", "setSuffix", "IdentifierInput", "data", "MoneyInput", "handleCurrencyChange", "handleValueChange", "select", "PeriodInput", "QuantityInput", "tryParseNumber", "RangeInput", "RatioInput", "SEARCH_CODES", "NAME_RESOURCE_TYPES", "ResourceInput", "searchCode", "getSearchParamForResourceType", "searchParams", "newResources", "ReferenceInput", "targetTypes", "getTargetTypes", "initialResourceType", "getInitialResourceType", "setValueHelper", "defaultValueResourceType", "ResourceArrayInput", "ResourcePropertyInput", "daysOfWeek", "TimingInput", "setOpen", "TimingEditorDialog", "setStart", "newStart", "setRepeat", "repeat", "setPeriod", "newPeriod", "setPeriodUnit", "newPeriodUnit", "setDaysOfWeek", "newDaysOfWeek", "Switch", "Chip", "day", "propertyTypes", "ElementDefinitionInputSelector", "ElementDefinitionTypeInput", "initialPropertyType", "t", "selectedType", "setSelectedType", "required", "Checkbox", "Textarea", "BackboneElementInput", "p", "getMonthString", "getStartMonth", "CalendarInput", "onChangeMonth", "month", "setMonth", "moveMonth", "delta", "currMonth", "newMonth", "grid", "buildGrid", "week", "weekIndex", "dayIndex", "startDate", "slots", "d", "row", "i", "isDayAvailable", "slot", "slotStart", "Container", "MantineContainer", "NoteDisplay", "note", "Blockquote", "ResourceName", "isOk", "ResourceBadge", "statusToColor", "StatusBadge", "Badge", "DiagnosticReportDisplay", "diagnosticReport", "specimens", "setSpecimens", "outcomes", "specimenNotes", "spec", "pf", "Title", "DiagnosticReportHeader", "SpecimenInfo", "ObservationTable", "interpreter", "performer", "List", "specimen", "ObservationRowGroup", "observation", "ObservationRow", "displayNotes", "critical", "isCritical", "ObservationValueDisplay", "ReferenceRangeDisplay", "obs", "formatObservationValue", "range", "width", "fill", "defaultProps", "Panel", "className", "unstyled", "useComponentDefaultProps", "Paper", "ResourceDiffTable", "schemaLoaded", "setSchemaLoaded", "getDataType", "originalPropertyValue", "originalPropertyType", "toTypedValue", "revisedPropertyValue", "revisedPropertyType", "isEmpty", "ResourceTable", "Timeline", "TimelineItem", "padding", "popupMenuItems", "dateTime", "sortByDateAndPriority", "timelineResource", "priority1", "getPriorityScore", "priority2", "getTime", "isSameResourceType", "priority", "ResourceTimeline", "sender", "history", "setHistory", "items", "setItems", "loadTimelineResources", "itemsRef", "sortAndSetItems", "newItmes", "handleBatchResponse", "batchResponse", "newItems", "settledResult", "bundle", "addResource", "loadTimeline", "id", "createComment", "contentString", "createMedia", "updateNotification", "reason", "setPriority", "communication", "onPin", "onUnpin", "onDetails", "timelineItem", "onEdit", "onDelete", "onVersionDetails", "version", "onUploadStart", "onUploadProgress", "getProgressMessage", "onUploadError", "HistoryTimelineItem", "AuditEventTimelineItem", "CommunicationTimelineItem", "DiagnosticReportTimelineItem", "MediaTimelineItem", "TimelineItemPopupMenu", "previous", "getPrevious", "entries", "percent", "formatFileSize", "bytes", "DefaultResourceTimeline", "_count", "Document", "EncounterTimeline", "_resourceType", "operator", "content", "FhirPathDisplay", "evalFhirPath", "SearchExportDialog", "ExportButton", "searchParamToOperators", "Operator", "operatorNames", "setFilters", "definition", "filters", "clearFilters", "clearFiltersOnField", "f", "addFilter", "field", "op", "opt_clear", "nextFilters", "addField", "newFields", "deleteFilter", "newFilters", "addYesterdayFilter", "addDayFilter", "addTodayFilter", "addTomorrowFilter", "startTime", "endTime", "addDateFilterBetween", "addLastMonthFilter", "addMonthFilter", "addThisMonthFilter", "addNextMonthFilter", "addYearToDateFilter", "d1", "d2", "addDateFilterImpl", "addMissingFilter", "setOffset", "offset", "setPage", "page", "DEFAULT_SEARCH_COUNT", "newOffset", "setSort", "sort", "desc", "getSortField", "isSortDescending", "toggleSort", "sortRules", "getSearchOperators", "searchParam", "getOpString", "buildFieldNameString", "tmp", "renderValue", "renderPropertyValue", "renderSearchParameterValue", "evalFhirPathTyped", "SearchFieldEditor", "wasDropdownOpen", "isDropdownOpen", "setIsDropdownOpen", "allFields", "getSearchParameters", "getFieldsList", "keys", "names", "SearchFilterValueDisplay", "filter", "globalSchema", "searchParamDetails", "getSearchParameterDetails", "SearchParameterType", "SearchFilterValueInput", "details", "newReference", "tryParseQuantity", "newQuantity", "valueString", "systemString", "unitString", "SearchFilterEditor", "search", "setSearch", "editingIndex", "setEditingIndex", "searchRef", "onAddFilter", "FilterRowInput", "newFilter", "FilterRowDisplay", "setFilterCode", "setFilterOperator", "newOperator", "setFilterValue", "newFilterValue", "operators", "param", "SearchFilterValueDialog", "onOk", "Grid", "SearchPopupMenu", "onSort", "onClear", "onPrompt", "SearchParameterSubMenu", "DateFilterSubMenu", "NumericFilterSubMenu", "ReferenceFilterSubMenu", "TextFilterSubMenu", "CommonMenuItems", "getFieldDefinitions", "fields", "getFieldDefinition", "exactElementDefinition", "getElementDefinition", "exactSearchParam", "getSearchParameter", "allSearchParams", "pathRegex", "SearchChangeEvent", "SearchLoadEvent", "SearchClickEvent", "browserEvent", "SearchControl", "onLoad", "stateRef", "totalType", "loadResults", "formatSearchQuery", "refreshResults", "handleSingleCheckboxClick", "checked", "handleAllCheckboxClick", "searchResponse", "isAllSelected", "emitSearchChange", "newSearch", "handleRowClick", "isAux", "isExportPassed", "checkboxColumn", "lastResult", "buttonVariant", "buttonColor", "iconSize", "isMobile", "getStart", "getEnd", "Table", "FilterDescription", "Pagination", "getPage", "getTotalPages", "newPage", "control", "MemoizedSearchControl", "total", "pageSize", "FhirPathTable", "setResponse", "responseRef", "selectedRef", "MemoizedFhirPathTable", "Logo", "MeasureReportGroupDisplay", "group", "MeasureScore", "MeasureReportPopulation", "MeasureTitle", "measure", "populations", "numerator", "denominator", "numeratorCount", "denominatorCount", "RingProgress", "groupColor", "Flex", "unit", "groupValue", "MeasureReportDisplay", "report", "oe", "SimpleGrid", "idx", "OperationOutcomeAlert", "issues", "operationOutcomeIssueToString", "PatientTimeline", "PlanDefinitionBuilder", "selectedKey", "setSelectedKey", "hoverKey", "setHoverKey", "handleDocumentMouseOver", "handleDocumentClick", "ensurePlanDefinitionKeys", "changeProperty", "ActionArrayBuilder", "x", "actionsRef", "changeAction", "changedAction", "addAction", "addedAction", "removeAction", "removedAction", "action", "ActionBuilder", "generateId", "actionType", "getInitialActionType", "editing", "hovering", "onHover", "ActionEditor", "ActionDisplay", "timingProperty", "getActionTiming", "setActionType", "ActionResourceTypeBuilder", "ActionTimingInput", "definitionCanonical", "reference", "nextId", "existing", "existingNum", "planDefinition", "ensurePlanDefinitionActionKeys", "actions", "QuestionnaireItemType", "isChoiceQuestion", "isQuestionEnabled", "responseItems", "enableBehavior", "enableWhen", "actualAnswers", "getByLinkId", "anyMatch", "allMatch", "checkAnswers", "getNewMultiSelectValues", "propertyName", "optionValue", "linkId", "nestedAnswer", "evaluateMatch", "actualAnswer", "expectedAnswer", "fhirPathOperator", "answers", "actualAnswerValue", "getQuestionnaireItemReferenceTargetTypes", "extension", "getExtension", "setQuestionnaireItemReferenceTargetTypes", "buildInitialResponse", "questionnaire", "buildInitialResponseItems", "buildInitialResponseItem", "buildInitialResponseAnswer", "answer", "formatReferenceString", "getNumberOfPages", "_e", "firstItem", "QuestionnaireFormItem", "onChangeAnswer", "newResponseAnswer", "updatedAnswers", "initial", "getCurrentAnswer", "isDropDownChoice", "QuestionnaireChoiceDropDownInput", "QuestionnaireChoiceSetInput", "NoAnswerDisplay", "initialValue", "typedValueToString", "formatSelectData", "currentAnswer", "getCurrentMultiSelectAnswer", "QuestionnaireChoiceRadioInput", "valueElementDefinition", "optionName", "defaultAnswer", "answerLinkId", "getCurrentRadioAnswer", "Radio", "getItemValue", "results", "getValueAndLabel", "QuestionnaireBuilder", "ensureQuestionnaireKeys", "ItemBuilder", "isResourceType", "isContainer", "itemRef", "changeItem", "changedItem", "curr", "addItem", "addedItem", "removeItem", "removedItem", "updateItem", "updatedItem", "toggleRepeatable", "moveItem", "itemIndex", "updatedItems", "reorderItems", "ReferenceProfiles", "AnswerBuilder", "generateLinkId", "createPage", "AnswerOptionsInput", "newOptions", "targetType", "nextLinkId", "ensureQuestionnaireItemKeys", "ensureQuestionnaireOptionKeys", "currentItems", "newIndex", "QuestionnaireRepeatableItem", "number", "setNumber", "getNumberOfRepeats", "showAddButton", "_", "n", "QuestionnaireRepeatedGroup", "responses", "setResponses", "handleRepeatableGroup", "newResponseItems", "newResponses", "insertNewGroup", "newResponse", "QuestionnaireGroup", "checkForQuestionEnabled", "onSetGroup", "newResponseItem", "mergedResponse", "current", "groupResponse", "QuestionnairePageSequence", "activePage", "nextStep", "prevStep", "numberOfPages", "renderPages", "submitButtonText", "itemResponse", "repeatedItem", "Stepper", "ButtonGroup", "showBackButton", "showNextButton", "showSubmitButton", "QuestionnaireForm", "source", "setActivePage", "mergeItems", "mergeIndividualItems", "prevItem", "newItem", "mergedNestedItems", "prevItems", "usedIds", "itemId", "intervalFilters", "ReferenceRangeEditor", "defaultDefinition", "intervalGroups", "setIntervalGroups", "groupId", "setGroupId", "intervalId", "setIntervalId", "ensureQualifiedIntervalKeys", "groupQualifiedIntervals", "submitDefinition", "intervalGroup", "ReferenceRangeGroupEditor", "getUnitString", "changeInterval", "addInterval", "removeInterval", "removeGroup", "addGroup", "qualifiedInterval", "interval", "isEmptyInterval", "addedGroup", "currentGroups", "removedGroup", "changedInterval", "groups", "currentGroup", "g", "addedInterval", "currentGroupIndex", "removedInterval", "ReferenceRangeGroupFilters", "Divider", "newGender", "ageRange", "newEndocrine", "newCategory", "intervals", "groupKey", "generateGroupKey", "getCodeBySystem", "RequestGroupDisplay", "requestGroup", "startedLoading", "setStartedLoading", "responseBundle", "setResponseBundle", "buildBatchRequest", "_f", "task", "findBundleEntry", "taskInput", "taskOutput", "request", "batchEntries", "diff", "original", "revised", "buildPath", "buildRevisions", "orig", "rev", "N", "M", "MAX", "middle", "diagonal", "k", "kmiddle", "kplus", "kminus", "kplusNode", "kminusNode", "prev", "j", "node", "previousSnake", "startNode", "deltas", "ianchor", "janchor", "blame", "versions", "table", "compareVersions", "combineSpans", "revisions", "revision", "position", "oldLines", "newLines", "start", "getVersionUrl", "versionId", "getTimeString", "lastUpdated", "seconds", "years", "pluralizeTime", "months", "days", "hours", "minutes", "noun", "ResourceBlame", "ResourceDiff", "originalResource", "revisedResource", "ChangeDiff", "ResourceForm", "ResourceHistoryTable", "HistoryRow", "Scheduler", "schedule", "setDate", "setSlot", "ue", "actor", "formatTime", "formatSlotInstant", "time", "ServiceRequestTimeline", "NewProjectForm", "createScriptTag", "src", "onload", "head", "script", "GoogleButton", "googleClientId", "handleGoogleCredential", "parentRef", "scriptLoaded", "setScriptLoaded", "initialized", "setInitialized", "buttonRendered", "setButtonRendered", "getGoogleClientId", "clientId", "origin", "initRecaptcha", "siteKey", "getRecaptcha", "resolve", "reject", "NewUserForm", "recaptchaSiteKey", "recaptchaToken", "PasswordInput", "RegisterForm", "projectId", "onSuccess", "setLogin", "handleAuthResponse", "AuthenticationForm", "email", "setEmail", "PasswordForm", "EmailForm", "onRegister", "disableEmailAuth", "baseLoginRequest", "isExternalAuth", "authMethod", "handleSubmit", "authResponse", "onForgotPassword", "ChooseProfileForm", "membership", "ChooseScopeForm", "scopeName", "MfaForm", "errorMessage", "setErrorMessage", "SignInForm", "loginCode", "chooseScopes", "onCode", "mfaRequired", "setAuthenticatorRequired", "memberships", "setMemberships", "handleCode", "handleScopeResponse"]
}
